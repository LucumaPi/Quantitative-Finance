<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespaceStandardLattice" kind="namespace" language="C++">
    <compoundname>StandardLattice</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceStandardLattice_1a0ced6d331b2856d61096bdc9aaab15cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLattice" kindref="compound">Lattice</ref>&lt; double, int, 2 &gt;</type>
        <definition>Lattice&lt;double, int, 2&gt; StandardLattice::createLattice</definition>
        <argsstring>(int N, double rootValue, double up, double down)</argsstring>
        <name>createLattice</name>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rootValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>up</declname>
        </param>
        <param>
          <type>double</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TestLatticeNamespace.cc" line="17" column="9" bodyfile="src/TestLatticeNamespace.cc" bodystart="17" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceStandardLattice_1a3e49a59024bcef068e558f70a756df05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double StandardLattice::traverse</definition>
        <argsstring>(Lattice&lt; double, int, 2 &gt; &amp;lattice, Vector&lt; double, int &gt; &amp;Payoff, double p, double discounting)</argsstring>
        <name>traverse</name>
        <param>
          <type><ref refid="classLattice" kindref="compound">Lattice</ref>&lt; double, int, 2 &gt; &amp;</type>
          <declname>lattice</declname>
        </param>
        <param>
          <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double, int &gt; &amp;</type>
          <declname>Payoff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>discounting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TestLatticeNamespace.cc" line="41" column="8" bodyfile="src/TestLatticeNamespace.cc" bodystart="41" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/TestLatticeNamespace.cc" line="15" column="1"/>
  </compounddef>
</doxygen>
