<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classMultiAssetPayoff" kind="class" language="C++" prot="public">
    <compoundname>MultiAssetPayoff</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMultiAssetPayoff_1a094d8d9d0c3268f0ee1c46d5c7d8edd6" prot="private" static="no" mutable="no">
        <type><ref refid="classMultiAssetPayoffStrategy" kindref="compound">MultiAssetPayoffStrategy</ref> *</type>
        <definition>MultiAssetPayoffStrategy* MultiAssetPayoff::ps</definition>
        <argsstring></argsstring>
        <name>ps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="18" column="26" bodyfile="MultiAssetPayoff.hh" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMultiAssetPayoff_1a57df16c0a7320254c71e902d7c4c2aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiAssetPayoff::MultiAssetPayoff</definition>
        <argsstring>(MultiAssetPayoffStrategy &amp;pstrat)</argsstring>
        <name>MultiAssetPayoff</name>
        <param>
          <type><ref refid="classMultiAssetPayoffStrategy" kindref="compound">MultiAssetPayoffStrategy</ref> &amp;</type>
          <declname>pstrat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="21" column="1" bodyfile="MultiAssetPayoff.cc" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classMultiAssetPayoff_1a5bc9e443f16024a235224cf7a07fc5cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiAssetPayoff::MultiAssetPayoff</definition>
        <argsstring>(const MultiAssetPayoff &amp;source)</argsstring>
        <name>MultiAssetPayoff</name>
        <param>
          <type>const <ref refid="classMultiAssetPayoff" kindref="compound">MultiAssetPayoff</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="22" column="1" bodyfile="MultiAssetPayoff.cc" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classMultiAssetPayoff_1a4ceb8ca5e2e4c0bab356f461217ab2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>MultiAssetPayoff::~MultiAssetPayoff</definition>
        <argsstring>()</argsstring>
        <name>~MultiAssetPayoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="23" column="9" bodyfile="MultiAssetPayoff.cc" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classMultiAssetPayoff_1a4b13a7823b6fd62247b8d4c6a7eccbf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMultiAssetPayoff" kindref="compound">MultiAssetPayoff</ref> &amp;</type>
        <definition>MultiAssetPayoff &amp; MultiAssetPayoff::operator=</definition>
        <argsstring>(const MultiAssetPayoff &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classMultiAssetPayoff" kindref="compound">MultiAssetPayoff</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="26" column="18" bodyfile="MultiAssetPayoff.cc" bodystart="31" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classMultiAssetPayoff_1a5c152db2417d285484ef94ba0c5c0694" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double MultiAssetPayoff::Payoff</definition>
        <argsstring>(double S1, double S2) const</argsstring>
        <name>Payoff</name>
        <param>
          <type>double</type>
          <declname>S1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>S2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MultiAssetPayoff.hh" line="29" column="16" bodyfile="MultiAssetPayoff.cc" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>MultiAssetPayoff</label>
        <link refid="classMultiAssetPayoff"/>
      </node>
    </collaborationgraph>
    <location file="MultiAssetPayoff.hh" line="16" column="1" bodyfile="MultiAssetPayoff.hh" bodystart="15" bodyend="30"/>
    <listofallmembers>
      <member refid="classMultiAssetPayoff_1a57df16c0a7320254c71e902d7c4c2aeb" prot="public" virt="non-virtual"><scope>MultiAssetPayoff</scope><name>MultiAssetPayoff</name></member>
      <member refid="classMultiAssetPayoff_1a5bc9e443f16024a235224cf7a07fc5cf" prot="public" virt="non-virtual"><scope>MultiAssetPayoff</scope><name>MultiAssetPayoff</name></member>
      <member refid="classMultiAssetPayoff_1a4b13a7823b6fd62247b8d4c6a7eccbf2" prot="public" virt="non-virtual"><scope>MultiAssetPayoff</scope><name>operator=</name></member>
      <member refid="classMultiAssetPayoff_1a5c152db2417d285484ef94ba0c5c0694" prot="public" virt="virtual"><scope>MultiAssetPayoff</scope><name>Payoff</name></member>
      <member refid="classMultiAssetPayoff_1a094d8d9d0c3268f0ee1c46d5c7d8edd6" prot="private" virt="non-virtual"><scope>MultiAssetPayoff</scope><name>ps</name></member>
      <member refid="classMultiAssetPayoff_1a4ceb8ca5e2e4c0bab356f461217ab2f2" prot="public" virt="virtual"><scope>MultiAssetPayoff</scope><name>~MultiAssetPayoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
