<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classRelation" kind="class" language="C++" prot="public">
    <compoundname>Relation</compoundname>
    <includes refid="Relation_8hh" local="no">Relation.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
      <param>
        <type>class</type>
        <declname>R</declname>
        <defname>R</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classRelation_1af68e62c9cf16d7e2dff81950298dc778" prot="public" static="no">
        <type>std::multimap&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt;::<ref refid="classRelation_1af68e62c9cf16d7e2dff81950298dc778" kindref="member">iterator</ref></type>
        <definition>typedef std::multimap&lt;D, R&gt;::iterator Relation&lt; D, R &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="76" column="43" bodyfile="include/duffy/Relation.hh" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" prot="public" static="no">
        <type>std::multimap&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt;::<ref refid="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" kindref="member">const_iterator</ref></type>
        <definition>typedef std::multimap&lt;D, R&gt;::const_iterator Relation&lt; D, R &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="77" column="49" bodyfile="include/duffy/Relation.hh" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRelation_1a3377b326df68d54e890873e4800ac522" prot="public" static="no">
        <type>std::multimap&lt; R, <ref refid="classD" kindref="compound">D</ref> &gt;::<ref refid="classRelation_1af68e62c9cf16d7e2dff81950298dc778" kindref="member">iterator</ref></type>
        <definition>typedef std::multimap&lt;R, D&gt;::iterator Relation&lt; D, R &gt;::iteratorInv</definition>
        <argsstring></argsstring>
        <name>iteratorInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="85" column="43" bodyfile="include/duffy/Relation.hh" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRelation_1aecd60a1fa82a4b3dae9ec442dd1096ed" prot="public" static="no">
        <type>std::multimap&lt; R, <ref refid="classD" kindref="compound">D</ref> &gt;::<ref refid="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" kindref="member">const_iterator</ref></type>
        <definition>typedef std::multimap&lt;R, D&gt;::const_iterator Relation&lt; D, R &gt;::const_iteratorInv</definition>
        <argsstring></argsstring>
        <name>const_iteratorInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="86" column="49" bodyfile="include/duffy/Relation.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRelation_1ae3257e8e0e27fc143790453abcfd5a2f" prot="private" static="no" mutable="no">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; <ref refid="classD" kindref="compound">D</ref> &gt;</type>
        <definition>Set&lt;D&gt; Relation&lt; D, R &gt;::s1</definition>
        <argsstring></argsstring>
        <name>s1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="43" column="5" bodyfile="include/duffy/Relation.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRelation_1a50af13bb942a8b39baa48d5fb092fbe5" prot="private" static="no" mutable="no">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; R &gt;</type>
        <definition>Set&lt;R&gt; Relation&lt; D, R &gt;::s2</definition>
        <argsstring></argsstring>
        <name>s2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="44" column="5" bodyfile="include/duffy/Relation.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRelation_1a1eeea02afe22bfbd90d9b8ee0924397d" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt;</type>
        <definition>std::multimap&lt;D, R&gt; Relation&lt; D, R &gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="48" column="15" bodyfile="include/duffy/Relation.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRelation_1a8d7ee12fbec6fdfd14f0276c208d20ce" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; R, <ref refid="classD" kindref="compound">D</ref> &gt;</type>
        <definition>std::multimap&lt;R, D&gt; Relation&lt; D, R &gt;::finv</definition>
        <argsstring></argsstring>
        <name>finv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="49" column="15" bodyfile="include/duffy/Relation.hh" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRelation_1a36145dd40aa468c579ac6e531b0ac588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Relation&lt; D, R &gt;::Relation</definition>
        <argsstring>()</argsstring>
        <name>Relation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="56" column="1" bodyfile="src/Relation.cc" bodystart="53" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1aae3172d175b898c286d82916f191174c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Relation&lt; D, R &gt;::Relation</definition>
        <argsstring>(const Set&lt; D &gt; &amp;domainSet, const Set&lt; R &gt; &amp;rangeSet)</argsstring>
        <name>Relation</name>
        <param>
          <type>const <ref refid="classSet" kindref="compound">Set</ref>&lt; <ref refid="classD" kindref="compound">D</ref> &gt; &amp;</type>
          <declname>domainSet</declname>
        </param>
        <param>
          <type>const <ref refid="classSet" kindref="compound">Set</ref>&lt; R &gt; &amp;</type>
          <declname>rangeSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="57" column="1" bodyfile="src/Relation.cc" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1af344472b21613144a5db861d5d7f1437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Relation&lt; D, R &gt;::Relation</definition>
        <argsstring>(const Relation&lt; D, R &gt; &amp;r2)</argsstring>
        <name>Relation</name>
        <param>
          <type>const <ref refid="classRelation" kindref="compound">Relation</ref>&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="58" column="1" bodyfile="src/Relation.cc" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a3850e9c9495624d27e7813cc6e0dc763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::addDomainElement</definition>
        <argsstring>(const D &amp;d)</argsstring>
        <name>addDomainElement</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="63" column="6" bodyfile="src/Relation.cc" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a8bbc53597b97db93008a82d5b7ff54cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::addRangeElement</definition>
        <argsstring>(const R &amp;r)</argsstring>
        <name>addRangeElement</name>
        <param>
          <type>const R &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="64" column="6" bodyfile="src/Relation.cc" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a30b7ecfff53dda24b5661215e63b3aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::removeDomainElement</definition>
        <argsstring>(const D &amp;d)</argsstring>
        <name>removeDomainElement</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="65" column="6" bodyfile="src/Relation.cc" bodystart="125" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1adf2bd0433cf8eb255e0b595d8502afad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::removeRangeElement</definition>
        <argsstring>(const R &amp;r)</argsstring>
        <name>removeRangeElement</name>
        <param>
          <type>const R &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="66" column="6" bodyfile="src/Relation.cc" bodystart="160" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a0d4bdc5ed486ffbef37ae2e489166834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::addRelation</definition>
        <argsstring>(const D &amp;d, const R &amp;r)</argsstring>
        <name>addRelation</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const R &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="69" column="6" bodyfile="src/Relation.cc" bodystart="193" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a6fe1980b85fd0a4d59ed6ca3dbb52a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::removeRelation</definition>
        <argsstring>(const D &amp;d)</argsstring>
        <name>removeRelation</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="70" column="6" bodyfile="src/Relation.cc" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1aac3d30ad0639de420ec0d496ca78696f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::ClearAll</definition>
        <argsstring>()</argsstring>
        <name>ClearAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="71" column="6" bodyfile="src/Relation.cc" bodystart="225" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a401a214a659d7005d830e1d5573075ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Relation&lt; D, R &gt;::ClearLinks</definition>
        <argsstring>()</argsstring>
        <name>ClearLinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="72" column="6" bodyfile="src/Relation.cc" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a97ba3b83f8b68901191248b72b4d2a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1af68e62c9cf16d7e2dff81950298dc778" kindref="member">iterator</ref></type>
        <definition>Relation&lt; D, R &gt;::iterator Relation&lt; D, R &gt;::Begin</definition>
        <argsstring>()</argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="79" column="10" bodyfile="src/Relation.cc" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a8c1e8ca4826fced1256829a4779d9d8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" kindref="member">const_iterator</ref></type>
        <definition>Relation&lt; D, R &gt;::const_iterator Relation&lt; D, R &gt;::Begin</definition>
        <argsstring>() const</argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="80" column="16" bodyfile="src/Relation.cc" bodystart="325" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a068ca856b6e3b6bffd24117b405c01ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1af68e62c9cf16d7e2dff81950298dc778" kindref="member">iterator</ref></type>
        <definition>Relation&lt; D, R &gt;::iterator Relation&lt; D, R &gt;::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="81" column="10" bodyfile="src/Relation.cc" bodystart="333" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ab5fee537bbc5a9748881a6bbe25bbdd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" kindref="member">const_iterator</ref></type>
        <definition>Relation&lt; D, R &gt;::const_iterator Relation&lt; D, R &gt;::End</definition>
        <argsstring>() const</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="82" column="16" bodyfile="src/Relation.cc" bodystart="341" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ae76135e50d636a11e65658f44ffa0551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1a3377b326df68d54e890873e4800ac522" kindref="member">iteratorInv</ref></type>
        <definition>Relation&lt; D, R &gt;::iteratorInv Relation&lt; D, R &gt;::BeginInv</definition>
        <argsstring>()</argsstring>
        <name>BeginInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="88" column="13" bodyfile="src/Relation.cc" bodystart="350" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ad8fc7581e55ca1f3ae7c174e928d0bd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1aecd60a1fa82a4b3dae9ec442dd1096ed" kindref="member">const_iteratorInv</ref></type>
        <definition>Relation&lt; D, R &gt;::const_iteratorInv Relation&lt; D, R &gt;::BeginInv</definition>
        <argsstring>() const</argsstring>
        <name>BeginInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="89" column="19" bodyfile="src/Relation.cc" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a2f972862a46f4d4fdd8f5e607f67a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1a3377b326df68d54e890873e4800ac522" kindref="member">iteratorInv</ref></type>
        <definition>Relation&lt; D, R &gt;::iteratorInv Relation&lt; D, R &gt;::EndInv</definition>
        <argsstring>()</argsstring>
        <name>EndInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="90" column="13" bodyfile="src/Relation.cc" bodystart="365" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ada45ef3553ea10f6ffeb01429d41112c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation_1aecd60a1fa82a4b3dae9ec442dd1096ed" kindref="member">const_iteratorInv</ref></type>
        <definition>Relation&lt; D, R &gt;::const_iteratorInv Relation&lt; D, R &gt;::EndInv</definition>
        <argsstring>() const</argsstring>
        <name>EndInv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="91" column="19" bodyfile="src/Relation.cc" bodystart="373" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a6df4cdb10cd950968cf21fafdec4bb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classSet" kindref="compound">Set</ref>&lt; <ref refid="classD" kindref="compound">D</ref> &gt; &amp;</type>
        <definition>const Set&lt; D &gt; &amp; Relation&lt; D, R &gt;::DomainSet</definition>
        <argsstring>()</argsstring>
        <name>DomainSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="95" column="11" bodyfile="src/Relation.cc" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ae7d89135038109b9ff7ef4c6590a112e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classSet" kindref="compound">Set</ref>&lt; R &gt; &amp;</type>
        <definition>const Set&lt; R &gt; &amp; Relation&lt; D, R &gt;::RangeSet</definition>
        <argsstring>()</argsstring>
        <name>RangeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="96" column="11" bodyfile="src/Relation.cc" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ab946892376f95ed757414e3fadc36f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; R &gt;</type>
        <definition>Set&lt; R &gt; Relation&lt; D, R &gt;::range</definition>
        <argsstring>(const D &amp;d)</argsstring>
        <name>range</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="98" column="5" bodyfile="src/Relation.cc" bodystart="257" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a0ff46cfb436345dab2707b36b94a152a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; <ref refid="classD" kindref="compound">D</ref> &gt;</type>
        <definition>Set&lt; D &gt; Relation&lt; D, R &gt;::domain</definition>
        <argsstring>(const R &amp;r)</argsstring>
        <name>domain</name>
        <param>
          <type>const R &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="99" column="5" bodyfile="src/Relation.cc" bodystart="281" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1af7602723b04b55522372eae5d70fff52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Relation&lt; D, R &gt;::inDomain</definition>
        <argsstring>(const D &amp;d) const</argsstring>
        <name>inDomain</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="101" column="6" bodyfile="src/Relation.cc" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1a8dd9f0681135740849f9dd20ae4ee13a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Relation&lt; D, R &gt;::inRange</definition>
        <argsstring>(const D &amp;r) const</argsstring>
        <name>inRange</name>
        <param>
          <type>const <ref refid="classD" kindref="compound">D</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="102" column="6" bodyfile="src/Relation.cc" bodystart="308" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1acc3976a5e2e72dd33d7d05bee2b286fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Relation&lt; D, R &gt;::~Relation</definition>
        <argsstring>()</argsstring>
        <name>~Relation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="104" column="9" bodyfile="src/Relation.cc" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classRelation_1ae4668d138c1cc9cfc607729a32b2772e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRelation" kindref="compound">Relation</ref>&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt; &amp;</type>
        <definition>Relation&lt; D, R &gt; &amp; Relation&lt; D, R &gt;::operator=</definition>
        <argsstring>(const Relation&lt; D, R &gt; &amp;r2)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classRelation" kindref="compound">Relation</ref>&lt; <ref refid="classD" kindref="compound">D</ref>, R &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Relation.hh" line="105" column="10" bodyfile="src/Relation.cc" bodystart="90" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Relation&lt; D, R &gt;</label>
        <link refid="classRelation"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Relation.hh" line="40" column="1" bodyfile="include/duffy/Relation.hh" bodystart="39" bodyend="107"/>
    <listofallmembers>
      <member refid="classRelation_1a3850e9c9495624d27e7813cc6e0dc763" prot="public" virt="non-virtual"><scope>Relation</scope><name>addDomainElement</name></member>
      <member refid="classRelation_1a8bbc53597b97db93008a82d5b7ff54cb" prot="public" virt="non-virtual"><scope>Relation</scope><name>addRangeElement</name></member>
      <member refid="classRelation_1a0d4bdc5ed486ffbef37ae2e489166834" prot="public" virt="non-virtual"><scope>Relation</scope><name>addRelation</name></member>
      <member refid="classRelation_1a97ba3b83f8b68901191248b72b4d2a14" prot="public" virt="non-virtual"><scope>Relation</scope><name>Begin</name></member>
      <member refid="classRelation_1a8c1e8ca4826fced1256829a4779d9d8c" prot="public" virt="non-virtual"><scope>Relation</scope><name>Begin</name></member>
      <member refid="classRelation_1ae76135e50d636a11e65658f44ffa0551" prot="public" virt="non-virtual"><scope>Relation</scope><name>BeginInv</name></member>
      <member refid="classRelation_1ad8fc7581e55ca1f3ae7c174e928d0bd8" prot="public" virt="non-virtual"><scope>Relation</scope><name>BeginInv</name></member>
      <member refid="classRelation_1aac3d30ad0639de420ec0d496ca78696f" prot="public" virt="non-virtual"><scope>Relation</scope><name>ClearAll</name></member>
      <member refid="classRelation_1a401a214a659d7005d830e1d5573075ed" prot="public" virt="non-virtual"><scope>Relation</scope><name>ClearLinks</name></member>
      <member refid="classRelation_1a281fd0ec83966c0c8ba00e59364c3152" prot="public" virt="non-virtual"><scope>Relation</scope><name>const_iterator</name></member>
      <member refid="classRelation_1aecd60a1fa82a4b3dae9ec442dd1096ed" prot="public" virt="non-virtual"><scope>Relation</scope><name>const_iteratorInv</name></member>
      <member refid="classRelation_1a0ff46cfb436345dab2707b36b94a152a" prot="public" virt="non-virtual"><scope>Relation</scope><name>domain</name></member>
      <member refid="classRelation_1a6df4cdb10cd950968cf21fafdec4bb83" prot="public" virt="non-virtual"><scope>Relation</scope><name>DomainSet</name></member>
      <member refid="classRelation_1a068ca856b6e3b6bffd24117b405c01ae" prot="public" virt="non-virtual"><scope>Relation</scope><name>End</name></member>
      <member refid="classRelation_1ab5fee537bbc5a9748881a6bbe25bbdd2" prot="public" virt="non-virtual"><scope>Relation</scope><name>End</name></member>
      <member refid="classRelation_1a2f972862a46f4d4fdd8f5e607f67a449" prot="public" virt="non-virtual"><scope>Relation</scope><name>EndInv</name></member>
      <member refid="classRelation_1ada45ef3553ea10f6ffeb01429d41112c" prot="public" virt="non-virtual"><scope>Relation</scope><name>EndInv</name></member>
      <member refid="classRelation_1a1eeea02afe22bfbd90d9b8ee0924397d" prot="private" virt="non-virtual"><scope>Relation</scope><name>f</name></member>
      <member refid="classRelation_1a8d7ee12fbec6fdfd14f0276c208d20ce" prot="private" virt="non-virtual"><scope>Relation</scope><name>finv</name></member>
      <member refid="classRelation_1af7602723b04b55522372eae5d70fff52" prot="public" virt="non-virtual"><scope>Relation</scope><name>inDomain</name></member>
      <member refid="classRelation_1a8dd9f0681135740849f9dd20ae4ee13a" prot="public" virt="non-virtual"><scope>Relation</scope><name>inRange</name></member>
      <member refid="classRelation_1af68e62c9cf16d7e2dff81950298dc778" prot="public" virt="non-virtual"><scope>Relation</scope><name>iterator</name></member>
      <member refid="classRelation_1a3377b326df68d54e890873e4800ac522" prot="public" virt="non-virtual"><scope>Relation</scope><name>iteratorInv</name></member>
      <member refid="classRelation_1ae4668d138c1cc9cfc607729a32b2772e" prot="public" virt="non-virtual"><scope>Relation</scope><name>operator=</name></member>
      <member refid="classRelation_1ab946892376f95ed757414e3fadc36f6d" prot="public" virt="non-virtual"><scope>Relation</scope><name>range</name></member>
      <member refid="classRelation_1ae7d89135038109b9ff7ef4c6590a112e" prot="public" virt="non-virtual"><scope>Relation</scope><name>RangeSet</name></member>
      <member refid="classRelation_1a36145dd40aa468c579ac6e531b0ac588" prot="public" virt="non-virtual"><scope>Relation</scope><name>Relation</name></member>
      <member refid="classRelation_1aae3172d175b898c286d82916f191174c" prot="public" virt="non-virtual"><scope>Relation</scope><name>Relation</name></member>
      <member refid="classRelation_1af344472b21613144a5db861d5d7f1437" prot="public" virt="non-virtual"><scope>Relation</scope><name>Relation</name></member>
      <member refid="classRelation_1a30b7ecfff53dda24b5661215e63b3aeb" prot="public" virt="non-virtual"><scope>Relation</scope><name>removeDomainElement</name></member>
      <member refid="classRelation_1adf2bd0433cf8eb255e0b595d8502afad" prot="public" virt="non-virtual"><scope>Relation</scope><name>removeRangeElement</name></member>
      <member refid="classRelation_1a6fe1980b85fd0a4d59ed6ca3dbb52a2a" prot="public" virt="non-virtual"><scope>Relation</scope><name>removeRelation</name></member>
      <member refid="classRelation_1ae3257e8e0e27fc143790453abcfd5a2f" prot="private" virt="non-virtual"><scope>Relation</scope><name>s1</name></member>
      <member refid="classRelation_1a50af13bb942a8b39baa48d5fb092fbe5" prot="private" virt="non-virtual"><scope>Relation</scope><name>s2</name></member>
      <member refid="classRelation_1acc3976a5e2e72dd33d7d05bee2b286fe" prot="public" virt="virtual"><scope>Relation</scope><name>~Relation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
