<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestAliasNamespace_8cc" kind="file" language="C++">
    <compoundname>TestAliasNamespace.cc</compoundname>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>tests/TestAliasNamespace.cc</label>
        <link refid="TestAliasNamespace_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceDatasimFunctions">DatasimFunctions</innernamespace>
    <innernamespace refid="namespacemyFunctions">myFunctions</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestAliasNamespace_8cc_1a1446b168038e850e8a9ed771998ae16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double algorithm</definition>
        <argsstring>()</argsstring>
        <name>algorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAliasNamespace.cc" line="25" column="8" bodyfile="tests/TestAliasNamespace.cc" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="TestAliasNamespace_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAliasNamespace.cc" line="40" column="5" bodyfile="tests/TestAliasNamespace.cc" bodystart="40" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>testAliasNamespace.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Program<sp/>to<sp/>test<sp/>aliases<sp/>in<sp/>namespaces.<sp/>This<sp/>is<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>good<sp/>way<sp/>to<sp/>program<sp/>the<sp/>Template<sp/>Method<sp/>pattern<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>for<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2005-1-4<sp/>DD<sp/>kick-off<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Idea<sp/>is<sp/>to<sp/>define<sp/>an<sp/>algorithm<sp/>whose<sp/>body<sp/>consists<sp/>of<sp/>INVARIANT<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VARIANT<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespaceDatasimFunctions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDatasimFunctions" kindref="compound">DatasimFunctions</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="namespaceDatasimFunctions_1af51cb9dc97654b194cd73ea7340591f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>(*<ref refid="namespaceDatasimFunctions_1af51cb9dc97654b194cd73ea7340591f1" kindref="member">first</ref>)();</highlight></codeline>
<codeline lineno="21" refid="namespaceDatasimFunctions_1a1619972125d80d0f434b543acca662e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>(*<ref refid="namespaceDatasimFunctions_1a1619972125d80d0f434b543acca662e6" kindref="member">second</ref>)();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="TestAliasNamespace_8cc_1a1446b168038e850e8a9ed771998ae16d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="TestAliasNamespace_8cc_1a1446b168038e850e8a9ed771998ae16d" kindref="member">algorithm</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceDatasimFunctions_1af51cb9dc97654b194cd73ea7340591f1" kindref="member">DatasimFunctions::first</ref>()<sp/>+<sp/><ref refid="namespaceDatasimFunctions_1a1619972125d80d0f434b543acca662e6" kindref="member">DatasimFunctions::second</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacemyFunctions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemyFunctions" kindref="compound">myFunctions</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="namespacemyFunctions_1a043870b92253dd0fc566168f21eca13f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemyFunctions_1a043870b92253dd0fc566168f21eca13f" kindref="member">first</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0;}</highlight></codeline>
<codeline lineno="35" refid="namespacemyFunctions_1a03fb4c33a9d547e52ca6be71c95029d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemyFunctions_1a03fb4c33a9d547e52ca6be71c95029d5" kindref="member">second</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4.0;}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="TestAliasNamespace_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestAliasNamespace_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DS<sp/>=<sp/><ref refid="namespaceDatasimFunctions" kindref="compound">DatasimFunctions</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shorthand,<sp/>alias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">MF<sp/>=<sp/><ref refid="namespacemyFunctions" kindref="compound">myFunctions</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shorthand,<sp/>alias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemyFunctions_1a043870b92253dd0fc566168f21eca13f" kindref="member">DS::first</ref>=<sp/><ref refid="namespacemyFunctions_1a043870b92253dd0fc566168f21eca13f" kindref="member">MF::first</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemyFunctions_1a03fb4c33a9d547e52ca6be71c95029d5" kindref="member">DS::second</ref>=<sp/><ref refid="namespacemyFunctions_1a03fb4c33a9d547e52ca6be71c95029d5" kindref="member">MF::second</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="TestAliasNamespace_8cc_1a1446b168038e850e8a9ed771998ae16d" kindref="member">algorithm</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestAliasNamespace.cc"/>
  </compounddef>
</doxygen>
