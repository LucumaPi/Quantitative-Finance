<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestPSetCreators_8cc" kind="file" language="C++">
    <compoundname>TestPSetCreators.cc</compoundname>
    <includes refid="PSetCreators_8hh" local="no">duffy/PSetCreators.hh</includes>
    <incdepgraph>
      <node id="13">
        <label>list</label>
      </node>
      <node id="4">
        <label>Property.hh</label>
        <link refid="Property_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Set.hh</label>
        <link refid="Set_8hh"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>duffy/PSetCreators.hh</label>
        <link refid="PSetCreators_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../../src/PropertyThing.cc</label>
        <link refid="PropertyThing_8cc"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SimplePropertySet.hh</label>
        <link refid="SimplePropertySet_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../../src/Property.cc</label>
        <link refid="Property_8cc"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../../src/Set.cc</label>
        <link refid="Set_8cc"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="16">
        <label>../../src/SimplePropertySet.cc</label>
        <link refid="SimplePropertySet_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>PropertyThing.hh</label>
        <link refid="PropertyThing_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/TestPSetCreators.cc</label>
        <link refid="TestPSetCreators_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestPSetCreators_8cc_1a7e610041b7ed8f90e3a9be08354a4c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const SimplePropertySet&lt; std::string, double &gt; &amp;pset)</argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>&lt; std::string, double &gt; &amp;</type>
          <declname>pset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestPSetCreators.cc" line="11" column="6" bodyfile="tests/TestPSetCreators.cc" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="TestPSetCreators_8cc_1ad211aa7e0bca36527cb86e66d69a885a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPSetFactory" kindref="compound">PSetFactory</ref> *</type>
        <definition>PSetFactory* GetPSetFactory</definition>
        <argsstring>()</argsstring>
        <name>GetPSetFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestPSetCreators.cc" line="25" column="13" bodyfile="tests/TestPSetCreators.cc" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="TestPSetCreators_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestPSetCreators.cc" line="32" column="5" bodyfile="tests/TestPSetCreators.cc" bodystart="32" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TestPSetCreators.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>program<sp/>for<sp/>property<sp/>set<sp/>creators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V2:<sp/>use<sp/>auto_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>1998-2006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="PSetCreators_8hh" kindref="compound">duffy/PSetCreators.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="TestPSetCreators_8cc_1a7e610041b7ed8f90e3a9be08354a4c7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TestPSetCreators_8cc_1a7e610041b7ed8f90e3a9be08354a4c7a" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet&lt;std::string,double&gt;</ref>&amp;<sp/>pset)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSimplePropertySet_1aab3d4fc3315979035be3d5c64c42d425" kindref="member">SimplePropertySet&lt;std::string,double&gt;::const_iterator</ref><sp/>it;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nPrinting<sp/>Property<sp/>Set\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=<sp/>pset.<ref refid="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" kindref="member">Begin</ref>();<sp/>it!=pset.<ref refid="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" kindref="member">End</ref>();<sp/>it++)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*it).first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it).second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="TestPSetCreators_8cc_1ad211aa7e0bca36527cb86e66d69a885a" refkind="member"><highlight class="normal"><ref refid="classPSetFactory" kindref="compound">PSetFactory</ref>*<sp/><ref refid="TestPSetCreators_8cc_1ad211aa7e0bca36527cb86e66d69a885a" kindref="member">GetPSetFactory</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>1<sp/>factory<sp/>in<sp/>this<sp/>version,<sp/>like<sp/>model<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classConsolePSetFactory" kindref="compound">ConsolePSetFactory</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="TestPSetCreators_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestPSetCreators_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPSetFactory" kindref="compound">PSetFactory</ref>*<sp/>fac<sp/>=<sp/><ref refid="TestPSetCreators_8cc_1ad211aa7e0bca36527cb86e66d69a885a" kindref="member">GetPSetFactory</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSimplePropertySet" kindref="compound">PSet</ref>*<sp/>mySet<sp/>=<sp/>fac-&gt;<ref refid="classPSetFactory_1abe4bdfbb13a8e4ac67ca59f7e3824589" kindref="member">CreatePSet</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestPSetCreators_8cc_1a7e610041b7ed8f90e3a9be08354a4c7a" kindref="member">print</ref><sp/>(*mySet);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fac;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mySet;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestPSetCreators.cc"/>
  </compounddef>
</doxygen>
