<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespaceBackwardInduction" kind="namespace" language="C++">
    <compoundname>BackwardInduction</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceBackwardInduction_1a0f1c3dce9e5b1a3c659c0014d7eede07" prot="public" static="no" mutable="no">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; double, int &gt;(*</type>
        <definition>Vector&lt;double, int&gt;(* BackwardInduction::createTerminalVector) (const Lattice&lt; double, int, 2 &gt; &amp;lattice)</definition>
        <argsstring>)(const Lattice&lt; double, int, 2 &gt; &amp;lattice)</argsstring>
        <name>createTerminalVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestLatticeBackwardInduction.cc" line="62" column="5" bodyfile="tests/TestLatticeBackwardInduction.cc" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceBackwardInduction_1a7dda378748f91b6c14847031ab129606" prot="public" static="no" mutable="no">
        <type>double(*</type>
        <definition>double(* BackwardInduction::nodeValue) (double, upper, double lower)</definition>
        <argsstring>)(double, upper, double lower)</argsstring>
        <name>nodeValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestLatticeBackwardInduction.cc" line="22" column="1" bodyfile="tests/TestLatticeBackwardInduction.cc" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceBackwardInduction_1a2ee4a25bb369ca52d0d7fe553f4ae502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double BackwardInduction::taverse</definition>
        <argsstring>(const Lattice&lt; double, int, 2 &gt; &amp;lattice)</argsstring>
        <name>taverse</name>
        <param>
          <type>const <ref refid="classLattice" kindref="compound">Lattice</ref>&lt; double, int, 2 &gt; &amp;</type>
          <declname>lattice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestLatticeBackwardInduction.cc" line="26" column="8" bodyfile="tests/TestLatticeBackwardInduction.cc" bodystart="26" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tests/TestLatticeBackwardInduction.cc" line="17" column="1"/>
  </compounddef>
</doxygen>
