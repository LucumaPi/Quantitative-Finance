<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="SimplePropertySet_8cc" kind="file" language="C++">
    <compoundname>SimplePropertySet.cc</compoundname>
    <includes refid="SimplePropertySet_8hh" local="no">duffy/SimplePropertySet.hh</includes>
    <includedby refid="SimplePropertySet_8hh" local="yes">include/duffy/SimplePropertySet.hh</includedby>
    <incdepgraph>
      <node id="12">
        <label>list</label>
      </node>
      <node id="3">
        <label>Property.hh</label>
        <link refid="Property_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Set.hh</label>
        <link refid="Set_8hh"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../../src/PropertyThing.cc</label>
        <link refid="PropertyThing_8cc"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>duffy/SimplePropertySet.hh</label>
        <link refid="SimplePropertySet_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../../src/Property.cc</label>
        <link refid="Property_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../../src/Set.cc</label>
        <link refid="Set_8cc"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/SimplePropertySet.cc</label>
        <link refid="SimplePropertySet_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>PropertyThing.hh</label>
        <link refid="PropertyThing_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>set</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>src/LatticeMechanisms.cc</label>
        <link refid="LatticeMechanisms_8cc"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/duffy/PSetCreators.hh</label>
        <link refid="PSetCreators_8hh"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tests/TestWrapper.cc</label>
        <link refid="TestWrapper_8cc"/>
      </node>
      <node id="2">
        <label>include/duffy/SimplePropertySet.hh</label>
        <link refid="SimplePropertySet_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/duffy/MatrixMechanisms.hh</label>
        <link refid="MatrixMechanisms_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/ExcelDriver.cc</label>
        <link refid="ExcelDriver_8cc"/>
      </node>
      <node id="13">
        <label>tests/TestNewLatticeBasic.cc</label>
        <link refid="TestNewLatticeBasic_8cc"/>
      </node>
      <node id="12">
        <label>tests/TestNewLattice.cc</label>
        <link refid="TestNewLattice_8cc"/>
      </node>
      <node id="3">
        <label>include/duffy/ArrayMechanisms.hh</label>
        <link refid="ArrayMechanisms_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/ExcelMechanisms.cc</label>
        <link refid="ExcelMechanisms_8cc"/>
      </node>
      <node id="16">
        <label>tests/TestSTD.cc</label>
        <link refid="TestSTD_8cc"/>
      </node>
      <node id="1">
        <label>src/SimplePropertySet.cc</label>
        <link refid="SimplePropertySet_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tests/TestLatticeBasic.cc</label>
        <link refid="TestLatticeBasic_8cc"/>
      </node>
      <node id="10">
        <label>tests/director.cc</label>
        <link refid="director_8cc"/>
      </node>
      <node id="25">
        <label>tests/TestHeteroProperty.cc</label>
        <link refid="TestHeteroProperty_8cc"/>
      </node>
      <node id="17">
        <label>src/IEulerIBVPSolver.cc</label>
        <link refid="IEulerIBVPSolver_8cc"/>
      </node>
      <node id="6">
        <label>src/MatrixMechanisms.cc</label>
        <link refid="MatrixMechanisms_8cc"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/ArrayMechanisms.cc</label>
        <link refid="ArrayMechanisms_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tests/TestPSetCreators.cc</label>
        <link refid="TestPSetCreators_8cc"/>
      </node>
      <node id="23">
        <label>src/Wrapper.cc</label>
        <link refid="Wrapper_8cc"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tests/TestRanges.cc</label>
        <link refid="TestRanges_8cc"/>
      </node>
      <node id="14">
        <label>tests/TestIBVP.cc</label>
        <link refid="TestIBVP_8cc"/>
      </node>
      <node id="20">
        <label>tests/testBSPDE1.cc</label>
        <link refid="testBSPDE1_8cc"/>
      </node>
      <node id="19">
        <label>tests/TestAssocMatrix.cc</label>
        <link refid="TestAssocMatrix_8cc"/>
      </node>
      <node id="18">
        <label>tests/TestAssocArray.cc</label>
        <link refid="TestAssocArray_8cc"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="SimplePropertySet_8cc_1a28d6f2f759bc4b9b519c84d40b78cf6a" prot="public" static="no">
        <name>SimplePropertySet_CC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SimplePropertySet.cc" line="22" column="9" bodyfile="src/SimplePropertySet.cc" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SimplePropertySet.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Composite<sp/>function<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>7<sp/>November<sp/>2002<sp/>DD<sp/>Kick-of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>8<sp/>December<sp/>New<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>10<sp/>December<sp/>2002<sp/>remove()<sp/>and<sp/>other<sp/>list-based<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2002-12-26<sp/>DD<sp/>Set<sp/>has<sp/>a<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-4-26<sp/>DD<sp/>last<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-6-8<sp/>DD<sp/>implement<sp/>as<sp/>a<sp/>map<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-7-20<sp/>DD<sp/>optimisitions.<sp/>more<sp/>on<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-7-21<sp/>DD<sp/>bugs!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-7-23<sp/>DD<sp/>Prototype<sp/>and<sp/>Visitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-8-4<sp/>DD<sp/>rounding<sp/>off;<sp/>code<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-9-7<sp/>DD<sp/>value<sp/>function<sp/>(modifier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-9-19<sp/>DD<sp/>add(key<sp/>+<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-9-22<sp/>DD<sp/>some<sp/>methods,<sp/>return<sp/>by<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2005-3-27<sp/>DD<sp/>bug<sp/>soled<sp/>value()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2002-2004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SimplePropertySet_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="SimplePropertySet_8cc_1a28d6f2f759bc4b9b519c84d40b78cf6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SimplePropertySet_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SimplePropertySet_8hh" kindref="compound">duffy/SimplePropertySet.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="27" refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" kindref="member">SimplePropertySet&lt;N,V&gt;::SimplePropertySet</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>nam<sp/>=<sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sl=std::map&lt;N,V&gt;();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/><ref refid="classSet" kindref="compound">Set&lt;N&gt;</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="36" refid="classSimplePropertySet_1a023467dd53d24dc7ef5cb6b4d88aa7ce" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" kindref="member">SimplePropertySet&lt;N,V&gt;::SimplePropertySet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Named<sp/>property<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>nam<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sl=std::map&lt;N,V&gt;();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/><ref refid="classSet" kindref="compound">Set&lt;N&gt;</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>keys.Insert(name);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="47" refid="classSimplePropertySet_1adda400272ff7f24ba0e4c3fab9e39f6b" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" kindref="member">SimplePropertySet&lt;N,V&gt;::SimplePropertySet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet&lt;N,V&gt;</ref>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>nam<sp/>=<sp/>source.nam;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>source.sl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/>source.keys;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="56" refid="classSimplePropertySet_1a8b45e771b3efadcf2ccbcc3fdaa12f5e" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" kindref="member">SimplePropertySet&lt;N,V&gt;::SimplePropertySet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;N&gt;</ref>&amp;<sp/>keySet)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>property<sp/>set<sp/>from<sp/>a<sp/>set<sp/>of<sp/>attribute<sp/>defs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>nam<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/>keySet;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>iterate<sp/>in<sp/>the<sp/>keys<sp/>and<sp/>do<sp/>default<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;N&gt;::iterator</ref><sp/>it;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>keys.<ref refid="classSet_1a3ca47221f02ee54c6b627ff73a9b5b98" kindref="member">Begin</ref>();<sp/>it<sp/>!=<sp/>keys.<ref refid="classSet_1aeb4a4b2026eb040a24e9b251e0c49dec" kindref="member">End</ref>();<sp/>it++)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Vector_8hh_1af8ed022403e1f5df6daa9094218a4c0d" kindref="member">add</ref>(<ref refid="classProperty" kindref="compound">Property&lt;N,V&gt;</ref>(*it,<sp/>V()));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="73" refid="classSimplePropertySet_1abe51bf32a2816ab01a7bbca3d838f430" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1abe51bf32a2816ab01a7bbca3d838f430" kindref="member">SimplePropertySet&lt;N,V&gt;::~SimplePropertySet</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterator<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1ae7e2bc706a3ded16c053d59d7a1343be" kindref="member">SimplePropertySet&lt;N,V&gt;::iterator</ref><sp/><ref refid="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" kindref="member">SimplePropertySet&lt;N,V&gt;::Begin</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>iterator<sp/>at<sp/>begin<sp/>of<sp/>composite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sl.begin();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classSimplePropertySet_1a6802c214360692877d33fa97de489c81" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1aab3d4fc3315979035be3d5c64c42d425" kindref="member">SimplePropertySet&lt;N,V&gt;::const_iterator</ref><sp/><ref refid="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" kindref="member">SimplePropertySet&lt;N,V&gt;::Begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const<sp/>iterator<sp/>at<sp/>begin<sp/>of<sp/>composite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sl.begin();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1ae7e2bc706a3ded16c053d59d7a1343be" kindref="member">SimplePropertySet&lt;N,V&gt;::iterator</ref><sp/><ref refid="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" kindref="member">SimplePropertySet&lt;N,V&gt;::End</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>iterator<sp/>after<sp/>end<sp/>of<sp/>composite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sl.end();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classSimplePropertySet_1a5d6159e4afdef3815a3caa7840867f3c" refkind="member"><highlight class="normal"><ref refid="classSimplePropertySet_1aab3d4fc3315979035be3d5c64c42d425" kindref="member">SimplePropertySet&lt;N,V&gt;::const_iterator</ref><sp/><ref refid="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" kindref="member">SimplePropertySet&lt;N,V&gt;::End</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const<sp/>iterator<sp/>after<sp/>end<sp/>of<sp/>composite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sl.end();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Selectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="110" refid="classSimplePropertySet_1ab593364b7d18f4fa2639abc75c188d0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1ab593364b7d18f4fa2639abc75c188d0c" kindref="member">SimplePropertySet&lt;N,V&gt;::Size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>functions<sp/>in<sp/>the<sp/>composite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys.Size();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="117" refid="classSimplePropertySet_1adee2b738f8853c056e40c72384a442bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref><sp/><ref refid="classSimplePropertySet_1adee2b738f8853c056e40c72384a442bf" kindref="member">SimplePropertySet&lt;N,V&gt;::operator ()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>The<sp/>name<sp/>of<sp/>the<sp/>property<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nam;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="124" refid="classSimplePropertySet_1a7674e0f5c6b6a747aa85d54bc52d1ab7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref><sp/><ref refid="classSimplePropertySet_1a7674e0f5c6b6a747aa85d54bc52d1ab7" kindref="member">SimplePropertySet&lt;N,V&gt;::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>The<sp/>name<sp/>of<sp/>the<sp/>property<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nam;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="131" refid="classSimplePropertySet_1a6ba0b7ab8d9122312489ca390c4bf403" refkind="member"><highlight class="normal"><ref refid="classSet" kindref="compound">Set&lt;N&gt;</ref>&amp;<sp/><ref refid="classSimplePropertySet_1a6ba0b7ab8d9122312489ca390c4bf403" kindref="member">SimplePropertySet&lt;N,V&gt;::definingSet</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>of<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="139" refid="classSimplePropertySet_1a1267fc2078252c8f5cde01bc082c7abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a1267fc2078252c8f5cde01bc082c7abb" kindref="member">SimplePropertySet&lt;N,V&gt;::hasProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/><ref refid="TestImpliedVolatility_8cc_1a927694c350b26693c65f7c8b73b3dba3" kindref="member">n</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>property<sp/>in<sp/>the<sp/>list?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys.Contains(<ref refid="TestImpliedVolatility_8cc_1a927694c350b26693c65f7c8b73b3dba3" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="150" refid="classSimplePropertySet_1ae7b7f24763a55b11e9e21cec05390965" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1adee2b738f8853c056e40c72384a442bf" kindref="member">SimplePropertySet&lt;N,V&gt;::operator () </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nam<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="157" refid="classSimplePropertySet_1a10d2ad72a513d2b6727113b4d9ec0f78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a10d2ad72a513d2b6727113b4d9ec0f78" kindref="member">SimplePropertySet&lt;N,V&gt;::ClearAll</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>its<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>std::map&lt;N,V&gt;();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="164" refid="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>V<sp/><ref refid="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" kindref="member">SimplePropertySet&lt;N,V&gt;::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NO<sp/>exception<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(hasProperty(name)<sp/>==<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>V();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;(<sp/>Sledgehammer,<sp/>use<sp/>find!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>iterate<sp/>over<sp/>the<sp/>list<sp/>until<sp/>we<sp/>find<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;N,V&gt;::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=sl.begin();<sp/>it!=sl.end();<sp/>it++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).first<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>sl[name];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="189" refid="classSimplePropertySet_1a6bf75b5e081e0a8dea7535811349e081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" kindref="member">SimplePropertySet&lt;N,V&gt;::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>value)<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>value<sp/>of<sp/>Property,<sp/>key<sp/>&apos;name&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NO<sp/>exception<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasProperty(name)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;(<sp/>Sledgehammer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>iterate<sp/>over<sp/>the<sp/>list<sp/>until<sp/>we<sp/>find<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;N,V&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=sl.begin();<sp/>it!=sl.end();<sp/>it++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it).first<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it).second<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="211" refid="classSimplePropertySet_1a0416ff1b79646897fc4f6d7019f8ed63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" kindref="member">SimplePropertySet&lt;N,V&gt;::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classProperty" kindref="compound">Property&lt;N,V&gt;</ref>&amp;<sp/>scf)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>value(scf.<ref refid="classProperty_1a61070c4a41dcdbc890c6b27146931e97" kindref="member">name</ref>(),<sp/>scf());</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="221" refid="classSimplePropertySet_1ae25d67b8dc28ce9af587b769bbe1dfe3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a8663619c5669177f23286672ad49ceca" kindref="member">SimplePropertySet&lt;N,V&gt;::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>value)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>key+value<sp/>pair<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;N,V&gt;<sp/>tmp;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.first<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.second<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>sl.insert(tmp);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>el.<sp/>with<sp/>name<sp/>+<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>key<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>keys.Insert(key);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="236" refid="classSimplePropertySet_1a8663619c5669177f23286672ad49ceca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1a8663619c5669177f23286672ad49ceca" kindref="member">SimplePropertySet&lt;N,V&gt;::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classProperty" kindref="compound">Property&lt;N, V&gt;</ref>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>key+value<sp/>pair<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;N,V&gt;<sp/>tmp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.first<sp/>=<sp/>pr.<ref refid="classProperty_1a61070c4a41dcdbc890c6b27146931e97" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.second<sp/>=<sp/>pr();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>sl.insert(tmp);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>el.<sp/>with<sp/>name<sp/>+<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>key<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>keys.Insert(tmp.first);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="251" refid="classSimplePropertySet_1ade559928631fd263ac69aef08f4017d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1ade559928631fd263ac69aef08f4017d2" kindref="member">SimplePropertySet&lt;N,V&gt;::remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de" kindref="member">N</ref>&amp;<sp/>key)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>elements<sp/>with<sp/>&apos;key&apos;<sp/>O(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>sl.erase(key);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="260" refid="classSimplePropertySet_1a88c4fef57ef8e5279d28f6a13a10076c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet_1ade559928631fd263ac69aef08f4017d2" kindref="member">SimplePropertySet&lt;N,V&gt;::remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classProperty" kindref="compound">Property&lt;N, V&gt;</ref>&amp;<sp/>prop)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>given<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>remove(prop.<ref refid="classProperty_1a61070c4a41dcdbc890c6b27146931e97" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="269" refid="classSimplePropertySet_1a3f605fbec62d086f9d5cd3fd204bb9e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet&lt;N,V&gt;</ref>&amp;<sp/><ref refid="classSimplePropertySet_1a3f605fbec62d086f9d5cd3fd204bb9e9" kindref="member">SimplePropertySet&lt;N,V&gt;::operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet&lt;N,V&gt;</ref>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exit<sp/>if<sp/>same<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">==&amp;source)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>nam<sp/>=<sp/>source.nam;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>source.sl;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/>source.keys;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef" refkind="member"><highlight class="normal"><ref refid="classPropertyThing" kindref="compound">PropertyThing&lt;N,V&gt;</ref>*<sp/><ref refid="classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef" kindref="member">SimplePropertySet&lt;N, V&gt;::Copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="291"><highlight class="comment">template<sp/>&lt;class<sp/>N,<sp/>class<sp/>V&gt;<sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="comment">void<sp/>SimplePropertySet&lt;N,V&gt;::accept(PropertyThingVisitor&lt;N,V&gt;&amp;<sp/>pv)<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="comment">{</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>pv.Visit(*this);</highlight></codeline>
<codeline lineno="296"><highlight class="comment">}</highlight></codeline>
<codeline lineno="297"><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/SimplePropertySet.cc"/>
  </compounddef>
</doxygen>
