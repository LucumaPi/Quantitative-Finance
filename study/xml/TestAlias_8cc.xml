<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestAlias_8cc" kind="file" language="C++">
    <compoundname>TestAlias.cc</compoundname>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>tests/TestAlias.cc</label>
        <link refid="TestAlias_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classMyClass" prot="public">MyClass</innerclass>
    <innernamespace refid="namespaceStandardInterface">StandardInterface</innernamespace>
    <innernamespace refid="namespaceImplementation1">Implementation1</innernamespace>
    <innernamespace refid="namespaceImplementation2">Implementation2</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestAlias_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestAlias.cc" line="46" column="5" bodyfile="tests/TestAlias.cc" bodystart="46" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TestAlias.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>namespace<sp/>in<sp/>combnation<sp/>with<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespaceStandardInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceStandardInterface" kindref="compound">StandardInterface</ref><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Namespace<sp/>consistig<sp/>of<sp/>function<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>(*<ref refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" kindref="member">func1</ref>)<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="15" refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>(*<ref refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" kindref="member">func2</ref>)<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespaceImplementation1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceImplementation1" kindref="compound">Implementation1</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespaceImplementation1_1ad559e3d656c53ac0faa602bc675bfe4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceImplementation1_1ad559e3d656c53ac0faa602bc675bfe4e" kindref="member">F1</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespaceImplementation1_1a81345657302fb74643373ebf178181ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceImplementation1_1a81345657302fb74643373ebf178181ff" kindref="member">F2</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*y;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespaceImplementation2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceImplementation2" kindref="compound">Implementation2</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespaceImplementation2_1aa5a74d287b1e742f9c9745be852dc6b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceImplementation2_1aa5a74d287b1e742f9c9745be852dc6b5" kindref="member">G1</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-x;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceImplementation2_1ad07ff5504a8c7b73bfb90514c95f2990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceImplementation2_1ad07ff5504a8c7b73bfb90514c95f2990" kindref="member">G2</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-x*y;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classMyClass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMyClass" kindref="compound">MyClass</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classMyClass_1ad8594cad14ad24d08856050fb807fed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMyClass_1ad8594cad14ad24d08856050fb807fed5" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>using<sp/>namespace<sp/>StandardInterface;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classMyClass_1a8c56a953295afdced0c95908bf2663da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMyClass_1a8c56a953295afdced0c95908bf2663da" kindref="member">MyClass</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>func1(2.0)<sp/>*<sp/>func2(1.0,<sp/>3.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="TestAlias_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestAlias_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref><sp/>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>function<sp/>pointers<sp/>from<sp/>NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" kindref="member">StandardInterface::func1</ref><sp/>=<sp/><ref refid="namespaceImplementation1_1ad559e3d656c53ac0faa602bc675bfe4e" kindref="member">Implementation1::F1</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" kindref="member">StandardInterface::func2</ref><sp/>=<sp/><ref refid="namespaceImplementation1_1a81345657302fb74643373ebf178181ff" kindref="member">Implementation1::F2</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceStandardInterface" kindref="compound">StandardInterface</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" kindref="member">func1</ref>(2.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" kindref="member">func2</ref>(3.0,<sp/>-4.0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" kindref="member">func1</ref><sp/>=<sp/><ref refid="namespaceImplementation2_1aa5a74d287b1e742f9c9745be852dc6b5" kindref="member">Implementation2::G1</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" kindref="member">func2</ref><sp/>=<sp/><ref refid="namespaceImplementation2_1ad07ff5504a8c7b73bfb90514c95f2990" kindref="member">Implementation2::G2</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespaceStandardInterface_1afa25862520da09e39fb616cc82d176fe" kindref="member">func1</ref>(2.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceStandardInterface_1ab6feec59bff99719ea737d10fd58561f" kindref="member">func2</ref>(3.0,<sp/>-4.0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestAlias.cc"/>
  </compounddef>
</doxygen>
