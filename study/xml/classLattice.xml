<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classLattice" kind="class" language="C++" prot="public">
    <compoundname>Lattice</compoundname>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
      </param>
      <param>
        <type>class</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NumberNodes</declname>
        <defname>NumberNodes</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLattice_1a5894e3d504fd16fc0c05a331e08bd6d2" prot="private" static="no" mutable="no">
        <type><ref refid="classArray" kindref="compound">Array</ref>&lt; <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt;, I &gt;</type>
        <definition>Array&lt;Vector&lt;V, I&gt;, I &gt; Lattice&lt; V, I, NumberNodes &gt;::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="31" column="8" bodyfile="include/duffy/Lattice.hh" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLattice_1a029256b9a3f89a05e16f195ac371ad89" prot="private" static="no" mutable="no">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::nrows</definition>
        <argsstring></argsstring>
        <name>nrows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="33" column="3" bodyfile="include/duffy/Lattice.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLattice_1a3a567ba5367d7ab2c1c4363d0f21528d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Lattice&lt; V, I, NumberNodes &gt;::typ</definition>
        <argsstring></argsstring>
        <name>typ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="34" column="5" bodyfile="include/duffy/Lattice.hh" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLattice_1a9fe92ce8abfb8668e28064b394f7a057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lattice&lt; V, I, NumberNodes &gt;::Lattice</definition>
        <argsstring>()</argsstring>
        <name>Lattice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="37" column="1" bodyfile="src/Lattice.cc" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1afda324cc8c833a70695e9cbe18a51057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lattice&lt; V, I, NumberNodes &gt;::Lattice</definition>
        <argsstring>(const I &amp;Nrows)</argsstring>
        <name>Lattice</name>
        <param>
          <type>const I &amp;</type>
          <declname>Nrows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="38" column="1" bodyfile="src/Lattice.cc" bodystart="35" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1ac6b6d97ee0948d2c7cd7b76366ef8579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lattice&lt; V, I, NumberNodes &gt;::Lattice</definition>
        <argsstring>(const I &amp;Nrows, const V &amp;val)</argsstring>
        <name>Lattice</name>
        <param>
          <type>const I &amp;</type>
          <declname>Nrows</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="39" column="1" bodyfile="src/Lattice.cc" bodystart="50" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a10b13338775f9e191d14d265439d13c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lattice&lt; V, I, NumberNodes &gt;::Lattice</definition>
        <argsstring>(const Lattice&lt; V, I, NumberNodes &gt; &amp;source)</argsstring>
        <name>Lattice</name>
        <param>
          <type>const <ref refid="classLattice" kindref="compound">Lattice</ref>&lt; V, I, NumberNodes &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="40" column="1" bodyfile="src/Lattice.cc" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a9625188af2d5da9d88b2f747db907042" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Lattice&lt; V, I, NumberNodes &gt;::~Lattice</definition>
        <argsstring>()</argsstring>
        <name>~Lattice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="41" column="9" bodyfile="src/Lattice.cc" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a07442df63222c6627f46efc4ae91acf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::MinIndex</definition>
        <argsstring>() const</argsstring>
        <name>MinIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="43" column="3" bodyfile="src/Lattice.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a5cac27496a08f2a14d8e1d65732a4c34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::MaxIndex</definition>
        <argsstring>() const</argsstring>
        <name>MaxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="44" column="3" bodyfile="src/Lattice.cc" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a0911d29a485c5e8555b8f25e7589434a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::Depth</definition>
        <argsstring>() const</argsstring>
        <name>Depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="45" column="3" bodyfile="src/Lattice.cc" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a135fdd0475ed6105b3367d507681a404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLattice" kindref="compound">Lattice</ref>&lt; V, I, NumberNodes &gt; &amp;</type>
        <definition>Lattice&lt; V, I, NumberNodes &gt; &amp; Lattice&lt; V, I, NumberNodes &gt;::operator=</definition>
        <argsstring>(const Lattice&lt; V, I, NumberNodes &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classLattice" kindref="compound">Lattice</ref>&lt; V, I, NumberNodes &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="47" column="9" bodyfile="src/Lattice.cc" bodystart="77" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1ab444412f2030b7594d611c1f7429a953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
        <definition>Vector&lt; V, I &gt; &amp; Lattice&lt; V, I, NumberNodes &gt;::operator[]</definition>
        <argsstring>(const I &amp;nLevel)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const I &amp;</type>
          <declname>nLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="48" column="8" bodyfile="src/Lattice.cc" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a25365d1583521fe97c48761f493edaa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
        <definition>const Vector&lt; V, I &gt; &amp; Lattice&lt; V, I, NumberNodes &gt;::operator[]</definition>
        <argsstring>(const I &amp;nLevel) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const I &amp;</type>
          <declname>nLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="49" column="14" bodyfile="src/Lattice.cc" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a0454fa42ebad2e9fbb71e884f3befaf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt;</type>
        <definition>Vector&lt; V, I &gt; Lattice&lt; V, I, NumberNodes &gt;::BasePyramidVector</definition>
        <argsstring>() const</argsstring>
        <name>BasePyramidVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="53" column="8" bodyfile="src/Lattice.cc" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a37afc93f46019f322291307c1bed2e11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::BasePyramidSize</definition>
        <argsstring>() const</argsstring>
        <name>BasePyramidSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="54" column="3" bodyfile="src/Lattice.cc" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classLattice_1a114af77d5b77fa52ffd28c42f7f97b5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Lattice&lt; V, I, NumberNodes &gt;::numberNodes</definition>
        <argsstring>() const</argsstring>
        <name>numberNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Lattice.hh" line="55" column="3" bodyfile="src/Lattice.cc" bodystart="133" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Lattice&lt; V, I, NumberNodes &gt;</label>
        <link refid="classLattice"/>
      </node>
      <node id="2">
        <label>Lattice&lt; double, int, 2 &gt;</label>
        <link refid="classLattice"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double, int, 2 &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Lattice&lt; V, I, NumberNodes &gt;</label>
        <link refid="classLattice"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Lattice.hh" line="28" column="1" bodyfile="include/duffy/Lattice.hh" bodystart="27" bodyend="56"/>
    <listofallmembers>
      <member refid="classLattice_1a37afc93f46019f322291307c1bed2e11" prot="public" virt="non-virtual"><scope>Lattice</scope><name>BasePyramidSize</name></member>
      <member refid="classLattice_1a0454fa42ebad2e9fbb71e884f3befaf6" prot="public" virt="non-virtual"><scope>Lattice</scope><name>BasePyramidVector</name></member>
      <member refid="classLattice_1a0911d29a485c5e8555b8f25e7589434a" prot="public" virt="non-virtual"><scope>Lattice</scope><name>Depth</name></member>
      <member refid="classLattice_1a9fe92ce8abfb8668e28064b394f7a057" prot="public" virt="non-virtual"><scope>Lattice</scope><name>Lattice</name></member>
      <member refid="classLattice_1afda324cc8c833a70695e9cbe18a51057" prot="public" virt="non-virtual"><scope>Lattice</scope><name>Lattice</name></member>
      <member refid="classLattice_1ac6b6d97ee0948d2c7cd7b76366ef8579" prot="public" virt="non-virtual"><scope>Lattice</scope><name>Lattice</name></member>
      <member refid="classLattice_1a10b13338775f9e191d14d265439d13c0" prot="public" virt="non-virtual"><scope>Lattice</scope><name>Lattice</name></member>
      <member refid="classLattice_1a5cac27496a08f2a14d8e1d65732a4c34" prot="public" virt="non-virtual"><scope>Lattice</scope><name>MaxIndex</name></member>
      <member refid="classLattice_1a07442df63222c6627f46efc4ae91acf9" prot="public" virt="non-virtual"><scope>Lattice</scope><name>MinIndex</name></member>
      <member refid="classLattice_1a029256b9a3f89a05e16f195ac371ad89" prot="private" virt="non-virtual"><scope>Lattice</scope><name>nrows</name></member>
      <member refid="classLattice_1a114af77d5b77fa52ffd28c42f7f97b5f" prot="public" virt="non-virtual"><scope>Lattice</scope><name>numberNodes</name></member>
      <member refid="classLattice_1a135fdd0475ed6105b3367d507681a404" prot="public" virt="non-virtual"><scope>Lattice</scope><name>operator=</name></member>
      <member refid="classLattice_1ab444412f2030b7594d611c1f7429a953" prot="public" virt="non-virtual"><scope>Lattice</scope><name>operator[]</name></member>
      <member refid="classLattice_1a25365d1583521fe97c48761f493edaa3" prot="public" virt="non-virtual"><scope>Lattice</scope><name>operator[]</name></member>
      <member refid="classLattice_1a5894e3d504fd16fc0c05a331e08bd6d2" prot="private" virt="non-virtual"><scope>Lattice</scope><name>tree</name></member>
      <member refid="classLattice_1a3a567ba5367d7ab2c1c4363d0f21528d" prot="private" virt="non-virtual"><scope>Lattice</scope><name>typ</name></member>
      <member refid="classLattice_1a9625188af2d5da9d88b2f747db907042" prot="public" virt="virtual"><scope>Lattice</scope><name>~Lattice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
