<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classZeroDivide" kind="class" language="C++" prot="public">
    <compoundname>ZeroDivide</compoundname>
    <basecompoundref refid="classMathErr" prot="public" virt="non-virtual">MathErr</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classZeroDivide_1add533576dbb57cfb61baa05a6618531f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ZeroDivide::mess</definition>
        <argsstring></argsstring>
        <name>mess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/MathErr.cc" line="58" column="13" bodyfile="src/MathErr.cc" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classZeroDivide_1a4ef0fccc373f2767c79febd8b2500c61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ZeroDivide::ZeroDivide</definition>
        <argsstring>()</argsstring>
        <name>ZeroDivide</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/MathErr.cc" line="61" column="1" bodyfile="src/MathErr.cc" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classZeroDivide_1ab77784ee863d55e39c8391fdd657b3e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ZeroDivide::ZeroDivide</definition>
        <argsstring>(const std::string &amp;message, const std::string &amp;method, const std::string &amp;annotation)</argsstring>
        <name>ZeroDivide</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>annotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/MathErr.cc" line="66" column="1" bodyfile="src/MathErr.cc" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classZeroDivide_1a0281c677520a3f336cd811c13c4ab17c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ZeroDivide::MessageDump</definition>
        <argsstring>() const</argsstring>
        <name>MessageDump</name>
        <reimplements refid="classMathErr_1a420f29972f9a21d2a9d8d3a90d0c844a">MessageDump</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/MathErr.cc" line="72" column="13" bodyfile="src/MathErr.cc" bodystart="72" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ZeroDivide</label>
        <link refid="classZeroDivide"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MathErr</label>
        <link refid="classMathErr"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ZeroDivide</label>
        <link refid="classZeroDivide"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MathErr</label>
        <link refid="classMathErr"/>
      </node>
    </collaborationgraph>
    <location file="src/MathErr.cc" line="55" column="1" bodyfile="src/MathErr.cc" bodystart="54" bodyend="82"/>
    <listofallmembers>
      <member refid="classMathErr_1a92ae6f6640c3979720b743a62f106d95" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>MathErr</name></member>
      <member refid="classMathErr_1a2be93a878a77577c7c1ea9ec4f13e802" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>MathErr</name></member>
      <member refid="classZeroDivide_1add533576dbb57cfb61baa05a6618531f" prot="private" virt="non-virtual"><scope>ZeroDivide</scope><name>mess</name></member>
      <member refid="classMathErr_1a02dab9085b81ab4ad1e1dd6ce3179e74" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>Message</name></member>
      <member refid="classZeroDivide_1a0281c677520a3f336cd811c13c4ab17c" prot="public" virt="virtual"><scope>ZeroDivide</scope><name>MessageDump</name></member>
      <member refid="classMathErr_1a63e28b64f06194252a7723ef7d349148" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>Method</name></member>
      <member refid="classMathErr_1a08430e27bd7a6a09cfc5debdef3e8a65" prot="public" virt="virtual"><scope>ZeroDivide</scope><name>print</name></member>
      <member refid="classZeroDivide_1a4ef0fccc373f2767c79febd8b2500c61" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>ZeroDivide</name></member>
      <member refid="classZeroDivide_1ab77784ee863d55e39c8391fdd657b3e2" prot="public" virt="non-virtual"><scope>ZeroDivide</scope><name>ZeroDivide</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
