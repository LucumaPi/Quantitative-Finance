<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classArray" kind="class" language="C++" prot="public">
    <compoundname>Array</compoundname>
    <derivedcompoundref refid="classVector" prot="public" virt="non-virtual">Vector&lt; V, I, S &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
      </param>
      <param>
        <type>class</type>
        <declname>I</declname>
        <defname>I</defname>
        <defval>int</defval>
      </param>
      <param>
        <type>class</type>
        <declname>S</declname>
        <defname>S</defname>
        <defval><ref refid="classFullArray" kindref="compound">FullArray</ref>&lt;V&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classArray_1aaa438cb7e7af2a2b66b38bd54304d3b0" prot="private" static="no" mutable="no">
        <type>S</type>
        <definition>S Array&lt; V, I, S &gt;::m_structure</definition>
        <argsstring></argsstring>
        <name>m_structure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="20" column="3" bodyfile="include/duffy/Array.hh" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classArray_1ab7ace82ede641a46b99e224850deefca" prot="private" static="no" mutable="no">
        <type>I</type>
        <definition>I Array&lt; V, I, S &gt;::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="21" column="3" bodyfile="include/duffy/Array.hh" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classArray_1a825b1a1333fbf75a9a2d8812d02a58e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::Array</definition>
        <argsstring>()</argsstring>
        <name>Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="25" column="1" bodyfile="src/Array.cc" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a0c477151b2e9ee7cee999e635c0a53ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::Array</definition>
        <argsstring>(I size)</argsstring>
        <name>Array</name>
        <param>
          <type>I</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="26" column="1" bodyfile="src/Array.cc" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a16fff3c418cff090289bd944d54e0c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::Array</definition>
        <argsstring>(I size, I start)</argsstring>
        <name>Array</name>
        <param>
          <type>I</type>
          <declname>size</declname>
        </param>
        <param>
          <type>I</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="27" column="1" bodyfile="src/Array.cc" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1ad5271fd679b4a99a110724c4afba2569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::Array</definition>
        <argsstring>(I size, I start, const V &amp;value)</argsstring>
        <name>Array</name>
        <param>
          <type>I</type>
          <declname>size</declname>
        </param>
        <param>
          <type>I</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="28" column="1" bodyfile="src/Array.cc" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1aa3192a8b393ea5fa18885d5db3c152f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::Array</definition>
        <argsstring>(const Array&lt; V, I, S &gt; &amp;source)</argsstring>
        <name>Array</name>
        <param>
          <type>const <ref refid="classArray" kindref="compound">Array</ref>&lt; V, I, S &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="29" column="1" bodyfile="src/Array.cc" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a1b1a13c1a2d5be706c18eda75f0941dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Array&lt; V, I, S &gt;::~Array</definition>
        <argsstring>()</argsstring>
        <name>~Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="30" column="9" bodyfile="src/Array.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1acffe058a1dd631b05fb71a83e27b445a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Array&lt; V, I, S &gt;::MinIndex</definition>
        <argsstring>() const</argsstring>
        <name>MinIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="33" column="3" bodyfile="src/Array.cc" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a8ce7791cd1ec7ba63ec71772a7144965" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Array&lt; V, I, S &gt;::MaxIndex</definition>
        <argsstring>() const</argsstring>
        <name>MaxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="34" column="3" bodyfile="src/Array.cc" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a69342621906b355e8244466f9eeece71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>I</type>
        <definition>I Array&lt; V, I, S &gt;::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="35" column="3" bodyfile="src/Array.cc" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a75935c222b8e83ce9e5918196d80a445" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>V &amp;</type>
        <definition>V &amp; Array&lt; V, I, S &gt;::operator[]</definition>
        <argsstring>(I index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>I</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="38" column="11" bodyfile="src/Array.cc" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1a3e1537efaf9501fc6fe5c75654d3d63e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const V &amp;</type>
        <definition>const V &amp; Array&lt; V, I, S &gt;::operator[]</definition>
        <argsstring>(I index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>I</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="39" column="17" bodyfile="src/Array.cc" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1ac27f5b9655cda7daecc9d09298a454bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArray" kindref="compound">Array</ref>&lt; V, I, S &gt; &amp;</type>
        <definition>Array&lt; V, I, S &gt; &amp; Array&lt; V, I, S &gt;::operator=</definition>
        <argsstring>(const Array&lt; V, I, S &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classArray" kindref="compound">Array</ref>&lt; V, I, S &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Array.hh" line="41" column="7" bodyfile="src/Array.cc" bodystart="96" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>Array&lt; double, long, FullArray&lt; double &gt; &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double, long, FullArray&lt; double &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Vector&lt; V, I &gt;</label>
        <link refid="classVector"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; V, I &gt;</edgelabel>
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Vector&lt; V, I, S &gt;</label>
        <link refid="classVector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Array&lt; Vector&lt; double, int &gt;, int &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Vector&lt; double, int &gt;, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Array&lt; NumericMatrix&lt; V, I &gt;, I &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NumericMatrix&lt; V, I &gt;, I &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Array&lt; V, I, FullArray&lt; V &gt; &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; V, I, FullArray&lt; V &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Array&lt; V, I, S &gt;</label>
        <link refid="classArray"/>
      </node>
      <node id="7">
        <label>Array&lt; Vector&lt; V, I &gt;, I &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Vector&lt; V, I &gt;, I &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Vector&lt; double, long &gt;</label>
        <link refid="classVector"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; double, long &gt;</edgelabel>
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Array&lt; V, I, S &gt;</label>
        <link refid="classArray"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Array.hh" line="18" column="1" bodyfile="include/duffy/Array.hh" bodystart="17" bodyend="42"/>
    <listofallmembers>
      <member refid="classArray_1a825b1a1333fbf75a9a2d8812d02a58e4" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_1a0c477151b2e9ee7cee999e635c0a53ad" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_1a16fff3c418cff090289bd944d54e0c18" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_1ad5271fd679b4a99a110724c4afba2569" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_1aa3192a8b393ea5fa18885d5db3c152f4" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_1ab7ace82ede641a46b99e224850deefca" prot="private" virt="non-virtual"><scope>Array</scope><name>m_start</name></member>
      <member refid="classArray_1aaa438cb7e7af2a2b66b38bd54304d3b0" prot="private" virt="non-virtual"><scope>Array</scope><name>m_structure</name></member>
      <member refid="classArray_1a8ce7791cd1ec7ba63ec71772a7144965" prot="public" virt="non-virtual"><scope>Array</scope><name>MaxIndex</name></member>
      <member refid="classArray_1acffe058a1dd631b05fb71a83e27b445a" prot="public" virt="non-virtual"><scope>Array</scope><name>MinIndex</name></member>
      <member refid="classArray_1ac27f5b9655cda7daecc9d09298a454bf" prot="public" virt="non-virtual"><scope>Array</scope><name>operator=</name></member>
      <member refid="classArray_1a75935c222b8e83ce9e5918196d80a445" prot="public" virt="virtual"><scope>Array</scope><name>operator[]</name></member>
      <member refid="classArray_1a3e1537efaf9501fc6fe5c75654d3d63e" prot="public" virt="virtual"><scope>Array</scope><name>operator[]</name></member>
      <member refid="classArray_1a69342621906b355e8244466f9eeece71" prot="public" virt="non-virtual"><scope>Array</scope><name>Size</name></member>
      <member refid="classArray_1a1b1a13c1a2d5be706c18eda75f0941dd" prot="public" virt="virtual"><scope>Array</scope><name>~Array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
