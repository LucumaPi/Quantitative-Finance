<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classRange" kind="class" language="C++" prot="public">
    <compoundname>Range</compoundname>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Type</declname>
        <defname>Type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRange_1aff3daec2c838abb5ce4661f9ec984d18" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type Range&lt; Type &gt;::lo</definition>
        <argsstring></argsstring>
        <name>lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="20" column="6" bodyfile="include/duffy/Range.hh" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRange_1a3270ba0475dc057284ed49b8c1173361" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type Range&lt; Type &gt;::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="21" column="6" bodyfile="include/duffy/Range.hh" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRange_1a1ae29a7125bc7127c67ec67829d1e6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Range&lt; Type &gt;::Range</definition>
        <argsstring>()</argsstring>
        <name>Range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="25" column="1" bodyfile="src/Range.cc" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a7ce1e904703bd7e049db8c7aca16a0cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Range&lt; Type &gt;::Range</definition>
        <argsstring>(const Type &amp;low, const Type &amp;high)</argsstring>
        <name>Range</name>
        <param>
          <type>const Type &amp;</type>
          <declname>low</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="26" column="1" bodyfile="src/Range.cc" bodystart="39" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a4390939e24185ab8c083c125cf7c5625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Range&lt; Type &gt;::Range</definition>
        <argsstring>(const Range&lt; Type &gt; &amp;ran2)</argsstring>
        <name>Range</name>
        <param>
          <type>const <ref refid="classRange" kindref="compound">Range</ref>&lt; Type &gt; &amp;</type>
          <declname>ran2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="27" column="1" bodyfile="src/Range.cc" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1ac3495950469e6c7ba652e99ac7e69df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Range&lt; Type &gt;::~Range</definition>
        <argsstring>()</argsstring>
        <name>~Range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="30" column="9" bodyfile="src/Range.cc" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a885e2f67531baf6df9359f95c3f8ebaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Range&lt; Type &gt;::low</definition>
        <argsstring>(const Type &amp;t1)</argsstring>
        <name>low</name>
        <param>
          <type>const Type &amp;</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="33" column="6" bodyfile="src/Range.cc" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1aa0f159ae114a4053113ba035b1fc7b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Range&lt; Type &gt;::high</definition>
        <argsstring>(const Type &amp;t1)</argsstring>
        <name>high</name>
        <param>
          <type>const Type &amp;</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="34" column="6" bodyfile="src/Range.cc" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1adecc879cfe67dd9ee2212a008ab15f99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type</type>
        <definition>Type Range&lt; Type &gt;::low</definition>
        <argsstring>() const</argsstring>
        <name>low</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="37" column="6" bodyfile="src/Range.cc" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a04c4f592efe2d03e17868d5268cedfb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type</type>
        <definition>Type Range&lt; Type &gt;::high</definition>
        <argsstring>() const</argsstring>
        <name>high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="38" column="6" bodyfile="src/Range.cc" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a2cdcb2c3dbc38dcb923e302ad366f12c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Type</type>
        <definition>Type Range&lt; Type &gt;::spread</definition>
        <argsstring>() const</argsstring>
        <name>spread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="40" column="6" bodyfile="src/Range.cc" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1ab772b50dd178ffaeba1f6df900cef30b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Range&lt; Type &gt;::left</definition>
        <argsstring>(const Type &amp;value) const</argsstring>
        <name>left</name>
        <param>
          <type>const Type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="43" column="6" bodyfile="src/Range.cc" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1aefe9e0df9c7555ec1235764389feea36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Range&lt; Type &gt;::right</definition>
        <argsstring>(const Type &amp;value) const</argsstring>
        <name>right</name>
        <param>
          <type>const Type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="44" column="6" bodyfile="src/Range.cc" bodystart="119" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1abca95dd7b50b7142fe6d40d58816dec5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Range&lt; Type &gt;::contains</definition>
        <argsstring>(const Type &amp;value) const</argsstring>
        <name>contains</name>
        <param>
          <type>const Type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="45" column="6" bodyfile="src/Range.cc" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1a9d6efa72341e127230d4aa86fcd3b489" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; Type, long &gt;</type>
        <definition>Vector&lt; Type, long &gt; Range&lt; Type &gt;::mesh</definition>
        <argsstring>(long nSteps) const</argsstring>
        <name>mesh</name>
        <param>
          <type>long</type>
          <declname>nSteps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="48" column="8" bodyfile="src/Range.cc" bodystart="151" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classRange_1afea02da4611e86fbbd710e64fead5a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRange" kindref="compound">Range</ref>&lt; Type &gt; &amp;</type>
        <definition>Range&lt; Type &gt; &amp; Range&lt; Type &gt;::operator=</definition>
        <argsstring>(const Range&lt; Type &gt; &amp;ran2)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classRange" kindref="compound">Range</ref>&lt; Type &gt; &amp;</type>
          <declname>ran2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Range.hh" line="51" column="7" bodyfile="src/Range.cc" bodystart="140" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Range&lt; double &gt;</label>
        <link refid="classRange"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Range&lt; Type &gt;</label>
        <link refid="classRange"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Range&lt; Type &gt;</label>
        <link refid="classRange"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Range.hh" line="16" column="1" bodyfile="include/duffy/Range.hh" bodystart="15" bodyend="53"/>
    <listofallmembers>
      <member refid="classRange_1abca95dd7b50b7142fe6d40d58816dec5" prot="public" virt="non-virtual"><scope>Range</scope><name>contains</name></member>
      <member refid="classRange_1a3270ba0475dc057284ed49b8c1173361" prot="private" virt="non-virtual"><scope>Range</scope><name>hi</name></member>
      <member refid="classRange_1aa0f159ae114a4053113ba035b1fc7b21" prot="public" virt="non-virtual"><scope>Range</scope><name>high</name></member>
      <member refid="classRange_1a04c4f592efe2d03e17868d5268cedfb5" prot="public" virt="non-virtual"><scope>Range</scope><name>high</name></member>
      <member refid="classRange_1ab772b50dd178ffaeba1f6df900cef30b" prot="public" virt="non-virtual"><scope>Range</scope><name>left</name></member>
      <member refid="classRange_1aff3daec2c838abb5ce4661f9ec984d18" prot="private" virt="non-virtual"><scope>Range</scope><name>lo</name></member>
      <member refid="classRange_1a885e2f67531baf6df9359f95c3f8ebaa" prot="public" virt="non-virtual"><scope>Range</scope><name>low</name></member>
      <member refid="classRange_1adecc879cfe67dd9ee2212a008ab15f99" prot="public" virt="non-virtual"><scope>Range</scope><name>low</name></member>
      <member refid="classRange_1a9d6efa72341e127230d4aa86fcd3b489" prot="public" virt="non-virtual"><scope>Range</scope><name>mesh</name></member>
      <member refid="classRange_1afea02da4611e86fbbd710e64fead5a18" prot="public" virt="non-virtual"><scope>Range</scope><name>operator=</name></member>
      <member refid="classRange_1a1ae29a7125bc7127c67ec67829d1e6fe" prot="public" virt="non-virtual"><scope>Range</scope><name>Range</name></member>
      <member refid="classRange_1a7ce1e904703bd7e049db8c7aca16a0cb" prot="public" virt="non-virtual"><scope>Range</scope><name>Range</name></member>
      <member refid="classRange_1a4390939e24185ab8c083c125cf7c5625" prot="public" virt="non-virtual"><scope>Range</scope><name>Range</name></member>
      <member refid="classRange_1aefe9e0df9c7555ec1235764389feea36" prot="public" virt="non-virtual"><scope>Range</scope><name>right</name></member>
      <member refid="classRange_1a2cdcb2c3dbc38dcb923e302ad366f12c" prot="public" virt="non-virtual"><scope>Range</scope><name>spread</name></member>
      <member refid="classRange_1ac3495950469e6c7ba652e99ac7e69df9" prot="public" virt="virtual"><scope>Range</scope><name>~Range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
