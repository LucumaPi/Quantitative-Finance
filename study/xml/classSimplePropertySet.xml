<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classSimplePropertySet" kind="class" language="C++" prot="public">
    <compoundname>SimplePropertySet</compoundname>
    <basecompoundref refid="classPropertyThing" prot="public" virt="non-virtual">PropertyThing&lt; N, V &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>N</declname>
        <defname>N</defname>
        <defval>std::string</defval>
      </param>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classSimplePropertySet_1ae7e2bc706a3ded16c053d59d7a1343be" prot="public" static="no">
        <type>std::map&lt; N, V &gt;::iterator</type>
        <definition>typedef std::map&lt;N, V&gt;::iterator SimplePropertySet&lt; N, V &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="38" column="38" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classSimplePropertySet_1aab3d4fc3315979035be3d5c64c42d425" prot="public" static="no">
        <type>std::map&lt; N, V &gt;::const_iterator</type>
        <definition>typedef std::map&lt;N, V&gt;::const_iterator SimplePropertySet&lt; N, V &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="39" column="44" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSimplePropertySet_1a0800a56253703394fe7b6d1e87d69b6d" prot="private" static="no" mutable="no">
        <type>N</type>
        <definition>N SimplePropertySet&lt; N, V &gt;::nam</definition>
        <argsstring></argsstring>
        <name>nam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="29" column="3" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSimplePropertySet_1ae18260a10e9445bb3053c8d574beab13" prot="private" static="no" mutable="no">
        <type>std::map&lt; N, V &gt;</type>
        <definition>std::map&lt;N, V&gt; SimplePropertySet&lt; N, V &gt;::sl</definition>
        <argsstring></argsstring>
        <name>sl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="32" column="10" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSimplePropertySet_1a9324491848a6b497373d26d586aef0b8" prot="private" static="no" mutable="no">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; N &gt;</type>
        <definition>Set&lt;N&gt; SimplePropertySet&lt; N, V &gt;::keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="33" column="5" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimplePropertySet&lt; N, V &gt;::SimplePropertySet</definition>
        <argsstring>()</argsstring>
        <name>SimplePropertySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="42" column="1" bodyfile="src/SimplePropertySet.cc" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a023467dd53d24dc7ef5cb6b4d88aa7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimplePropertySet&lt; N, V &gt;::SimplePropertySet</definition>
        <argsstring>(const N &amp;name)</argsstring>
        <name>SimplePropertySet</name>
        <param>
          <type>const N &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="43" column="1" bodyfile="src/SimplePropertySet.cc" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1adda400272ff7f24ba0e4c3fab9e39f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimplePropertySet&lt; N, V &gt;::SimplePropertySet</definition>
        <argsstring>(const SimplePropertySet&lt; N, V &gt; &amp;source)</argsstring>
        <name>SimplePropertySet</name>
        <param>
          <type>const <ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>&lt; N, V &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="44" column="1" bodyfile="src/SimplePropertySet.cc" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a8b45e771b3efadcf2ccbcc3fdaa12f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimplePropertySet&lt; N, V &gt;::SimplePropertySet</definition>
        <argsstring>(const N &amp;name, const Set&lt; N &gt; &amp;keySet)</argsstring>
        <name>SimplePropertySet</name>
        <param>
          <type>const N &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classSet" kindref="compound">Set</ref>&lt; N &gt; &amp;</type>
          <declname>keySet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="45" column="1" bodyfile="src/SimplePropertySet.cc" bodystart="56" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1abe51bf32a2816ab01a7bbca3d838f430" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SimplePropertySet&lt; N, V &gt;::~SimplePropertySet</definition>
        <argsstring>()</argsstring>
        <name>~SimplePropertySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="47" column="9" bodyfile="src/SimplePropertySet.cc" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator</type>
        <definition>SimplePropertySet&lt; N, V &gt;::iterator SimplePropertySet&lt; N, V &gt;::Begin</definition>
        <argsstring>()</argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="50" column="14" bodyfile="src/SimplePropertySet.cc" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a6802c214360692877d33fa97de489c81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>SimplePropertySet&lt; N, V &gt;::const_iterator SimplePropertySet&lt; N, V &gt;::Begin</definition>
        <argsstring>() const</argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="51" column="16" bodyfile="src/SimplePropertySet.cc" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator</type>
        <definition>SimplePropertySet&lt; N, V &gt;::iterator SimplePropertySet&lt; N, V &gt;::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="52" column="10" bodyfile="src/SimplePropertySet.cc" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a5d6159e4afdef3815a3caa7840867f3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>SimplePropertySet&lt; N, V &gt;::const_iterator SimplePropertySet&lt; N, V &gt;::End</definition>
        <argsstring>() const</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="53" column="20" bodyfile="src/SimplePropertySet.cc" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1ab593364b7d18f4fa2639abc75c188d0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SimplePropertySet&lt; N, V &gt;::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="56" column="5" bodyfile="src/SimplePropertySet.cc" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1adee2b738f8853c056e40c72384a442bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>N</type>
        <definition>N SimplePropertySet&lt; N, V &gt;::operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="57" column="3" bodyfile="src/SimplePropertySet.cc" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a7674e0f5c6b6a747aa85d54bc52d1ab7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>N</type>
        <definition>N SimplePropertySet&lt; N, V &gt;::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="58" column="3" bodyfile="src/SimplePropertySet.cc" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a6ba0b7ab8d9122312489ca390c4bf403" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSet" kindref="compound">Set</ref>&lt; N &gt; &amp;</type>
        <definition>Set&lt; N &gt; &amp; SimplePropertySet&lt; N, V &gt;::definingSet</definition>
        <argsstring>() const</argsstring>
        <name>definingSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="59" column="5" bodyfile="src/SimplePropertySet.cc" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a1267fc2078252c8f5cde01bc082c7abb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SimplePropertySet&lt; N, V &gt;::hasProperty</definition>
        <argsstring>(const N &amp;search_name) const</argsstring>
        <name>hasProperty</name>
        <param>
          <type>const N &amp;</type>
          <declname>search_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="60" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>V</type>
        <definition>V SimplePropertySet&lt; N, V &gt;::value</definition>
        <argsstring>(const N &amp;name) const</argsstring>
        <name>value</name>
        <param>
          <type>const N &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="61" column="3" bodyfile="src/SimplePropertySet.cc" bodystart="164" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1ae7b7f24763a55b11e9e21cec05390965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::operator()</definition>
        <argsstring>(const N &amp;name)</argsstring>
        <name>operator()</name>
        <param>
          <type>const N &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="64" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a6bf75b5e081e0a8dea7535811349e081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::value</definition>
        <argsstring>(const N &amp;name, const V &amp;value)</argsstring>
        <name>value</name>
        <param>
          <type>const N &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="65" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="189" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a0416ff1b79646897fc4f6d7019f8ed63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::value</definition>
        <argsstring>(const Property&lt; N, V &gt; &amp;prop)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; N, V &gt; &amp;</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="66" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a10d2ad72a513d2b6727113b4d9ec0f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::ClearAll</definition>
        <argsstring>()</argsstring>
        <name>ClearAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="68" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a8663619c5669177f23286672ad49ceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::add</definition>
        <argsstring>(const Property&lt; N, V &gt; &amp;p)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; N, V &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="71" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="236" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1ae25d67b8dc28ce9af587b769bbe1dfe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::add</definition>
        <argsstring>(const N &amp;key, const V &amp;value)</argsstring>
        <name>add</name>
        <param>
          <type>const N &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="72" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="221" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1ade559928631fd263ac69aef08f4017d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::remove</definition>
        <argsstring>(const N &amp;key)</argsstring>
        <name>remove</name>
        <param>
          <type>const N &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="75" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="251" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a88c4fef57ef8e5279d28f6a13a10076c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimplePropertySet&lt; N, V &gt;::remove</definition>
        <argsstring>(const Property&lt; N, V &gt; &amp;prop)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; N, V &gt; &amp;</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="76" column="6" bodyfile="src/SimplePropertySet.cc" bodystart="260" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a3f605fbec62d086f9d5cd3fd204bb9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>&lt; N, V &gt; &amp;</type>
        <definition>SimplePropertySet&lt; N, V &gt; &amp; SimplePropertySet&lt; N, V &gt;::operator=</definition>
        <argsstring>(const SimplePropertySet&lt; N, V &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>&lt; N, V &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="80" column="19" bodyfile="src/SimplePropertySet.cc" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classPropertyThing" kindref="compound">PropertyThing</ref>&lt; N, V &gt; *</type>
        <definition>PropertyThing&lt; N, V &gt; * SimplePropertySet&lt; N, V &gt;::Copy</definition>
        <argsstring>() const</argsstring>
        <name>Copy</name>
        <reimplements refid="classPropertyThing_1a50223b9a9f80477ad12c4625a74479d6">Copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/SimplePropertySet.hh" line="83" column="15" bodyfile="src/SimplePropertySet.cc" bodystart="284" bodyend="288"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>PropertyThing&lt; Name, Value &gt;</label>
        <link refid="classPropertyThing"/>
      </node>
      <node id="4">
        <label>SimplePropertySet&lt; std::string, AnyType * &gt;</label>
        <link refid="classSimplePropertySet"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; std::string, AnyType * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>PropertyThing&lt; N, V &gt;</label>
        <link refid="classPropertyThing"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; N, V &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SimplePropertySet&lt; N, V &gt;</label>
        <link refid="classSimplePropertySet"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>PropertyThing&lt; Name, Value &gt;</label>
        <link refid="classPropertyThing"/>
      </node>
      <node id="2">
        <label>PropertyThing&lt; N, V &gt;</label>
        <link refid="classPropertyThing"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; N, V &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SimplePropertySet&lt; N, V &gt;</label>
        <link refid="classSimplePropertySet"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/duffy/SimplePropertySet.hh" line="26" column="1" bodyfile="include/duffy/SimplePropertySet.hh" bodystart="24" bodyend="89"/>
    <listofallmembers>
      <member refid="classSimplePropertySet_1a8663619c5669177f23286672ad49ceca" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>add</name></member>
      <member refid="classSimplePropertySet_1ae25d67b8dc28ce9af587b769bbe1dfe3" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>add</name></member>
      <member refid="classSimplePropertySet_1af0c72b2e6a39f6d2d02ce443afa01de5" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>Begin</name></member>
      <member refid="classSimplePropertySet_1a6802c214360692877d33fa97de489c81" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>Begin</name></member>
      <member refid="classSimplePropertySet_1a10d2ad72a513d2b6727113b4d9ec0f78" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>ClearAll</name></member>
      <member refid="classSimplePropertySet_1aab3d4fc3315979035be3d5c64c42d425" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>const_iterator</name></member>
      <member refid="classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef" prot="public" virt="virtual"><scope>SimplePropertySet</scope><name>Copy</name></member>
      <member refid="classSimplePropertySet_1a6ba0b7ab8d9122312489ca390c4bf403" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>definingSet</name></member>
      <member refid="classSimplePropertySet_1a6d3c8a051b7c6846508898c8375a2cfd" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>End</name></member>
      <member refid="classSimplePropertySet_1a5d6159e4afdef3815a3caa7840867f3c" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>End</name></member>
      <member refid="classSimplePropertySet_1a1267fc2078252c8f5cde01bc082c7abb" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>hasProperty</name></member>
      <member refid="classSimplePropertySet_1ae7e2bc706a3ded16c053d59d7a1343be" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>iterator</name></member>
      <member refid="classSimplePropertySet_1a9324491848a6b497373d26d586aef0b8" prot="private" virt="non-virtual"><scope>SimplePropertySet</scope><name>keys</name></member>
      <member refid="classSimplePropertySet_1a0800a56253703394fe7b6d1e87d69b6d" prot="private" virt="non-virtual"><scope>SimplePropertySet</scope><name>nam</name></member>
      <member refid="classSimplePropertySet_1a7674e0f5c6b6a747aa85d54bc52d1ab7" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>name</name></member>
      <member refid="classSimplePropertySet_1adee2b738f8853c056e40c72384a442bf" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>operator()</name></member>
      <member refid="classSimplePropertySet_1ae7b7f24763a55b11e9e21cec05390965" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>operator()</name></member>
      <member refid="classSimplePropertySet_1a3f605fbec62d086f9d5cd3fd204bb9e9" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>operator=</name></member>
      <member refid="classPropertyThing_1accff7ebee876e8eb6f3dac7731e8343f" prot="public" virt="non-virtual" ambiguityscope="PropertyThing&lt; N, V &gt;::"><scope>SimplePropertySet</scope><name>operator=</name></member>
      <member refid="classPropertyThing_1a7a54d9bf80f89626d0e1da9e968ca7fc" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>PropertyThing</name></member>
      <member refid="classSimplePropertySet_1ade559928631fd263ac69aef08f4017d2" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>remove</name></member>
      <member refid="classSimplePropertySet_1a88c4fef57ef8e5279d28f6a13a10076c" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>remove</name></member>
      <member refid="classSimplePropertySet_1a81d6e9ab7aff63f3fe5b5818f5aba24d" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>SimplePropertySet</name></member>
      <member refid="classSimplePropertySet_1a023467dd53d24dc7ef5cb6b4d88aa7ce" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>SimplePropertySet</name></member>
      <member refid="classSimplePropertySet_1adda400272ff7f24ba0e4c3fab9e39f6b" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>SimplePropertySet</name></member>
      <member refid="classSimplePropertySet_1a8b45e771b3efadcf2ccbcc3fdaa12f5e" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>SimplePropertySet</name></member>
      <member refid="classSimplePropertySet_1ab593364b7d18f4fa2639abc75c188d0c" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>Size</name></member>
      <member refid="classSimplePropertySet_1ae18260a10e9445bb3053c8d574beab13" prot="private" virt="non-virtual"><scope>SimplePropertySet</scope><name>sl</name></member>
      <member refid="classSimplePropertySet_1a897907f8f6c0d4a68e6fadf6d6538773" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>value</name></member>
      <member refid="classSimplePropertySet_1a6bf75b5e081e0a8dea7535811349e081" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>value</name></member>
      <member refid="classSimplePropertySet_1a0416ff1b79646897fc4f6d7019f8ed63" prot="public" virt="non-virtual"><scope>SimplePropertySet</scope><name>value</name></member>
      <member refid="classPropertyThing_1a4203e83962e477e2674693b14bec7fb4" prot="public" virt="virtual"><scope>SimplePropertySet</scope><name>~PropertyThing</name></member>
      <member refid="classSimplePropertySet_1abe51bf32a2816ab01a7bbca3d838f430" prot="public" virt="virtual"><scope>SimplePropertySet</scope><name>~SimplePropertySet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
