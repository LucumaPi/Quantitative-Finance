<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="DatesimDateTime_8hh" kind="file" language="C++">
    <compoundname>DatesimDateTime.hh</compoundname>
    <includes local="no">ctime</includes>
    <includes refid="TemporalType_8hh" local="yes">TemporalType.hh</includes>
    <includedby refid="PersonAndEmployee_8hh" local="yes">include/duffy/PersonAndEmployee.hh</includedby>
    <includedby refid="DatesimDateTime_8cc" local="no">src/DatesimDateTime.cc</includedby>
    <includedby refid="TestWrapper_8cc" local="no">tests/TestWrapper.cc</includedby>
    <incdepgraph>
      <node id="2">
        <label>ctime</label>
      </node>
      <node id="1">
        <label>include/duffy/DatesimDateTime.hh</label>
        <link refid="DatesimDateTime_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TemporalType.hh</label>
        <link refid="TemporalType_8hh_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/duffy/PersonAndEmployee.hh</label>
        <link refid="PersonAndEmployee_8hh_source"/>
      </node>
      <node id="1">
        <label>include/duffy/DatesimDateTime.hh</label>
        <link refid="DatesimDateTime_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classDatasimDateTime" prot="public">DatasimDateTime</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="DatesimDateTime_8hh_1a3363ca4d6d3cc0230b2804280591c991" prot="public" static="no">
        <name>OR</name>
        <initializer>||</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/DatesimDateTime.hh" line="13" column="9" bodyfile="include/duffy/DatesimDateTime.hh" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="DatesimDateTime_8hh_1acd1b97556dfbbac61063a63031d2f91d" prot="public" static="no">
        <name>AND</name>
        <initializer>&amp;&amp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/DatesimDateTime.hh" line="14" column="9" bodyfile="include/duffy/DatesimDateTime.hh" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="DatesimDateTime_8hh_1a44ddebc25af898d9561b53b0c3958acf" prot="public" static="no" strong="no">
        <type></type>
        <name>DatasimDateTime_type</name>
        <enumvalue id="DatesimDateTime_8hh_1a44ddebc25af898d9561b53b0c3958acfa6647a8890a0d7aafc2ba20a8233f9a19" prot="public">
          <name>HR12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DatesimDateTime_8hh_1a44ddebc25af898d9561b53b0c3958acfa1dba9c4f76222c820c24445679a1be2b" prot="public">
          <name>HR24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/DatesimDateTime.hh" line="16" column="26" bodyfile="include/duffy/DatesimDateTime.hh" bodystart="16" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="DatesimDateTime_8hh_1a3fe0acc26bd6a1dc8b4cb3b1d4bed7fe" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long secTy</definition>
        <argsstring></argsstring>
        <name>secTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/DatesimDateTime.hh" line="18" column="23" bodyfile="include/duffy/DatesimDateTime.hh" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="DatesimDateTime_8hh_1aafe18fe7ef3ef3fe4e2748adeb0e0232" prot="public" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long day_seconds</definition>
        <argsstring></argsstring>
        <name>day_seconds</name>
        <initializer>= (24l * 60l * 60l)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/DatesimDateTime.hh" line="19" column="28" bodyfile="include/duffy/DatesimDateTime.hh" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>DateTime.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>representing<sp/>dates<sp/>and<sp/>times<sp/>in<sp/>one<sp/>entity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DatasimDateTime_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DatasimDateTime_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TemporalType.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OR<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AND<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>DatasimDateTime_type<sp/>{HR12,<sp/>HR24};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secTy;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>day_seconds<sp/>=<sp/>(24l<sp/>*<sp/>60l<sp/>*<sp/>60l);</highlight></codeline>
<codeline lineno="20" refid="classDatasimDateTime" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classTemporalType" kindref="compound">TemporalType</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>secTy<sp/>seconds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>seconds<sp/>from<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>secTy<sp/>secs(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hours,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minutes,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds);<sp/></highlight><highlight class="comment">//<sp/>calc<sp/>#seconds<sp/>from<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hour_test(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hour);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>validity<sp/>of<sp/>hour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_test(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minute);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>validity<sp/>of<sp/>minute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec_test(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>validity<sp/>of<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secs_to_DatasimDateTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>over<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>time<sp/>from<sp/>seconds<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>constructor=time<sp/>today</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref>&amp;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>in<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref>(secTy<sp/>secs,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>over<sp/>=<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>constr<sp/>time<sp/>from<sp/>number<sp/>of<sp/>secs<sp/>after<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_hour();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>hour<sp/>of<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_minute();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>minute<sp/>(0..59)<sp/>of<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_second();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>second<sp/>(0..59)<sp/>of<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>return<sp/>TRUE<sp/>if<sp/>on<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>return<sp/>TRUE<sp/>if<sp/>not<sp/>on<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>is<sp/>later<sp/>than<sp/>time_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/><sp/></highlight><highlight class="comment">//<sp/>DatasimDateTime<sp/>is<sp/>earlier<sp/>than<sp/>DatasimDateTime_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>DatasimDateTime<sp/>is<sp/>later<sp/>than<sp/>DatasimDateTime_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>DatasimDateTime<sp/>is<sp/>earlier<sp/>than<sp/>DatasimDateTime_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator+(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>two<sp/>DatasimDateTimes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator+(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator-(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>DatasimDateTime_2<sp/>from<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator-(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>#seconds<sp/>from<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator++();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>1<sp/>second<sp/>to<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator--();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>one<sp/>second<sp/>from<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator+=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);</highlight><highlight class="comment">//<sp/>add<sp/>secs<sp/>seconds<sp/>to<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator+=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secs);<sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>secs<sp/>seconds<sp/>to<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator-=(<ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>DatasimDateTime_2);</highlight><highlight class="comment">//<sp/>subtract<sp/>seconds<sp/>from<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>operator-=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secs);<sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>seconds<sp/>from<sp/>this<sp/>DatasimDateTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>add_hours(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hours);<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>this<sp/>DatasimDateTime<sp/>+<sp/>#hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>add_minutes(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minutes);</highlight><highlight class="comment">//<sp/>return<sp/>this<sp/>DatasimDateTime<sp/>+<sp/>#minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>sub_hours(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hours);<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>this<sp/>DatasimDateTime<sp/>-<sp/>#hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>sub_minutes(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minutes);</highlight><highlight class="comment">//<sp/>return<sp/>this<sp/>DatasimDateTime<sp/>-<sp/>#minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>add_period(secTy<sp/>secs,<sp/>secTy<sp/>mins<sp/>=<sp/>0,<sp/>secTy<sp/>hours<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDatasimDateTime" kindref="compound">DatasimDateTime</ref><sp/>sub_period(secTy<sp/>secs,<sp/>secTy<sp/>mins<sp/>=<sp/>0,<sp/>secTy<sp/>hours<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>secs_to_dtime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>over<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>time<sp/>from<sp/>seconds<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DatasimDateTime_HH<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/duffy/DatesimDateTime.hh"/>
  </compounddef>
</doxygen>
