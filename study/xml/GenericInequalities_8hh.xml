<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="GenericInequalities_8hh" kind="file" language="C++">
    <compoundname>GenericInequalities.hh</compoundname>
    <includes refid="GenericInequalities_8cc" local="yes">../../src/GenericInequalities.cc</includes>
    <includedby refid="GenericInequalities_8cc" local="no">src/GenericInequalities.cc</includedby>
    <includedby refid="TestGenericInequalities_8cc" local="no">tests/TestGenericInequalities.cc</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/duffy/GenericInequalities.hh</label>
        <link refid="GenericInequalities_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../../src/GenericInequalities.cc</label>
        <link refid="GenericInequalities_8cc"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/duffy/GenericInequalities.hh</label>
        <link refid="GenericInequalities_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/GenericInequalities.cc</label>
        <link refid="GenericInequalities_8cc"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tests/TestGenericInequalities.cc</label>
        <link refid="TestGenericInequalities_8cc"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="GenericInequalities_8hh_1a1b213e274e5aa76fd4c91940e44f4eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Numeric</type>
          </param>
        </templateparamlist>
        <type>Numeric</type>
        <definition>Numeric Max</definition>
        <argsstring>(const Numeric &amp;x, const Numeric &amp;y)</argsstring>
        <name>Max</name>
        <param>
          <type>const Numeric &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/GenericInequalities.hh" line="19" column="9" bodyfile="src/GenericInequalities.cc" bodystart="22" bodyend="28" declfile="include/duffy/GenericInequalities.hh" declline="19" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="GenericInequalities_8hh_1adb69bfcb34a8cdf14dcb3fc08f9687c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Numeric</type>
          </param>
        </templateparamlist>
        <type>Numeric</type>
        <definition>Numeric Min</definition>
        <argsstring>(const Numeric &amp;x, const Numeric &amp;y)</argsstring>
        <name>Min</name>
        <param>
          <type>const Numeric &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/GenericInequalities.hh" line="21" column="9" bodyfile="src/GenericInequalities.cc" bodystart="31" bodyend="37" declfile="include/duffy/GenericInequalities.hh" declline="21" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="GenericInequalities_8hh_1ae11321548cc6361940452613ca59ebba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Numeric</type>
          </param>
        </templateparamlist>
        <type>Numeric</type>
        <definition>Numeric Max</definition>
        <argsstring>(const Numeric &amp;x, const Numeric &amp;y, const Numeric &amp;z)</argsstring>
        <name>Max</name>
        <param>
          <type>const Numeric &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/GenericInequalities.hh" line="25" column="9" bodyfile="src/GenericInequalities.cc" bodystart="41" bodyend="44" declfile="include/duffy/GenericInequalities.hh" declline="25" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="GenericInequalities_8hh_1a1cbb426c5b2fca977f1582103f5f6073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Numeric</type>
          </param>
        </templateparamlist>
        <type>Numeric</type>
        <definition>Numeric Min</definition>
        <argsstring>(const Numeric &amp;x, const Numeric &amp;y, const Numeric &amp;z)</argsstring>
        <name>Min</name>
        <param>
          <type>const Numeric &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Numeric &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/GenericInequalities.hh" line="27" column="9" bodyfile="src/GenericInequalities.cc" bodystart="47" bodyend="50" declfile="include/duffy/GenericInequalities.hh" declline="27" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>GenericInequalities.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Header<sp/>file<sp/>containing<sp/>declarations<sp/>of<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>template/generic<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Preprocessor<sp/>directives;<sp/>ensures<sp/>that<sp/>we<sp/>do<sp/>not<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>a<sp/>file<sp/>twice<sp/>(gives<sp/>compiler<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GenericInequalities_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GenericInequalities_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>and<sp/>Min<sp/>of<sp/>two<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Numeric&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">Numeric<sp/><ref refid="GenericInequalities_8hh_1a1b213e274e5aa76fd4c91940e44f4eb5" kindref="member">Max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>y);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Numeric&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">Numeric<sp/><ref refid="GenericInequalities_8hh_1adb69bfcb34a8cdf14dcb3fc08f9687c0" kindref="member">Min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>y);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>and<sp/>Min<sp/>of<sp/>three<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Numeric&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">Numeric<sp/><ref refid="GenericInequalities_8hh_1a1b213e274e5aa76fd4c91940e44f4eb5" kindref="member">Max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>z);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Numeric&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">Numeric<sp/><ref refid="GenericInequalities_8hh_1adb69bfcb34a8cdf14dcb3fc08f9687c0" kindref="member">Min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Numeric&amp;<sp/>z);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#include<sp/>&quot;../../src/GenericInequalities.cc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/duffy/GenericInequalities.hh"/>
  </compounddef>
</doxygen>
