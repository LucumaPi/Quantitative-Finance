<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classArrayStructure" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ArrayStructure</compoundname>
    <derivedcompoundref refid="classFullArray" prot="public" virt="non-virtual">FullArray&lt; V, TA &gt;</derivedcompoundref>
    <derivedcompoundref refid="classFullArray" prot="public" virt="non-virtual">FullArray&lt; V &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classArrayStructure_1ae1faa0c106fbfe8cf7b448305cd60971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArrayStructure&lt; V &gt;::ArrayStructure</definition>
        <argsstring>()</argsstring>
        <name>ArrayStructure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="18" column="1" bodyfile="src/ArrayStructure.cc" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a3132a3ed14728c10e895876e209b0fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArrayStructure&lt; V &gt;::ArrayStructure</definition>
        <argsstring>(const ArrayStructure&lt; V &gt; &amp;source)</argsstring>
        <name>ArrayStructure</name>
        <param>
          <type>const <ref refid="classArrayStructure" kindref="compound">ArrayStructure</ref>&lt; V &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="19" column="1" bodyfile="src/ArrayStructure.cc" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a432ff0d274a03c435763de0541c89bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ArrayStructure&lt; V &gt;::~ArrayStructure</definition>
        <argsstring>()</argsstring>
        <name>~ArrayStructure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="20" column="9" bodyfile="src/ArrayStructure.cc" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a29bd0faa2d4f0e60152ef197d56148b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t ArrayStructure&lt; V &gt;::Size</definition>
        <argsstring>() const =0</argsstring>
        <name>Size</name>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <reimplementedby refid="classFullArray_1ae9a91c66741570e20758d54664676db8">Size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="23" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a78eeb9ade72d1ce8dc930758618c16fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const V &amp;</type>
        <definition>const V &amp; ArrayStructure&lt; V &gt;::Element</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>Element</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="24" column="9" bodyfile="src/ArrayStructure.cc" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a4d49f9d79bad81e175574b46515f1dac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t ArrayStructure&lt; V &gt;::MinIndex</definition>
        <argsstring>() const</argsstring>
        <name>MinIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="26" column="13" bodyfile="src/ArrayStructure.cc" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a4cc63ad298846fec9ab00d6e1d4436d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t ArrayStructure&lt; V &gt;::MaxIndex</definition>
        <argsstring>() const</argsstring>
        <name>MaxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="27" column="13" bodyfile="src/ArrayStructure.cc" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1ab93152f3cacec460dff67b9ab81938f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ArrayStructure&lt; V &gt;::Element</definition>
        <argsstring>(size_t index, const V &amp;val)</argsstring>
        <name>Element</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="30" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1a81c632bed29ddd1a373b6769490a67d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>V &amp;</type>
        <definition>virtual V&amp; ArrayStructure&lt; V &gt;::operator[]</definition>
        <argsstring>(std::size_t index)=0</argsstring>
        <name>operator[]</name>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1a0ecf139013ac590276644320dcc663fc">operator[]</reimplementedby>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="33" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1ad7d4487d8276969345406acbf753e00a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const V &amp;</type>
        <definition>virtual const V&amp; ArrayStructure&lt; V &gt;::operator[]</definition>
        <argsstring>(std::size_t index) const =0</argsstring>
        <name>operator[]</name>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <reimplementedby refid="classFullArray_1ab20c110bcf7e445dfc410b0fb55fa408">operator[]</reimplementedby>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="34" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classArrayStructure_1aee8dc21d313bd8706f397a561332d654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classArrayStructure" kindref="compound">ArrayStructure</ref>&lt; V &gt; &amp;</type>
        <definition>ArrayStructure&lt; V &gt; &amp; ArrayStructure&lt; V &gt;::operator=</definition>
        <argsstring>(const ArrayStructure&lt; V &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classArrayStructure" kindref="compound">ArrayStructure</ref>&lt; V &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/ArrayStructure.hh" line="36" column="16" bodyfile="src/ArrayStructure.cc" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>FullArray&lt; V &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; V &gt;</edgelabel>
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>FullArray&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt;, std::allocator&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt; &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt;, std::allocator&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt; &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ArrayStructure&lt; V &gt;</label>
        <link refid="classArrayStructure"/>
      </node>
      <node id="14">
        <label>ArrayStructure&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>FullArray&lt; FullArray&lt; TValue, TA &gt;, std::allocator&lt; FullArray&lt; TValue, TA &gt; &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; TValue, TA &gt;, std::allocator&lt; FullArray&lt; TValue, TA &gt; &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>ArrayStructure&lt; Vector&lt; double, int &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Vector&lt; double, int &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>FullArray&lt; Vector&lt; double, int &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; Vector&lt; double, int &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>ArrayStructure&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; V, std::allocator&lt; V &gt; &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>FullArray&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt;, std::allocator&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt; &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt;, std::allocator&lt; FullArray&lt; double, std::allocator&lt; double &gt; &gt; &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>ArrayStructure&lt; double &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>FullArray&lt; Vector&lt; V, I &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; Vector&lt; V, I &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>ArrayStructure&lt; FullArray&lt; TValue, TA &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; FullArray&lt; TValue, TA &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>ArrayStructure&lt; Vector&lt; V, I &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Vector&lt; V, I &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>FullArray&lt; double &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>FullArray&lt; NumericMatrix&lt; V, I &gt; &gt;</label>
        <link refid="classFullArray"/>
        <childnode refid="2" relation="template-instance">
          <edgelabel>&lt; NumericMatrix&lt; V, I &gt; &gt;</edgelabel>
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>ArrayStructure&lt; NumericMatrix&lt; V, I &gt; &gt;</label>
        <link refid="classArrayStructure"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; NumericMatrix&lt; V, I &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ArrayStructure&lt; V &gt;</label>
        <link refid="classArrayStructure"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/ArrayStructure.hh" line="15" column="1" bodyfile="include/duffy/ArrayStructure.hh" bodystart="14" bodyend="37"/>
    <listofallmembers>
      <member refid="classArrayStructure_1ae1faa0c106fbfe8cf7b448305cd60971" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>ArrayStructure</name></member>
      <member refid="classArrayStructure_1a3132a3ed14728c10e895876e209b0fdd" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>ArrayStructure</name></member>
      <member refid="classArrayStructure_1a78eeb9ade72d1ce8dc930758618c16fc" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>Element</name></member>
      <member refid="classArrayStructure_1ab93152f3cacec460dff67b9ab81938f5" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>Element</name></member>
      <member refid="classArrayStructure_1a4cc63ad298846fec9ab00d6e1d4436d4" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>MaxIndex</name></member>
      <member refid="classArrayStructure_1a4d49f9d79bad81e175574b46515f1dac" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>MinIndex</name></member>
      <member refid="classArrayStructure_1aee8dc21d313bd8706f397a561332d654" prot="public" virt="non-virtual"><scope>ArrayStructure</scope><name>operator=</name></member>
      <member refid="classArrayStructure_1a81c632bed29ddd1a373b6769490a67d7" prot="public" virt="pure-virtual"><scope>ArrayStructure</scope><name>operator[]</name></member>
      <member refid="classArrayStructure_1ad7d4487d8276969345406acbf753e00a" prot="public" virt="pure-virtual"><scope>ArrayStructure</scope><name>operator[]</name></member>
      <member refid="classArrayStructure_1a29bd0faa2d4f0e60152ef197d56148b4" prot="public" virt="pure-virtual"><scope>ArrayStructure</scope><name>Size</name></member>
      <member refid="classArrayStructure_1a432ff0d274a03c435763de0541c89bba" prot="public" virt="virtual"><scope>ArrayStructure</scope><name>~ArrayStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
