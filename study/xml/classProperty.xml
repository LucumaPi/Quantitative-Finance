<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classProperty" kind="class" language="C++" prot="public">
    <compoundname>Property</compoundname>
    <basecompoundref refid="classPropertyThing" prot="public" virt="non-virtual">PropertyThing&lt; Name, Value &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Name</declname>
        <defname>Name</defname>
        <defval>std::string</defval>
      </param>
      <param>
        <type>class</type>
        <declname>Value</declname>
        <defname>Value</defname>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classProperty_1acb29bee2b30c194157d1ebf9dadbade6" prot="private" static="no" mutable="no">
        <type>Name</type>
        <definition>Name Property&lt; Name, Value &gt;::nam</definition>
        <argsstring></argsstring>
        <name>nam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="26" column="6" bodyfile="include/duffy/Property.hh" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classProperty_1abbff47e2c2275493de8ad4d256c8e9fe" prot="private" static="no" mutable="no">
        <type>Value</type>
        <definition>Value Property&lt; Name, Value &gt;::con</definition>
        <argsstring></argsstring>
        <name>con</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="27" column="7" bodyfile="include/duffy/Property.hh" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classProperty_1af8aa99d860cce115830f820445e6ef82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property&lt; Name, Value &gt;::Property</definition>
        <argsstring>()</argsstring>
        <name>Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="31" column="1" bodyfile="src/Property.cc" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a0ca61b9ce1a8d06dea7b794d922c489f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property&lt; Name, Value &gt;::Property</definition>
        <argsstring>(const Name &amp;name)</argsstring>
        <name>Property</name>
        <param>
          <type>const Name &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="32" column="1" bodyfile="src/Property.cc" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1affc9972cb059fcb9d6fd6a2935725db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property&lt; Name, Value &gt;::Property</definition>
        <argsstring>(const Name &amp;name, const Value &amp;t)</argsstring>
        <name>Property</name>
        <param>
          <type>const Name &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Value &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="33" column="1" bodyfile="src/Property.cc" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a08238ca37786059a03117ddb7fc4ff51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property&lt; Name, Value &gt;::Property</definition>
        <argsstring>(const Property&lt; Name, Value &gt; &amp;source)</argsstring>
        <name>Property</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; Name, Value &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="34" column="1" bodyfile="src/Property.cc" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a21f18bbb89de80e8b1a52ba3279a436d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Property&lt; Name, Value &gt;::~Property</definition>
        <argsstring>()</argsstring>
        <name>~Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="36" column="9" bodyfile="src/Property.cc" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a682f715ad70b45bef80b85d10940f370" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Value</type>
        <definition>Value Property&lt; Name, Value &gt;::operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="41" column="15" bodyfile="src/Property.cc" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a7b923a1fd183b38fc1629852e06b39b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Property&lt; Name, Value &gt;::operator()</definition>
        <argsstring>(const Value &amp;t)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Value &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="42" column="14" bodyfile="src/Property.cc" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a61070c4a41dcdbc890c6b27146931e97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Name</type>
        <definition>Name Property&lt; Name, Value &gt;::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="45" column="14" bodyfile="src/Property.cc" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1ac7d773c6385a82a906e53701c2cc163b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classProperty" kindref="compound">Property</ref>&lt; Name, Value &gt; &amp;</type>
        <definition>Property&lt; Name, Value &gt; &amp; Property&lt; Name, Value &gt;::operator=</definition>
        <argsstring>(const Property&lt; Name, Value &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; Name, Value &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="47" column="10" bodyfile="src/Property.cc" bodystart="65" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a7e1e5e423a9021764d505bd982a2b4da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classPropertyThing" kindref="compound">PropertyThing</ref>&lt; Name, Value &gt; *</type>
        <definition>PropertyThing&lt; Name, Value &gt; * Property&lt; Name, Value &gt;::Copy</definition>
        <argsstring>() const</argsstring>
        <name>Copy</name>
        <reimplements refid="classPropertyThing_1a50223b9a9f80477ad12c4625a74479d6">Copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="48" column="15" bodyfile="src/Property.cc" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1ab70ddb3064e0ae6cfbcc661d5bc4505a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Property&lt; Name, Value &gt;::operator==</definition>
        <argsstring>(const Property&lt; Name, Value &gt; &amp;prop2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; Name, Value &gt; &amp;</type>
          <declname>prop2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="52" column="6" bodyfile="src/Property.cc" bodystart="145" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classProperty_1a0f89884cb3d81307f9f325c8c45cb82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Property&lt; Name, Value &gt;::operator!=</definition>
        <argsstring>(const Property&lt; Name, Value &gt; &amp;source)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classProperty" kindref="compound">Property</ref>&lt; Name, Value &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Property.hh" line="53" column="6" bodyfile="src/Property.cc" bodystart="155" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Property&lt; Name, Value &gt;</label>
        <link refid="classProperty"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>PropertyThing&lt; Name, Value &gt;</label>
        <link refid="classPropertyThing"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Property&lt; Name, Value &gt;</label>
        <link refid="classProperty"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>PropertyThing&lt; Name, Value &gt;</label>
        <link refid="classPropertyThing"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Property.hh" line="23" column="1" bodyfile="include/duffy/Property.hh" bodystart="22" bodyend="57"/>
    <listofallmembers>
      <member refid="classProperty_1abbff47e2c2275493de8ad4d256c8e9fe" prot="private" virt="non-virtual"><scope>Property</scope><name>con</name></member>
      <member refid="classProperty_1a7e1e5e423a9021764d505bd982a2b4da" prot="public" virt="virtual"><scope>Property</scope><name>Copy</name></member>
      <member refid="classProperty_1acb29bee2b30c194157d1ebf9dadbade6" prot="private" virt="non-virtual"><scope>Property</scope><name>nam</name></member>
      <member refid="classProperty_1a61070c4a41dcdbc890c6b27146931e97" prot="public" virt="virtual"><scope>Property</scope><name>name</name></member>
      <member refid="classProperty_1a0f89884cb3d81307f9f325c8c45cb82e" prot="public" virt="non-virtual"><scope>Property</scope><name>operator!=</name></member>
      <member refid="classProperty_1a682f715ad70b45bef80b85d10940f370" prot="public" virt="virtual"><scope>Property</scope><name>operator()</name></member>
      <member refid="classProperty_1a7b923a1fd183b38fc1629852e06b39b6" prot="public" virt="virtual"><scope>Property</scope><name>operator()</name></member>
      <member refid="classProperty_1ac7d773c6385a82a906e53701c2cc163b" prot="public" virt="non-virtual"><scope>Property</scope><name>operator=</name></member>
      <member refid="classPropertyThing_1accff7ebee876e8eb6f3dac7731e8343f" prot="public" virt="non-virtual" ambiguityscope="PropertyThing::"><scope>Property</scope><name>operator=</name></member>
      <member refid="classProperty_1ab70ddb3064e0ae6cfbcc661d5bc4505a" prot="public" virt="non-virtual"><scope>Property</scope><name>operator==</name></member>
      <member refid="classProperty_1af8aa99d860cce115830f820445e6ef82" prot="public" virt="non-virtual"><scope>Property</scope><name>Property</name></member>
      <member refid="classProperty_1a0ca61b9ce1a8d06dea7b794d922c489f" prot="public" virt="non-virtual"><scope>Property</scope><name>Property</name></member>
      <member refid="classProperty_1affc9972cb059fcb9d6fd6a2935725db2" prot="public" virt="non-virtual"><scope>Property</scope><name>Property</name></member>
      <member refid="classProperty_1a08238ca37786059a03117ddb7fc4ff51" prot="public" virt="non-virtual"><scope>Property</scope><name>Property</name></member>
      <member refid="classPropertyThing_1a7a54d9bf80f89626d0e1da9e968ca7fc" prot="public" virt="non-virtual"><scope>Property</scope><name>PropertyThing</name></member>
      <member refid="classProperty_1a21f18bbb89de80e8b1a52ba3279a436d" prot="public" virt="virtual"><scope>Property</scope><name>~Property</name></member>
      <member refid="classPropertyThing_1a4203e83962e477e2674693b14bec7fb4" prot="public" virt="virtual"><scope>Property</scope><name>~PropertyThing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
