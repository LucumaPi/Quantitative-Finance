<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="Set_8cc" kind="file" language="C++">
    <compoundname>Set.cc</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="Set_8hh" local="no">duffy/Set.hh</includes>
    <includedby refid="Set_8hh" local="yes">include/duffy/Set.hh</includedby>
    <incdepgraph>
      <node id="5">
        <label>list</label>
      </node>
      <node id="3">
        <label>duffy/Set.hh</label>
        <link refid="Set_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Set.cc</label>
        <link refid="Set_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>src/LatticeMechanisms.cc</label>
        <link refid="LatticeMechanisms_8cc"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/duffy/Set.hh</label>
        <link refid="Set_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>include/duffy/PSetCreators.hh</label>
        <link refid="PSetCreators_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/Relation.cc</label>
        <link refid="Relation_8cc"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tests/TestWrapper.cc</label>
        <link refid="TestWrapper_8cc"/>
      </node>
      <node id="3">
        <label>include/duffy/SimplePropertySet.hh</label>
        <link refid="SimplePropertySet_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/AssocArray.cc</label>
        <link refid="AssocArray_8cc"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>tests/TestSet2.cc</label>
        <link refid="TestSet2_8cc"/>
      </node>
      <node id="6">
        <label>include/duffy/MatrixMechanisms.hh</label>
        <link refid="MatrixMechanisms_8hh"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/ExcelDriver.cc</label>
        <link refid="ExcelDriver_8cc"/>
      </node>
      <node id="1">
        <label>src/Set.cc</label>
        <link refid="Set_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>tests/TestNewLatticeBasic.cc</label>
        <link refid="TestNewLatticeBasic_8cc"/>
      </node>
      <node id="13">
        <label>tests/TestNewLattice.cc</label>
        <link refid="TestNewLattice_8cc"/>
      </node>
      <node id="4">
        <label>include/duffy/ArrayMechanisms.hh</label>
        <link refid="ArrayMechanisms_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/ExcelMechanisms.cc</label>
        <link refid="ExcelMechanisms_8cc"/>
      </node>
      <node id="17">
        <label>tests/TestSTD.cc</label>
        <link refid="TestSTD_8cc"/>
      </node>
      <node id="22">
        <label>src/SimplePropertySet.cc</label>
        <link refid="SimplePropertySet_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tests/TestLatticeBasic.cc</label>
        <link refid="TestLatticeBasic_8cc"/>
      </node>
      <node id="37">
        <label>tests/TestSetOperations2.cc</label>
        <link refid="TestSetOperations2_8cc"/>
      </node>
      <node id="11">
        <label>tests/director.cc</label>
        <link refid="director_8cc"/>
      </node>
      <node id="27">
        <label>tests/TestHeteroProperty.cc</label>
        <link refid="TestHeteroProperty_8cc"/>
      </node>
      <node id="34">
        <label>tests/TestRelation.cc</label>
        <link refid="TestRelation_8cc"/>
      </node>
      <node id="29">
        <label>AssocMatrix.hh</label>
        <link refid="AssocMatrix_8hh"/>
      </node>
      <node id="36">
        <label>tests/TestSetGroup.cc</label>
        <link refid="TestSetGroup_8cc"/>
      </node>
      <node id="32">
        <label>include/duffy/Relation.hh</label>
        <link refid="Relation_8hh"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/IEulerIBVPSolver.cc</label>
        <link refid="IEulerIBVPSolver_8cc"/>
      </node>
      <node id="7">
        <label>src/MatrixMechanisms.cc</label>
        <link refid="MatrixMechanisms_8cc"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/ArrayMechanisms.cc</label>
        <link refid="ArrayMechanisms_8cc"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tests/TestPSetCreators.cc</label>
        <link refid="TestPSetCreators_8cc"/>
      </node>
      <node id="25">
        <label>src/Wrapper.cc</label>
        <link refid="Wrapper_8cc"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>tests/TestRanges.cc</label>
        <link refid="TestRanges_8cc"/>
      </node>
      <node id="15">
        <label>tests/TestIBVP.cc</label>
        <link refid="TestIBVP_8cc"/>
      </node>
      <node id="21">
        <label>tests/testBSPDE1.cc</label>
        <link refid="testBSPDE1_8cc"/>
      </node>
      <node id="20">
        <label>tests/TestAssocMatrix.cc</label>
        <link refid="TestAssocMatrix_8cc"/>
      </node>
      <node id="19">
        <label>tests/TestAssocArray.cc</label>
        <link refid="TestAssocArray_8cc"/>
      </node>
      <node id="31">
        <label>tests/TestAssocArrayTypedef.cc</label>
        <link refid="TestAssocArrayTypedef_8cc"/>
      </node>
      <node id="28">
        <label>include/duffy/AssocArray.hh</label>
        <link refid="AssocArray_8hh"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Set_8cc_1af298bad99bd0f0f59a72912c794c6933" prot="public" static="no">
        <name>Set_CC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Set.cc" line="21" column="9" bodyfile="src/Set.cc" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Set.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>template<sp/>class<sp/>that<sp/>implements<sp/>the<sp/>concept<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>mathematical<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>composed<sp/>of<sp/>an<sp/>STL<sp/>set<sp/>and<sp/>uses<sp/>Information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hiding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Last<sp/>modification<sp/>dates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-5-14<sp/>DD<sp/>kick-off<sp/>code<sp/>(spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-5-15<sp/>DD<sp/>Code<sp/>for<sp/>member<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-5-20<sp/>DD<sp/>Programmed<sp/>Cartesian<sp/>Product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-7-4<sp/>DD<sp/>Review<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-7-4<sp/>DD<sp/>Cartesian<sp/>product<sp/>whose<sp/>domain<sp/>and<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>are<sp/>in<sp/>different<sp/>spaces<sp/>(using<sp/>template<sp/>member<sp/>functions!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2004-9-14<sp/>DD<sp/>Insert<sp/>another<sp/>set<sp/>(union)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2004-2006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Set_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="Set_8cc_1af298bad99bd0f0f59a72912c794c6933" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Set_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Set_8hh" kindref="compound">duffy/Set.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="28" refid="classSet_1ae909aa544663321e00cb18f398e5f66b" refkind="member"><highlight class="normal"><ref refid="classSet_1ae909aa544663321e00cb18f398e5f66b" kindref="member">Set&lt;V&gt;::Set</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>std::set&lt;V&gt;();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="35" refid="classSet_1a1c22f4531f0962c3a354e3bacc0bad9a" refkind="member"><highlight class="normal"><ref refid="classSet_1ae909aa544663321e00cb18f398e5f66b" kindref="member">Set&lt;V&gt;::Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;V&gt;&amp;<sp/>stlSet)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>stlSet;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="42" refid="classSet_1a739f06b4b802b7bcd41179e77c83bcc6" refkind="member"><highlight class="normal"><ref refid="classSet_1ae909aa544663321e00cb18f398e5f66b" kindref="member">Set&lt;V&gt;::Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>s2)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>std::set&lt;V&gt;(s2.s);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>set<sp/>from<sp/>V<sp/>that<sp/>has<sp/>STL-compatible<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="51" refid="classSet_1a7e184745fde7d92a8caf9aa4bf1d122f" refkind="member"><highlight class="normal"><ref refid="classSet_1ae909aa544663321e00cb18f398e5f66b" kindref="member">Set&lt;V&gt;::Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;V&gt;&amp;<sp/>con)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>From<sp/>am<sp/>STL<sp/>container<sp/>(list,<sp/>vector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>std::set&lt;V&gt;();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>list<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::list&lt;V&gt;::const_iterator<sp/>i;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>every<sp/>character<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>con.begin();<sp/>i<sp/>!=<sp/>con.end();<sp/>++i)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(*i);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>only<sp/>be<sp/>inserted<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="67" refid="classSet_1ac5fb97b30e904016e81e2660ad1af712" refkind="member"><highlight class="normal"><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref><sp/><ref refid="classSet_1ac5fb97b30e904016e81e2660ad1af712" kindref="member">Set&lt;V&gt;::operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>s2)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;s2)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s2.s;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="79" refid="classSet_1aafe7310e2d779a7385ec57fac57bf1e0" refkind="member"><highlight class="normal"><ref refid="classSet_1aafe7310e2d779a7385ec57fac57bf1e0" kindref="member">Set&lt;V&gt;::~Set</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>set<sp/>operations<sp/>from<sp/>High<sp/>School</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Intersection(const<sp/>Set&lt;V&gt;&amp;<sp/>s1,<sp/>const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::set&lt;V&gt;<sp/>myintersect;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>typename<sp/>std::set&lt;V&gt;::iterator<sp/>i<sp/>=<sp/>myintersect.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::insert_iterator&lt;std::set&lt;V&gt;<sp/>&gt;<sp/>insertiter(myintersect,<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>set_intersection(s1.s.begin(),<sp/>s1.s.end(),<sp/>s2.s.begin(),<sp/>s2.s.end(),<sp/>insertiter);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Set&lt;V&gt;(myintersect);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Set&lt;V&gt;::operator<sp/>^<sp/>(const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>//<sp/>Intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Intersection(*this,<sp/>s2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Union(const<sp/>Set&lt;V&gt;&amp;<sp/>s1,<sp/>const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::set&lt;V&gt;<sp/>myunion;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>typename<sp/>std::set&lt;V&gt;::iterator<sp/>i<sp/>=<sp/>myunion.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::insert_iterator&lt;std::set&lt;V&gt;<sp/>&gt;<sp/>insertiter(myunion,<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>set_union(s1.s.begin(),<sp/>s1.s.end(),<sp/>s2.s.begin(),<sp/>s2.s.end(),<sp/>insertiter);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Set&lt;V&gt;(myunion);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Set&lt;V&gt;::operator<sp/>+<sp/>(const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>//<sp/>Union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Union(*this,<sp/>s2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Difference(const<sp/>Set&lt;V&gt;&amp;<sp/>s1,<sp/>const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::set&lt;V&gt;<sp/>mydiff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>typename<sp/>std::set&lt;V&gt;::iterator<sp/>i<sp/>=<sp/>mydiff.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::insert_iterator&lt;std::set&lt;V&gt;<sp/>&gt;<sp/>insertiter(mydiff,<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>set_difference(s1.s.begin(),<sp/>s1.s.end(),<sp/>s2.s.begin(),<sp/>s2.s.end(),<sp/>insertiter);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Set&lt;V&gt;(mydiff);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Set&lt;V&gt;::operator<sp/>-<sp/>(const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>//<sp/>Difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Difference(*this,<sp/>s2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>SymmetricDifference(const<sp/>Set&lt;V&gt;&amp;<sp/>s1,<sp/>const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::set&lt;V&gt;<sp/>mysdiff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>typename<sp/>std::set&lt;V&gt;::iterator<sp/>i<sp/>=<sp/>mysdiff.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::insert_iterator&lt;std::set&lt;V&gt;<sp/>&gt;<sp/>insertiter(mysdiff,<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>set_symmetric_difference(s1.s.begin(),<sp/>s1.s.end(),<sp/>s2.s.begin(),<sp/>s2.s.end(),<sp/>insertiter);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>Set&lt;V&gt;(mysdiff);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;class<sp/>V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set&lt;V&gt;<sp/>Set&lt;V&gt;::operator<sp/>%<sp/>(const<sp/>Set&lt;V&gt;&amp;<sp/>s2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{<sp/>//<sp/>Symmetric<sp/>Difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>SymmetricDifference(*this,<sp/>s2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classSet_1a3ca47221f02ee54c6b627ff73a9b5b98" refkind="member"><highlight class="normal"><ref refid="classSet_1a54d34cd05633a20d09b2e42fee9bb31f" kindref="member">Set&lt;V&gt;::iterator</ref><sp/><ref refid="classSet_1a3ca47221f02ee54c6b627ff73a9b5b98" kindref="member">Set&lt;V&gt;::Begin</ref>()</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>iterator<sp/>at<sp/>begin<sp/>of<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.begin();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classSet_1af72b60644e986ecd02279b64b56e86f3" refkind="member"><highlight class="normal"><ref refid="classSet_1ac9c538ffe3c823f5f28fd65910289b24" kindref="member">Set&lt;V&gt;::const_iterator</ref><sp/><ref refid="classSet_1a3ca47221f02ee54c6b627ff73a9b5b98" kindref="member">Set&lt;V&gt;::Begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const<sp/>iterator<sp/>at<sp/>begin<sp/>of<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.begin();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classSet_1aeb4a4b2026eb040a24e9b251e0c49dec" refkind="member"><highlight class="normal"><ref refid="classSet_1a54d34cd05633a20d09b2e42fee9bb31f" kindref="member">Set&lt;V&gt;::iterator</ref><sp/><ref refid="classSet_1aeb4a4b2026eb040a24e9b251e0c49dec" kindref="member">Set&lt;V&gt;::End</ref>()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>iterator<sp/>after<sp/>end<sp/>of<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.end();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="193" refid="classSet_1abfa04b4e41038f371b6b12d7553da6c6" refkind="member"><highlight class="normal"><ref refid="classSet_1ac9c538ffe3c823f5f28fd65910289b24" kindref="member">Set&lt;V&gt;::const_iterator</ref><sp/><ref refid="classSet_1aeb4a4b2026eb040a24e9b251e0c49dec" kindref="member">Set&lt;V&gt;::End</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="194"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>const<sp/>iterator<sp/>after<sp/>end<sp/>of<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.end();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operations<sp/>on<sp/>a<sp/>single<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="203" refid="classSet_1aec2bedbb313cfc25c7100c6984760dd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classSet_1aec2bedbb313cfc25c7100c6984760dd3" kindref="member">Set&lt;V&gt;::Size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>elements<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.size();</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="211" refid="classSet_1a25791eed3b7ef4be9af5059cf09767f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1a25791eed3b7ef4be9af5059cf09767f2" kindref="member">Set&lt;V&gt;::Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>s.insert(v);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="218" refid="classSet_1aba4fd7b02967ba79b7e51ea38e33639a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1a25791eed3b7ef4be9af5059cf09767f2" kindref="member">Set&lt;V&gt;::Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>mySet)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>another<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;V&gt;::iterator<sp/>i<sp/>=<sp/>s.begin();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::insert_iterator&lt;std::set&lt;V&gt;<sp/>&gt;<sp/>insertiter(s,<sp/>i);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>set_union(s.begin(),<sp/>s.end(),<sp/>mySet.s.begin(),<sp/>mySet.s.end(),<sp/>insertiter);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="229" refid="classSet_1a7c93429f1d8f232c421a6fde25cb982b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1a7c93429f1d8f232c421a6fde25cb982b" kindref="member">Set&lt;V&gt;::Remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>s.erase(v);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="236" refid="classSet_1a1feb21675fad80514ee3b41fb67f8c20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1a1feb21675fad80514ee3b41fb67f8c20" kindref="member">Set&lt;V&gt;::Replace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>Old,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>New)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>old<sp/>by<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>s.erase(Old);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>s.insert(New);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="244" refid="classSet_1af4c48c3aca006588ac6d572c7e1f984c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1af4c48c3aca006588ac6d572c7e1f984c" kindref="member">Set&lt;V&gt;::Clear</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>s.clear();</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="251" refid="classSet_1a685c7dec3d054d0d9972457f13873568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSet_1a685c7dec3d054d0d9972457f13873568" kindref="member">Set&lt;V&gt;::Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Is<sp/>v<sp/>in<sp/>set?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSet_1ac9c538ffe3c823f5f28fd65910289b24" kindref="member">const_iterator</ref><sp/>it<sp/>=<sp/>s.find(v);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>s.end())</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="264" refid="classSet_1ace9e8eb82ba76d99dcb8b016c3107e15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSet_1ace9e8eb82ba76d99dcb8b016c3107e15" kindref="member">Set&lt;V&gt;::Empty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Contains<sp/>no<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.empty();</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>&apos;clever&apos;<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="274" refid="classSet_1aef67658b41a94e9f8c788cee280ffd92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1aa5301a8039e0f02db70fc3179dcd8361" kindref="member">Set&lt;V&gt;::operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>s.insert(v);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="281" refid="classSet_1a2306e1e18b56c40b1ec81d41641e7e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSet_1af0015d618dfb0075fa0139cac663e53e" kindref="member">Set&lt;V&gt;::operator - </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>s.remove(v);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Relations<sp/>between<sp/>sets<sp/>(s1<sp/>==<sp/>*this)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="290" refid="classSet_1ac7bb2705235f0d44e4793262510e1dc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSet_1ac7bb2705235f0d44e4793262510e1dc6" kindref="member">Set&lt;V&gt;::Subset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>s2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>This<sp/>a<sp/>subset<sp/>of<sp/>s2?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>includes(s2.s.begin(),<sp/>s2.s.end(),<sp/>(*this).s.begin(),<sp/>(*this).s.end());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="299" refid="classSet_1abec7a201bd7d6632f4cf2a84e9ca2e0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSet_1abec7a201bd7d6632f4cf2a84e9ca2e0f" kindref="member">Set&lt;V&gt;::Superset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>s2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>this<sp/>a<sp/>superset<sp/>of<sp/>s2?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s2.<ref refid="classSet_1ac7bb2705235f0d44e4793262510e1dc6" kindref="member">Subset</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="307" refid="classSet_1ac66e1af1032a7cc83b80a3d6b8a8ef30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSet_1ac66e1af1032a7cc83b80a3d6b8a8ef30" kindref="member">Set&lt;V&gt;::Intersects</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSet" kindref="compound">Set&lt;V&gt;</ref>&amp;<sp/>s2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="308"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>s1<sp/>and<sp/>s2<sp/>have<sp/>common<sp/>elements?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Empty()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/>s2.<ref refid="classSet_1ace9e8eb82ba76d99dcb8b016c3107e15" kindref="member">Empty</ref>()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;V&gt;::const_iterator<sp/>iter;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>s.begin();<sp/>iter<sp/>!=<sp/>s.end();<sp/>iter++)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2.<ref refid="classSet_1a685c7dec3d054d0d9972457f13873568" kindref="member">Contains</ref>((*iter))<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Set.cc"/>
  </compounddef>
</doxygen>
