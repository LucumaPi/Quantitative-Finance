<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestOneFactorPayoff_8cc" kind="file" language="C++">
    <compoundname>TestOneFactorPayoff.cc</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="OneFactorPayoff_8hh" local="no">duffy/OneFactorPayoff.hh</includes>
    <incdepgraph>
      <node id="1">
        <label>tests/TestOneFactorPayoff.cc</label>
        <link refid="TestOneFactorPayoff_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>duffy/OneFactorPayoff.hh</label>
        <link refid="OneFactorPayoff_8hh"/>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CallPayoffFN</definition>
        <argsstring>(double K, double S)</argsstring>
        <name>CallPayoffFN</name>
        <param>
          <type>double</type>
          <declname>K</declname>
        </param>
        <param>
          <type>double</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestOneFactorPayoff.cc" line="16" column="8" bodyfile="tests/TestOneFactorPayoff.cc" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PutPayoffFN</definition>
        <argsstring>(double K, double S)</argsstring>
        <name>PutPayoffFN</name>
        <param>
          <type>double</type>
          <declname>K</declname>
        </param>
        <param>
          <type>double</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestOneFactorPayoff.cc" line="25" column="8" bodyfile="tests/TestOneFactorPayoff.cc" bodystart="25" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="TestOneFactorPayoff_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestOneFactorPayoff.cc" line="35" column="5" bodyfile="tests/TestOneFactorPayoff.cc" bodystart="35" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TestOneFactorPayoff.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Testing<sp/>the<sp/>one-factor<sp/>payoff<sp/>classes.<sp/>In<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>case<sp/>we<sp/>are<sp/>using<sp/>strategies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>1998<sp/>-<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="OneFactorPayoff_8hh" kindref="compound">duffy/OneFactorPayoff.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C<sp/>procedural<sp/>functions<sp/>that<sp/>play<sp/>role<sp/>of<sp/>payoffs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Advantage:<sp/>no<sp/>classes<sp/>needed!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e" kindref="member">CallPayoffFN</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S)<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S<sp/>&gt;<sp/><ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(S<sp/>-<sp/><ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d" kindref="member">PutPayoffFN</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S)<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>(K-S,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref><sp/>&gt;<sp/>S)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb" kindref="member">K</ref><sp/>-<sp/>S);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="TestOneFactorPayoff_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestOneFactorPayoff_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOneFactorPayoff" kindref="compound">OneFactorPayoff</ref><sp/>pay1(20.0,<sp/><ref refid="TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e" kindref="member">CallPayoffFN</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Give<sp/>a<sp/>stock<sp/>price<sp/>(plain<sp/>Call):<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>S;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>Payoff<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pay1.<ref refid="classOneFactorPayoff_1a5f74e477eb39f7d3cc01211e4c8944ac" kindref="member">payoff</ref>(S)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOneFactorPayoff" kindref="compound">OneFactorPayoff</ref><sp/>pay2(20.0,<sp/><ref refid="TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d" kindref="member">PutPayoffFN</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Give<sp/>a<sp/>stock<sp/>price<sp/>(plain<sp/>Put):<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>S;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Put<sp/>Payoff<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pay2.<ref refid="classOneFactorPayoff_1a5f74e477eb39f7d3cc01211e4c8944ac" kindref="member">payoff</ref>(S)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestOneFactorPayoff.cc"/>
  </compounddef>
</doxygen>
