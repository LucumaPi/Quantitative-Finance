<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="MatrixMechanisms_8hh" kind="file" language="C++">
    <compoundname>MatrixMechanisms.hh</compoundname>
    <includes refid="NumericMatrix_8hh" local="yes">NumericMatrix.hh</includes>
    <includes refid="ArrayMechanisms_8hh" local="yes">ArrayMechanisms.hh</includes>
    <includes refid="MatrixMechanisms_8cc" local="yes">../../src/MatrixMechanisms.cc</includes>
    <includedby refid="MatrixMechanisms_8cc" local="no">src/MatrixMechanisms.cc</includedby>
    <includedby refid="ExcelDriver_8cc" local="no">src/ExcelDriver.cc</includedby>
    <includedby refid="ExcelMechanisms_8cc" local="no">src/ExcelMechanisms.cc</includedby>
    <includedby refid="LatticeMechanisms_8cc" local="no">src/LatticeMechanisms.cc</includedby>
    <includedby refid="TestIBVP_8cc" local="no">tests/TestIBVP.cc</includedby>
    <includedby refid="TestRanges_8cc" local="no">tests/TestRanges.cc</includedby>
    <includedby refid="TestSTD_8cc" local="no">tests/TestSTD.cc</includedby>
    <incdepgraph>
      <node id="31">
        <label>list</label>
      </node>
      <node id="23">
        <label>Property.hh</label>
        <link refid="Property_8hh"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Set.hh</label>
        <link refid="Set_8hh"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>../../src/PropertyThing.cc</label>
        <link refid="PropertyThing_8cc"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Vector.hh</label>
        <link refid="Vector_8hh"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>SimplePropertySet.hh</label>
        <link refid="SimplePropertySet_8hh"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>../../src/Property.cc</label>
        <link refid="Property_8cc"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ArrayStructure.hh</label>
        <link refid="ArrayStructure_8hh"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Tensor.hh</label>
        <link refid="Tensor_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/duffy/MatrixMechanisms.hh</label>
        <link refid="MatrixMechanisms_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>Array.hh</label>
        <link refid="Array_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../../src/Set.cc</label>
        <link refid="Set_8cc"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>string</label>
      </node>
      <node id="16">
        <label>../../src/Matrix.cc</label>
        <link refid="Matrix_8cc"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="21">
        <label>ArrayMechanisms.hh</label>
        <link refid="ArrayMechanisms_8hh"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../../src/FullArray.cc</label>
        <link refid="FullArray_8cc"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Range.hh</label>
        <link refid="Range_8hh"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>../../src/SimplePropertySet.cc</label>
        <link refid="SimplePropertySet_8cc"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Matrix.hh</label>
        <link refid="Matrix_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../../src/MatrixStructure.cc</label>
        <link refid="MatrixStructure_8cc"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../../src/FullMatrix.cc</label>
        <link refid="FullMatrix_8cc"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>FullMatrix.hh</label>
        <link refid="FullMatrix_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>../../src/Tensor.cc</label>
        <link refid="Tensor_8cc"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../../src/ArrayStructure.cc</label>
        <link refid="ArrayStructure_8cc"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>PropertyThing.hh</label>
        <link refid="PropertyThing_8hh"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>NumericMatrix.hh</label>
        <link refid="NumericMatrix_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../../src/NumericMatrix.cc</label>
        <link refid="NumericMatrix_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="41">
        <label>../../src/MatrixMechanisms.cc</label>
        <link refid="MatrixMechanisms_8cc"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>../../src/ArrayMechanisms.cc</label>
        <link refid="ArrayMechanisms_8cc"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>cstddef</label>
      </node>
      <node id="19">
        <label>../../src/Vector.cc</label>
        <link refid="Vector_8cc"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../../src/Array.cc</label>
        <link refid="Array_8cc"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>../../src/Range.cc</label>
        <link refid="Range_8cc"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>FullArray.hh</label>
        <link refid="FullArray_8hh"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>set</label>
      </node>
      <node id="33">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>MatrixStructure.hh</label>
        <link refid="MatrixStructure_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/LatticeMechanisms.cc</label>
        <link refid="LatticeMechanisms_8cc"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/duffy/MatrixMechanisms.hh</label>
        <link refid="MatrixMechanisms_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/ExcelDriver.cc</label>
        <link refid="ExcelDriver_8cc"/>
      </node>
      <node id="9">
        <label>tests/TestNewLatticeBasic.cc</label>
        <link refid="TestNewLatticeBasic_8cc"/>
      </node>
      <node id="8">
        <label>tests/TestNewLattice.cc</label>
        <link refid="TestNewLattice_8cc"/>
      </node>
      <node id="4">
        <label>src/ExcelMechanisms.cc</label>
        <link refid="ExcelMechanisms_8cc"/>
      </node>
      <node id="12">
        <label>tests/TestSTD.cc</label>
        <link refid="TestSTD_8cc"/>
      </node>
      <node id="7">
        <label>tests/TestLatticeBasic.cc</label>
        <link refid="TestLatticeBasic_8cc"/>
      </node>
      <node id="6">
        <label>tests/director.cc</label>
        <link refid="director_8cc"/>
      </node>
      <node id="2">
        <label>src/MatrixMechanisms.cc</label>
        <link refid="MatrixMechanisms_8cc"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tests/TestRanges.cc</label>
        <link refid="TestRanges_8cc"/>
      </node>
      <node id="10">
        <label>tests/TestIBVP.cc</label>
        <link refid="TestIBVP_8cc"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="MatrixMechanisms_8hh_1ab00f24d33b315b3567881ca4f9ae13aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V sumAbsRow</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;m, const I &amp;i)</argsstring>
        <name>sumAbsRow</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="28" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="24" bodyend="36" declfile="include/duffy/MatrixMechanisms.hh" declline="28" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a4d1479b88b531287426c66badbcd18cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V sumAbsColumn</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;m, const I &amp;j)</argsstring>
        <name>sumAbsColumn</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const I &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="29" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="38" bodyend="51" declfile="include/duffy/MatrixMechanisms.hh" declline="29" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a44ab776341a8a095e655778574b5ce8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt;</type>
        <definition>Vector&lt;V,I&gt; sumAbsRow</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;m)</argsstring>
        <name>sumAbsRow</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="32" column="22" bodyfile="src/MatrixMechanisms.cc" bodystart="54" bodyend="67" declfile="include/duffy/MatrixMechanisms.hh" declline="32" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1afbf0607bc3db705b85a955c9cc6be698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt;</type>
        <definition>Vector&lt;V,I&gt; sumAbsColumn</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;m)</argsstring>
        <name>sumAbsColumn</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="33" column="22" bodyfile="src/MatrixMechanisms.cc" bodystart="70" bodyend="82" declfile="include/duffy/MatrixMechanisms.hh" declline="33" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1ae75fb91cf4b7afa603a41eb07f52a6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V llNorm</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;matrix)</argsstring>
        <name>llNorm</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="36" column="17" declfile="include/duffy/MatrixMechanisms.hh" declline="36" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1ad97ba861ea28d23de371ca12e82dbfbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V FrobeniusNorm</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;matrix)</argsstring>
        <name>FrobeniusNorm</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="37" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="106" bodyend="123" declfile="include/duffy/MatrixMechanisms.hh" declline="37" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a70cd51362f5af358d655ed9c0c7d0fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V lInfinityNorm</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;matrix)</argsstring>
        <name>lInfinityNorm</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="38" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="125" bodyend="148" declfile="include/duffy/MatrixMechanisms.hh" declline="38" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1ad19d9c702f4a2500fc5e496d7d9a4b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet</ref>&lt; std::string, double &gt;</type>
        <definition>SimplePropertySet&lt;std::string, double&gt; allNorms</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;x)</argsstring>
        <name>allNorms</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="40" column="33" bodyfile="src/MatrixMechanisms.cc" bodystart="150" bodyend="161" declfile="include/duffy/MatrixMechanisms.hh" declline="40" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1ab756c3f1b13fec78f42862639fb98f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void initMatrix</definition>
        <argsstring>(Matrix&lt; V, I &gt; &amp;m, const V &amp;v)</argsstring>
        <name>initMatrix</name>
        <param>
          <type><ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="46" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="174" bodyend="185" declfile="include/duffy/MatrixMechanisms.hh" declline="46" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a6f970bd30a1ac58d6f56b0737ecdb2f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt;</type>
        <definition>NumericMatrix&lt;V,I&gt; createMatrix</definition>
        <argsstring>(const Vector&lt; V, I &gt; &amp;lower, const Vector&lt; V, I &gt; &amp;diagonal, const Vector&lt; V, I &gt; &amp;upper)</argsstring>
        <name>createMatrix</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>diagonal</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="51" column="29" bodyfile="src/MatrixMechanisms.cc" bodystart="189" bodyend="225" declfile="include/duffy/MatrixMechanisms.hh" declline="51" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a6fa2271be30569c2b0ad6c2c850d794e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="55" column="15" bodyfile="src/MatrixMechanisms.cc" bodystart="255" bodyend="271" declfile="include/duffy/MatrixMechanisms.hh" declline="55" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1acd0d84ddee6f504fb2fb9d83281da2b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="56" column="15" bodyfile="src/MatrixMechanisms.cc" bodystart="273" bodyend="289" declfile="include/duffy/MatrixMechanisms.hh" declline="56" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a6539ab5ef7bffef5715b2e142298d70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="57" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="292" bodyend="299" declfile="include/duffy/MatrixMechanisms.hh" declline="57" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a8118170f2dfd63e4c8c666134b79396d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="58" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="302" bodyend="310" declfile="include/duffy/MatrixMechanisms.hh" declline="58" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a8937199c2ef00f8623db12cfc5a59aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="59" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="313" bodyend="329" declfile="include/duffy/MatrixMechanisms.hh" declline="59" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a7d7ac569cc9e63d0a2bf2559a8e9997d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;v1, const NumericMatrix&lt; V, I &gt; &amp;v2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="60" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="332" bodyend="339" declfile="include/duffy/MatrixMechanisms.hh" declline="60" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a0f7651a9e9206b9c8819729e5c571f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool positive</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;x)</argsstring>
        <name>positive</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="63" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="342" bodyend="360" declfile="include/duffy/MatrixMechanisms.hh" declline="63" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1aca20512a1e8b7a2f9ac0e6aa6cb7052a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool negative</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;x)</argsstring>
        <name>negative</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="64" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="363" bodyend="382" declfile="include/duffy/MatrixMechanisms.hh" declline="64" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a12ccb5c0bda61683615a95fcdd34c59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool diagonallyDominant</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;x)</argsstring>
        <name>diagonallyDominant</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="68" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="386" bodyend="398" declfile="include/duffy/MatrixMechanisms.hh" declline="68" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a772b0290fcb1ca2b13da74f2e2e75e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt;</type>
        <definition>NumericMatrix&lt;V,I&gt; eigenvalueBounds</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;x)</argsstring>
        <name>eigenvalueBounds</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="72" column="29" bodyfile="src/MatrixMechanisms.cc" bodystart="403" bodyend="417" declfile="include/duffy/MatrixMechanisms.hh" declline="72" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a5c3e43780b81dc05928fe7188e3f2ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V quadraticForm</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;A, const Vector&lt; V, I &gt; &amp;x)</argsstring>
        <name>quadraticForm</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="75" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="227" bodyend="243" declfile="include/duffy/MatrixMechanisms.hh" declline="75" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a066bb3002419c7b680967d9ca5d4d259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V RayleighQuotient</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;A, const Vector&lt; V, I &gt; &amp;x)</argsstring>
        <name>RayleighQuotient</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="76" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="245" bodyend="254" declfile="include/duffy/MatrixMechanisms.hh" declline="76" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1aa6aefb3af5d04fbb310d2b827b11bd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V dominantEigenvalue</definition>
        <argsstring>(const NumericMatrix&lt; V, I &gt; &amp;A, const Vector&lt; V, I &gt; &amp;startVec, const V &amp;tolerance)</argsstring>
        <name>dominantEigenvalue</name>
        <param>
          <type>const <ref refid="classNumericMatrix" kindref="compound">NumericMatrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; V, I &gt; &amp;</type>
          <declname>startVec</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="78" column="17" bodyfile="src/MatrixMechanisms.cc" bodystart="420" bodyend="442" declfile="include/duffy/MatrixMechanisms.hh" declline="78" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="MatrixMechanisms_8hh_1a5c3f3bcd8d5077944631817a944f9ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const Matrix&lt; V, I &gt; &amp;v)</argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="classMatrix" kindref="compound">Matrix</ref>&lt; V, I &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/MatrixMechanisms.hh" line="83" column="20" bodyfile="src/MatrixMechanisms.cc" bodystart="445" bodyend="462" declfile="include/duffy/MatrixMechanisms.hh" declline="83" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>matrixmechanisms.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mechanism<sp/>functions<sp/>for<sp/>matrices.<sp/>We<sp/>do<sp/>everthing<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>convenience<sp/>and<sp/>pressure<sp/>of<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functionality:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Norms<sp/>of<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Some<sp/>initialisation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Comparing<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Intrinsic<sp/>properties<sp/>of<sp/>matrices<sp/>(positive,<sp/>negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>eigenvalue<sp/>analysis<sp/>(Rayleigh<sp/>quotient,<sp/>Gerschgorin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Power<sp/>method<sp/>(find<sp/>dominant<sp/>eigenvalue<sp/>of<sp/>a<sp/>matrix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MatrixMechanisms_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MatrixMechanisms_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="NumericMatrix_8hh" kindref="compound">NumericMatrix.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayMechanisms_8hh" kindref="compound">ArrayMechanisms.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sum<sp/>of<sp/>absolute<sp/>values<sp/>of<sp/>row<sp/>and<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1ab00f24d33b315b3567881ca4f9ae13aa" kindref="member">sumAbsRow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I&amp;<sp/>i);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1a4d1479b88b531287426c66badbcd18cf" kindref="member">sumAbsColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I&amp;<sp/>j);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>Abs<sp/>sume<sp/>of<sp/>rows<sp/>and<sp/>columns<sp/>for<sp/>all<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref><sp/><ref refid="MatrixMechanisms_8hh_1ab00f24d33b315b3567881ca4f9ae13aa" kindref="member">sumAbsRow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref><sp/><ref refid="MatrixMechanisms_8hh_1a4d1479b88b531287426c66badbcd18cf" kindref="member">sumAbsColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Norms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1ae75fb91cf4b7afa603a41eb07f52a6bb" kindref="member">llNorm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>matrix);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1ad97ba861ea28d23de371ca12e82dbfbd" kindref="member">FrobeniusNorm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>matrix);<sp/></highlight><highlight class="comment">//<sp/>Euclidean<sp/>norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1a70cd51362f5af358d655ed9c0c7d0fea" kindref="member">lInfinityNorm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>matrix);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/><ref refid="classSimplePropertySet" kindref="compound">SimplePropertySet&lt;std::string, double&gt;</ref><sp/><ref refid="MatrixMechanisms_8hh_1ad19d9c702f4a2500fc5e496d7d9a4b32" kindref="member">allNorms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>diagonal<sp/>elements<sp/>get<sp/>the<sp/>value<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;class<sp/>V,<sp/>class<sp/>I&gt;<sp/>setDiagonal(Matrix&lt;V,I&gt;&amp;<sp/>m,<sp/>const<sp/>V&amp;<sp/>v);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>elements<sp/>get<sp/>the<sp/>value<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1ab756c3f1b13fec78f42862639fb98f7c" kindref="member">initMatrix</ref>(<ref refid="classMatrix" kindref="compound">Matrix&lt;V,I&gt;</ref>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>v);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>matrix<sp/>based<sp/>on<sp/>the<sp/>diagonal<sp/>elements<sp/>of<sp/>a<sp/>tridiagonal<sp/>matrix;<sp/>bit<sp/>wasteful<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space<sp/>but<sp/>who<sp/>cares!<sp/>I&apos;ve<sp/>got<sp/>a<sp/>Pentium<sp/>with<sp/>a<sp/>giga<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref><sp/><ref refid="MatrixMechanisms_8hh_1a6f970bd30a1ac58d6f56b0737ecdb2f4" kindref="member">createMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>lower,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>diagonal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>upper);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comparison<sp/>operatins<sp/>with<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a6fa2271be30569c2b0ad6c2c850d794e" kindref="member">operator &lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1acd0d84ddee6f504fb2fb9d83281da2b6" kindref="member">operator &lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a6539ab5ef7bffef5715b2e142298d70c" kindref="member">operator &gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a8118170f2dfd63e4c8c666134b79396d" kindref="member">operator &gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a8937199c2ef00f8623db12cfc5a59aae" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a7d7ac569cc9e63d0a2bf2559a8e9997d" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Are<sp/>all<sp/>elements<sp/>of<sp/>a<sp/>matrix<sp/>positive?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a0f7651a9e9206b9c8819729e5c571f90" kindref="member">positive</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1aca20512a1e8b7a2f9ac0e6aa6cb7052a" kindref="member">negative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>functions<sp/>for<sp/>Numerical<sp/>Linear<sp/>Algebra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a12ccb5c0bda61683615a95fcdd34c59d" kindref="member">diagonallyDominant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gerschgorin&apos;s<sp/>circle<sp/>theorem:<sp/>n<sp/>eigenvalues<sp/>of<sp/>a<sp/>matrix<sp/>in<sp/>a<sp/>nX2<sp/>matrix<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lower<sp/>and<sp/>upper<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref><sp/><ref refid="MatrixMechanisms_8hh_1a772b0290fcb1ca2b13da74f2e2e75e86" kindref="member">eigenvalueBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Other<sp/>results<sp/>for<sp/>vectors<sp/>and<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1a5c3e43780b81dc05928fe7188e3f2ea9" kindref="member">quadraticForm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1a066bb3002419c7b680967d9ca5d4d259" kindref="member">RayleighQuotient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>largest<sp/>eigenvalue<sp/>by<sp/>Power<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/>V<sp/><ref refid="MatrixMechanisms_8hh_1aa6aefb3af5d04fbb310d2b827b11bd13" kindref="member">dominantEigenvalue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNumericMatrix" kindref="compound">NumericMatrix&lt;V,I&gt;</ref>&amp;<sp/>A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector" kindref="compound">Vector&lt;V,I&gt;</ref>&amp;<sp/>startVec,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>tolerance);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="MatrixMechanisms_8hh_1a5c3f3bcd8d5077944631817a944f9ff9" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMatrix" kindref="compound">Matrix&lt;V,I&gt;</ref>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../src/MatrixMechanisms.cc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/duffy/MatrixMechanisms.hh"/>
  </compounddef>
</doxygen>
