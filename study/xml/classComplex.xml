<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classComplex" kind="class" language="C++" prot="public">
    <compoundname>Complex</compoundname>
    <includes refid="Complex_8hh" local="no">Complex.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classComplex_1ad16d07e6bbe55138d86d9afe961d5157" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Complex::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="23" column="8" bodyfile="include/duffy/Complex.hh" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classComplex_1a36315c63ae1b0d418a3e21f49089c2b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Complex::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="23" column="10" bodyfile="include/duffy/Complex.hh" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classComplex_1a72441d40ccdf70c6c1da4a4afc2263e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex mpi</definition>
        <argsstring>(const Complex &amp;z)</argsstring>
        <name>mpi</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="25" column="16" bodyfile="src/Complex.cc" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a5785a70cbc18f01a89cdf4235832d1ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double real</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>real</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="37" column="15" bodyfile="src/Complex.cc" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1aea92c8c79175ecec909cb59c935a0c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double imag</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>imag</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="38" column="15" bodyfile="src/Complex.cc" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ae75939524940d4f2451ee0a5eb066848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double rad</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>rad</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="39" column="15" bodyfile="src/Complex.cc" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a3c3f09cbb99680921cde12c2029c8e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double modulus</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>modulus</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="40" column="15" bodyfile="src/Complex.cc" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a45a3ff78ebe036a61d1382aea13de62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double abs</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>abs</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="41" column="15" bodyfile="src/Complex.cc" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1abe3f055c0daea1aaeea0e669554422a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator*</definition>
        <argsstring>(const Complex &amp;c, double d)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="61" column="16" bodyfile="src/Complex.cc" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a8f7c64a77e1e179f5362bbd9cf5315f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator*</definition>
        <argsstring>(double d, const Complex &amp;c)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="62" column="16" bodyfile="src/Complex.cc" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a930dab6ca7411b426ec2d30b27b7ea90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator+</definition>
        <argsstring>(const Complex &amp;c, double d)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="63" column="16" bodyfile="src/Complex.cc" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a9e192c9a21e15575f5d9cbf8cb93c59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator+</definition>
        <argsstring>(double d, const Complex &amp;c)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="64" column="16" bodyfile="src/Complex.cc" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a5e9ee99637c205e3d2651412955f8e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator-</definition>
        <argsstring>(const Complex &amp;c, double d)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="65" column="16" bodyfile="src/Complex.cc" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ac04e31ec5cbb8643690dd6c01bab7e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex operator-</definition>
        <argsstring>(double d, const Complex &amp;c)</argsstring>
        <name>operator-</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="66" column="16" bodyfile="src/Complex.cc" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a89607cd585b76e5df1a2dfb5aeaab7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex conjugate</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>conjugate</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="69" column="16" bodyfile="src/Complex.cc" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1adcadb4f1391196364cff4247618592c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex inverse</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="70" column="16" bodyfile="src/Complex.cc" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1aeb56775d93a065d4bd643a5ed679db8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex exp</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>exp</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="73" column="16" bodyfile="src/Complex.cc" bodystart="244" bodyend="249"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a562ef37b4e1ea96df17c9a35c9a9bf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex cos</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>cos</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="74" column="16" bodyfile="src/Complex.cc" bodystart="251" bodyend="259"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a204816bef499dd43e510a6d2c241909d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex sin</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>sin</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="75" column="16" bodyfile="src/Complex.cc" bodystart="261" bodyend="269"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a6d9402795ee5cd1b5268114c4e01f353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex cosh</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>cosh</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="76" column="16" bodyfile="src/Complex.cc" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ac4b491504bb830b18cfdedabffe7c86c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex sinh</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>sinh</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="77" column="16" bodyfile="src/Complex.cc" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ab21a9cb2d20f83b6588a0333928921a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex tanh</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>tanh</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="78" column="16" bodyfile="src/Complex.cc" bodystart="281" bodyend="285"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a01666c40dd7975b9d272fa81b555fe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex sech</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>sech</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="79" column="16" bodyfile="src/Complex.cc" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ae80e22d693a775cfb87ab6edf87a1f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex csch</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>csch</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="80" column="16" bodyfile="src/Complex.cc" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1a8fec67019e95f409a292f3fe48401196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex coth</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>coth</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="81" column="16" bodyfile="src/Complex.cc" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1aa853f765f528a0e309077c0739f55f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex tan</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>tan</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="82" column="16" bodyfile="src/Complex.cc" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1ae6ce3475f7257fa987d0bd4baf821be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex cgt</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>cgt</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="83" column="16" bodyfile="src/Complex.cc" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="friend" id="classComplex_1add2323a504cf184eb6348f88892a87c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Complex &amp;cmp)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="85" column="8" bodyfile="src/Complex.cc" bodystart="312" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classComplex_1a43b9f07cdf697c71b5fd506a6cc80b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Complex::Complex</definition>
        <argsstring>()</argsstring>
        <name>Complex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="28" column="1" bodyfile="src/Complex.cc" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a752e59125951ab5d5f81cfbc7091fe05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Complex::Complex</definition>
        <argsstring>(double real)</argsstring>
        <name>Complex</name>
        <param>
          <type>double</type>
          <declname>real</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="29" column="1" bodyfile="src/Complex.cc" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1af8df9575d21c2b72b5b958895a9daa00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Complex::Complex</definition>
        <argsstring>(double real, double imag)</argsstring>
        <name>Complex</name>
        <param>
          <type>double</type>
          <declname>real</declname>
        </param>
        <param>
          <type>double</type>
          <declname>imag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="30" column="1" bodyfile="src/Complex.cc" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1af3655296a09cb1dcddf38cd474c029e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Complex::Complex</definition>
        <argsstring>(const Complex &amp;p)</argsstring>
        <name>Complex</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="31" column="1" bodyfile="src/Complex.cc" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a70e14b17c92e3da779686b98f9f3bb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Complex::~Complex</definition>
        <argsstring>()</argsstring>
        <name>~Complex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="32" column="9" bodyfile="src/Complex.cc" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a31ccc3f500a725e38df3a29140a4d181" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Complex::xVal</definition>
        <argsstring>() const</argsstring>
        <name>xVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="35" column="8" bodyfile="src/Complex.cc" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a4a6047044867525c7f08f9a1b20dd2af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Complex::yVal</definition>
        <argsstring>() const</argsstring>
        <name>yVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="36" column="8" bodyfile="src/Complex.cc" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a3651b29a89a31f2384343e737af01786" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="44" column="10" bodyfile="src/Complex.cc" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1ad63f572bf5b643c714e388cda5c6f5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
        <definition>Complex &amp; Complex::operator=</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="45" column="9" bodyfile="src/Complex.cc" bodystart="63" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1ae567e20c39745c1bfe8f07be126a5fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
        <definition>Complex &amp; Complex::operator+=</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="46" column="9" bodyfile="src/Complex.cc" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a2f5beb61c61de440c20e69decc584952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
        <definition>Complex &amp; Complex::operator*=</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="47" column="9" bodyfile="src/Complex.cc" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a11b5aad9f09d44118ccb195742a684c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
        <definition>Complex &amp; Complex::operator-=</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="48" column="9" bodyfile="src/Complex.cc" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a318c1193b3ba9f3e9e06d88f9c1ef2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
        <definition>Complex &amp; Complex::operator/=</definition>
        <argsstring>(const Complex &amp;c)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="49" column="9" bodyfile="src/Complex.cc" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1aa2cbbe9e937f49672084741932c6314c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::add</definition>
        <argsstring>(const Complex &amp;c2) const</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="50" column="10" bodyfile="src/Complex.cc" bodystart="157" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1ab35f363450892fb54ebeb0a5a5d96ff8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator+</definition>
        <argsstring>(const Complex &amp;c2) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="51" column="10" bodyfile="src/Complex.cc" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a8c357281df321c057f561bddd02b6640" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator-</definition>
        <argsstring>(const Complex &amp;c2) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="52" column="10" bodyfile="src/Complex.cc" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1ac2694e88535753d9a588db307788473c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator*</definition>
        <argsstring>(const Complex &amp;c2) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="53" column="10" bodyfile="src/Complex.cc" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a8bf00004de0d490060261f13168ead9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator/</definition>
        <argsstring>(const Complex &amp;c2) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="54" column="10" bodyfile="src/Complex.cc" bodystart="181" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1a385a011ee33ab37519844e3f6ed1d471" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classComplex" kindref="compound">Complex</ref></type>
        <definition>Complex Complex::operator/</definition>
        <argsstring>(double d) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="55" column="10" bodyfile="src/Complex.cc" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classComplex_1af0435a6b94ce1cfd0680ae9ccff24561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Complex::distance</definition>
        <argsstring>(const Complex &amp;c2)</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="classComplex" kindref="compound">Complex</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/duffy/Complex.hh" line="58" column="8" bodyfile="src/Complex.cc" bodystart="146" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Complex</label>
        <link refid="classComplex"/>
      </node>
    </collaborationgraph>
    <location file="include/duffy/Complex.hh" line="20" column="1" bodyfile="include/duffy/Complex.hh" bodystart="19" bodyend="86"/>
    <listofallmembers>
      <member refid="classComplex_1a45a3ff78ebe036a61d1382aea13de62a" prot="public" virt="non-virtual"><scope>Complex</scope><name>abs</name></member>
      <member refid="classComplex_1aa2cbbe9e937f49672084741932c6314c" prot="public" virt="non-virtual"><scope>Complex</scope><name>add</name></member>
      <member refid="classComplex_1ae6ce3475f7257fa987d0bd4baf821be9" prot="public" virt="non-virtual"><scope>Complex</scope><name>cgt</name></member>
      <member refid="classComplex_1a43b9f07cdf697c71b5fd506a6cc80b8f" prot="public" virt="non-virtual"><scope>Complex</scope><name>Complex</name></member>
      <member refid="classComplex_1a752e59125951ab5d5f81cfbc7091fe05" prot="public" virt="non-virtual"><scope>Complex</scope><name>Complex</name></member>
      <member refid="classComplex_1af8df9575d21c2b72b5b958895a9daa00" prot="public" virt="non-virtual"><scope>Complex</scope><name>Complex</name></member>
      <member refid="classComplex_1af3655296a09cb1dcddf38cd474c029e1" prot="public" virt="non-virtual"><scope>Complex</scope><name>Complex</name></member>
      <member refid="classComplex_1a89607cd585b76e5df1a2dfb5aeaab7a8" prot="public" virt="non-virtual"><scope>Complex</scope><name>conjugate</name></member>
      <member refid="classComplex_1a562ef37b4e1ea96df17c9a35c9a9bf3f" prot="public" virt="non-virtual"><scope>Complex</scope><name>cos</name></member>
      <member refid="classComplex_1a6d9402795ee5cd1b5268114c4e01f353" prot="public" virt="non-virtual"><scope>Complex</scope><name>cosh</name></member>
      <member refid="classComplex_1a8fec67019e95f409a292f3fe48401196" prot="public" virt="non-virtual"><scope>Complex</scope><name>coth</name></member>
      <member refid="classComplex_1ae80e22d693a775cfb87ab6edf87a1f6b" prot="public" virt="non-virtual"><scope>Complex</scope><name>csch</name></member>
      <member refid="classComplex_1af0435a6b94ce1cfd0680ae9ccff24561" prot="public" virt="non-virtual"><scope>Complex</scope><name>distance</name></member>
      <member refid="classComplex_1aeb56775d93a065d4bd643a5ed679db8c" prot="public" virt="non-virtual"><scope>Complex</scope><name>exp</name></member>
      <member refid="classComplex_1aea92c8c79175ecec909cb59c935a0c92" prot="public" virt="non-virtual"><scope>Complex</scope><name>imag</name></member>
      <member refid="classComplex_1adcadb4f1391196364cff4247618592c4" prot="public" virt="non-virtual"><scope>Complex</scope><name>inverse</name></member>
      <member refid="classComplex_1a3c3f09cbb99680921cde12c2029c8e6c" prot="public" virt="non-virtual"><scope>Complex</scope><name>modulus</name></member>
      <member refid="classComplex_1a72441d40ccdf70c6c1da4a4afc2263e1" prot="private" virt="non-virtual"><scope>Complex</scope><name>mpi</name></member>
      <member refid="classComplex_1ac2694e88535753d9a588db307788473c" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator*</name></member>
      <member refid="classComplex_1abe3f055c0daea1aaeea0e669554422a7" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator*</name></member>
      <member refid="classComplex_1a8f7c64a77e1e179f5362bbd9cf5315f6" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator*</name></member>
      <member refid="classComplex_1a2f5beb61c61de440c20e69decc584952" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator*=</name></member>
      <member refid="classComplex_1ab35f363450892fb54ebeb0a5a5d96ff8" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator+</name></member>
      <member refid="classComplex_1a930dab6ca7411b426ec2d30b27b7ea90" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator+</name></member>
      <member refid="classComplex_1a9e192c9a21e15575f5d9cbf8cb93c59c" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator+</name></member>
      <member refid="classComplex_1ae567e20c39745c1bfe8f07be126a5fff" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator+=</name></member>
      <member refid="classComplex_1a3651b29a89a31f2384343e737af01786" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator-</name></member>
      <member refid="classComplex_1a8c357281df321c057f561bddd02b6640" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator-</name></member>
      <member refid="classComplex_1a5e9ee99637c205e3d2651412955f8e21" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator-</name></member>
      <member refid="classComplex_1ac04e31ec5cbb8643690dd6c01bab7e0b" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator-</name></member>
      <member refid="classComplex_1a11b5aad9f09d44118ccb195742a684c5" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator-=</name></member>
      <member refid="classComplex_1a8bf00004de0d490060261f13168ead9f" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator/</name></member>
      <member refid="classComplex_1a385a011ee33ab37519844e3f6ed1d471" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator/</name></member>
      <member refid="classComplex_1a318c1193b3ba9f3e9e06d88f9c1ef2a3" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator/=</name></member>
      <member refid="classComplex_1add2323a504cf184eb6348f88892a87c5" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator&lt;&lt;</name></member>
      <member refid="classComplex_1ad63f572bf5b643c714e388cda5c6f5cb" prot="public" virt="non-virtual"><scope>Complex</scope><name>operator=</name></member>
      <member refid="classComplex_1ae75939524940d4f2451ee0a5eb066848" prot="public" virt="non-virtual"><scope>Complex</scope><name>rad</name></member>
      <member refid="classComplex_1a5785a70cbc18f01a89cdf4235832d1ba" prot="public" virt="non-virtual"><scope>Complex</scope><name>real</name></member>
      <member refid="classComplex_1a01666c40dd7975b9d272fa81b555fe96" prot="public" virt="non-virtual"><scope>Complex</scope><name>sech</name></member>
      <member refid="classComplex_1a204816bef499dd43e510a6d2c241909d" prot="public" virt="non-virtual"><scope>Complex</scope><name>sin</name></member>
      <member refid="classComplex_1ac4b491504bb830b18cfdedabffe7c86c" prot="public" virt="non-virtual"><scope>Complex</scope><name>sinh</name></member>
      <member refid="classComplex_1aa853f765f528a0e309077c0739f55f97" prot="public" virt="non-virtual"><scope>Complex</scope><name>tan</name></member>
      <member refid="classComplex_1ab21a9cb2d20f83b6588a0333928921a6" prot="public" virt="non-virtual"><scope>Complex</scope><name>tanh</name></member>
      <member refid="classComplex_1ad16d07e6bbe55138d86d9afe961d5157" prot="private" virt="non-virtual"><scope>Complex</scope><name>x</name></member>
      <member refid="classComplex_1a31ccc3f500a725e38df3a29140a4d181" prot="public" virt="non-virtual"><scope>Complex</scope><name>xVal</name></member>
      <member refid="classComplex_1a36315c63ae1b0d418a3e21f49089c2b5" prot="private" virt="non-virtual"><scope>Complex</scope><name>y</name></member>
      <member refid="classComplex_1a4a6047044867525c7f08f9a1b20dd2af" prot="public" virt="non-virtual"><scope>Complex</scope><name>yVal</name></member>
      <member refid="classComplex_1a70e14b17c92e3da779686b98f9f3bb2d" prot="public" virt="virtual"><scope>Complex</scope><name>~Complex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
