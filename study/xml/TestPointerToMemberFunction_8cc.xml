<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestPointerToMemberFunction_8cc" kind="file" language="C++">
    <compoundname>TestPointerToMemberFunction.cc</compoundname>
    <includes refid="PayoffNew_8cc" local="yes">../src/PayoffNew.cc</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>tests/TestPointerToMemberFunction.cc</label>
        <link refid="TestPointerToMemberFunction_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../src/PayoffNew.cc</label>
        <link refid="PayoffNew_8cc"/>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classOption" prot="public">Option</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" prot="public" static="no">
        <type>double(Payoff::*</type>
        <definition>typedef double(Payoff::*  PMember) (double value)</definition>
        <argsstring>)(double value)</argsstring>
        <name>PMember</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestPointerToMemberFunction.cc" line="11" column="9" bodyfile="tests/TestPointerToMemberFunction.cc" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestPointerToMemberFunction_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestPointerToMemberFunction.cc" line="49" column="5" bodyfile="tests/TestPointerToMemberFunction.cc" bodystart="49" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>testPointerToMemberFunction.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Testing<sp/>pointers<sp/>to<sp/>member<sp/>functions.<sp/>This<sp/>is<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>Stroustrup<sp/>3rd<sp/>edition<sp/>page<sp/>418</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../src/PayoffNew.cc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>double<sp/>(<ref refid="classPayoff" kindref="compound">Payoff</ref>::*<sp/><ref refid="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" kindref="member">PMember</ref>)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classOption" kindref="compound">Option</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classOption_1ad8226d961c2a9531f956d70e0de78136" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPayoff" kindref="compound">Payoff</ref><sp/><ref refid="classOption_1ad8226d961c2a9531f956d70e0de78136" kindref="member">pay</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>typedef<sp/>double<sp/>(Payoff::*<sp/>PMember)(double<sp/>value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classOption_1aad4544d348ddee46df4181af45ff483c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" kindref="member">PMember</ref><sp/><ref refid="classOption_1aad4544d348ddee46df4181af45ff483c" kindref="member">pm</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classOption_1ae583dd6d430a3b428014efa942605d54" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classOption_1af517613005312013c576eb9099a50464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOption_1af517613005312013c576eb9099a50464" kindref="member">Option</ref><sp/>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1ae583dd6d430a3b428014efa942605d54" kindref="member">T</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>define<sp/>these<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1ad8226d961c2a9531f956d70e0de78136" kindref="member">pay</ref><sp/>=<sp/><ref refid="classPayoff" kindref="compound">Payoff</ref>(<ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classOption_1a3199e9da7fac8b01639d8f980e80d5b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOption_1a3199e9da7fac8b01639d8f980e80d5b2" kindref="member">Option</ref><sp/>(<ref refid="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" kindref="member">PMember</ref><sp/>func)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1ae583dd6d430a3b428014efa942605d54" kindref="member">T</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1ad8226d961c2a9531f956d70e0de78136" kindref="member">pay</ref><sp/>=<sp/><ref refid="classPayoff" kindref="compound">Payoff</ref>(<ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOption_1aad4544d348ddee46df4181af45ff483c" kindref="member">pm</ref><sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classOption_1aaba569ca040bc712054be0af0fad964f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classOption_1aaba569ca040bc712054be0af0fad964f" kindref="member">payoff</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classOption_1ad8226d961c2a9531f956d70e0de78136" kindref="member">pay</ref>.*<ref refid="classOption_1aad4544d348ddee46df4181af45ff483c" kindref="member">pm</ref>)(S);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="TestPointerToMemberFunction_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestPointerToMemberFunction_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOption" kindref="compound">Option</ref><sp/>myOption;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPayoff" kindref="compound">Payoff</ref><sp/>myPayoff(myOption.<ref refid="classOption_1a40db81993d02b319a38e62b42a730d6a" kindref="member">K</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestPointerToMemberFunction_8cc_1aa1af2de2b5c8c70946008001993327ac" kindref="member">PMember</ref><sp/><ref refid="TestComplexArray_8cc_1a96d33e68896cca70b2aaff9893026216" kindref="member">myFunc</ref><sp/>=<sp/><ref refid="classPayoff_1a81ee255183b0babc5e6d9663196a83de" kindref="member">Payoff::Call</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>myOption.<ref refid="classOption_1ad8226d961c2a9531f956d70e0de78136" kindref="member">pay</ref><sp/>=<sp/>myPayoff;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>myOption.<ref refid="classOption_1aad4544d348ddee46df4181af45ff483c" kindref="member">pm</ref><sp/>=<sp/><ref refid="TestComplexArray_8cc_1a96d33e68896cca70b2aaff9893026216" kindref="member">myFunc</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>myOption.<ref refid="classOption_1a860218238db3dd970925771ebd27d53d" kindref="member">payoff</ref>(23);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestComplexArray_8cc_1a96d33e68896cca70b2aaff9893026216" kindref="member">myFunc</ref><sp/>=<sp/><ref refid="classPayoff_1a5d0222f2d42995f5ab01820272761e21" kindref="member">Payoff::Put</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>myOption.<ref refid="classOption_1aad4544d348ddee46df4181af45ff483c" kindref="member">pm</ref><sp/>=<sp/><ref refid="TestComplexArray_8cc_1a96d33e68896cca70b2aaff9893026216" kindref="member">myFunc</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>myOption.<ref refid="classOption_1a860218238db3dd970925771ebd27d53d" kindref="member">payoff</ref>(23);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Put<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestPointerToMemberFunction.cc"/>
  </compounddef>
</doxygen>
