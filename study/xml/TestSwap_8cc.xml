<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="TestSwap_8cc" kind="file" language="C++">
    <compoundname>TestSwap.cc</compoundname>
    <includes refid="Range_8hh" local="no">duffy/Range.hh</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>tests/TestSwap.cc</label>
        <link refid="TestSwap_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Vector.hh</label>
        <link refid="Vector_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ArrayStructure.hh</label>
        <link refid="ArrayStructure_8hh"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Array.hh</label>
        <link refid="Array_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../../src/FullArray.cc</label>
        <link refid="FullArray_8cc"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>duffy/Range.hh</label>
        <link refid="Range_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../../src/ArrayStructure.cc</label>
        <link refid="ArrayStructure_8cc"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="12">
        <label>../../src/Vector.cc</label>
        <link refid="Vector_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../../src/Array.cc</label>
        <link refid="Array_8cc"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../../src/Range.cc</label>
        <link refid="Range_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>FullArray.hh</label>
        <link refid="FullArray_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestSwap_8cc_1a8b0ac6442ecc94172e4b2c11a2ebee2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Numeric</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const Range&lt; Numeric &gt; &amp;range)</argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="classRange" kindref="compound">Range</ref>&lt; Numeric &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestSwap.cc" line="13" column="6" bodyfile="tests/TestSwap.cc" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="TestSwap_8cc_1a25424f68584552ee5e1a153c80f95201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void mySwap</definition>
        <argsstring>(V &amp;v1, V &amp;v2)</argsstring>
        <name>mySwap</name>
        <param>
          <type>V &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>V &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestSwap.cc" line="18" column="18" bodyfile="tests/TestSwap.cc" bodystart="18" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="TestSwap_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/TestSwap.cc" line="27" column="5" bodyfile="tests/TestSwap.cc" bodystart="27" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TestSwap.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>generic<sp/>(non-member)<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Datasim<sp/>Education<sp/>BV<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Range_8hh" kindref="compound">duffy/Range.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Numeric&gt;</highlight></codeline>
<codeline lineno="13" refid="TestSwap_8cc_1a8b0ac6442ecc94172e4b2c11a2ebee2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TestSwap_8cc_1a8b0ac6442ecc94172e4b2c11a2ebee2c" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRange" kindref="compound">Range&lt;Numeric&gt;</ref>&amp;<sp/>range)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>range.<ref refid="classRange_1a885e2f67531baf6df9359f95c3f8ebaa" kindref="member">low</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>range.<ref refid="classRange_1aa0f159ae114a4053113ba035b1fc7b21" kindref="member">high</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="TestSwap_8cc_1a25424f68584552ee5e1a153c80f95201" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TestSwap_8cc_1a25424f68584552ee5e1a153c80f95201" kindref="member">mySwap</ref>(V&amp;<sp/>v1,<sp/>V&amp;<sp/>v2)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>V<sp/>tmp<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="TestSwap_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestSwap_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestSwap_8cc_1a25424f68584552ee5e1a153c80f95201" kindref="member">mySwap</ref>(j,<sp/>k);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRange" kindref="compound">Range&lt;int&gt;</ref><sp/>range1<sp/>(0,<sp/>10);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRange" kindref="compound">Range&lt;int&gt;</ref><sp/>range2<sp/>(20,<sp/>30);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestSwap_8cc_1a25424f68584552ee5e1a153c80f95201" kindref="member">mySwap</ref><sp/>(range1,<sp/>range2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestSwap_8cc_1a8b0ac6442ecc94172e4b2c11a2ebee2c" kindref="member">print</ref><sp/>(range1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TestSwap_8cc_1a8b0ac6442ecc94172e4b2c11a2ebee2c" kindref="member">print</ref><sp/>(range2);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/TestSwap.cc"/>
  </compounddef>
</doxygen>
