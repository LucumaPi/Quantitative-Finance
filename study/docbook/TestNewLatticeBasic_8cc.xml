<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_TestNewLatticeBasic_8cc">
<title>tests/TestNewLatticeBasic.cc File Reference</title>
<indexterm><primary>tests/TestNewLatticeBasic.cc</primary></indexterm>
<programlisting>#include &quot;../src/LatticeMechanisms.cc&quot;
</programlisting>Include dependency graph for TestNewLatticeBasic.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="TestNewLatticeBasic_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_TestNewLatticeBasic_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_TestNewLatticeBasic_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>TestNewLatticeBasic.cc</secondary></indexterm>
<indexterm><primary>TestNewLatticeBasic.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 14 of file TestNewLatticeBasic.cc.</para>
<programlisting>15 {
16 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;&#32;int&#32;Continue;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Break&#32;point</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;&#32;const&#32;int&#32;typeB&#32;=&#32;2;&#32;&#32;&#32;&#32;//&#32;BinomialLatticeType;</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;&#32;const&#32;int&#32;typeT&#32;=&#32;3;&#32;&#32;&#32;&#32;//&#32;Trinomial&#32;Type</emphasis>
21 <emphasis role="comment"></emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&#32;int&#32;depth&#32;=&#32;5;</emphasis>
23 <emphasis role="comment"></emphasis>
24 <emphasis role="comment">&#32;&#32;&#32;&#32;Lattice&lt;double,&#32;int,&#32;typeB&gt;&#32;lattice1(depth);</emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;&#32;Lattice&lt;double,&#32;int,&#32;typeT&gt;&#32;lattice2(depth);</emphasis>
26 <emphasis role="comment"></emphasis>
27 <emphasis role="comment">&#32;&#32;&#32;&#32;print(lattice1);&#32;</emphasis>
28 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;</emphasis>
29 <emphasis role="comment">&#32;&#32;&#32;&#32;print(lattice2);</emphasis>
30 <emphasis role="comment"></emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;&#32;</emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;</emphasis>
33 <emphasis role="comment"></emphasis>
34 <emphasis role="comment">&#32;&#32;&#32;&#32;depth&#32;=&#32;200;</emphasis>
35 <emphasis role="comment"></emphasis>
36 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Consistent&#32;trinomial&#32;tree&#32;for&#32;short&#32;rate\n&quot;;</emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;How&#32;many&#32;time&#32;divisions:&#32;&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;depth;</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(depth&#32;&lt;=&#32;0)&#32;return&#32;0;</emphasis>
40 <emphasis role="comment"></emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;&#32;int&#32;pr&#32;=&#32;0;</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Wanna&#32;print&#32;tree&#32;on&#32;screen&#32;(Costs&#32;time)&#32;1&#32;Yes,&#32;0&#32;No&#32;&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
43 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;pr;</emphasis>
44 <emphasis role="comment">*/</emphasis>
45 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Trinomial&#32;lattice&#32;with&#32;matrix&#32;entries</emphasis>
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Nrows&#32;=&#32;3;
47 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Ncols&#32;=&#32;2;
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;startIndex&#32;=&#32;1;
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;=&#32;3;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;time&#32;steps</emphasis>
50 &#32;&#32;&#32;&#32;<link linkend="_classMatrix">Matrix&lt;double, int&gt;</link>&#32;nodeStructure(Nrows,&#32;Ncols,&#32;startIndex,&#32;startIndex);
51 &#32;&#32;&#32;&#32;<link linkend="_classLattice">Lattice&lt;Matrix&lt;double, int&gt;</link>,&#32;int,&#32;3&gt;&#32;trinomialLattice(<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>,&#32;nodeStructure);
52 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Number&#32;of&#32;discrete&#32;points&#32;at&#32;end:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;trinomialLattice.BasePyramidSize()&#32;&lt;&lt;&#32;std::endl;
53 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;number&#32;of&#32;nodes:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;trinomialLattice.numberNodes()&#32;&lt;&lt;&#32;std::endl;
54 &#32;&#32;&#32;&#32;
55 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
56 }
</programlisting></section>
</section>
</section>
