<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Vector_8hh">
<title>include/duffy/Vector.hh File Reference</title>
<indexterm><primary>include/duffy/Vector.hh</primary></indexterm>
<programlisting>#include &quot;Array.hh&quot;
#include &quot;../../src/Vector.cc&quot;
</programlisting>Include dependency graph for Vector.hh:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="Vector_8hh__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="Vector_8hh__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classVector">Vector&lt; V, I, S &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1a6553f392c54a87ee890ecddd59a26675">scale</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1a5f15071d730549f04efa382b61747ff9">scale</link> (const V &amp;a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1af8ed022403e1f5df6daa9094218a4c0d">add</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1a3cbb0860a42a282a26aa253ca68c6c17">add</link> (const V &amp;a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1aa26460af602b9e4373900eff4dddad44">scaleAndOffset</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;a, const V &amp;b)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1a54791aa42dc417c7354e496ead4f4f3d">subtract</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1a0f66592839cd574711bf87a26a5b2a89">subtract</link> (const V &amp;a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1ac65a469b31f9731cd9ad92430f432b71">divide</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1ac52a9d15dae2f25b50260dfbae3d724b">toggleSign</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V , class I &gt; </para><para>void <link linkend="_Vector_8hh_1af8510e3d2131a57d037a03f3c8e4596c">assign</link> (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v, const V &amp;RHS)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_Vector_8hh_1a3cbb0860a42a282a26aa253ca68c6c17"/>    <section>
    <title>add()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>add</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>add</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void add (const V &amp; a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v)</computeroutput></para><para>
Definition at line 340 of file Vector.cc.</para>
<programlisting>341 {&#32;<emphasis role="comment">//&#32;a&#32;+&#32;v</emphasis>
342 
343 &#32;&#32;&#32;&#32;<link linkend="_Vector_8cc_1af8ed022403e1f5df6daa9094218a4c0d">add</link>(v,&#32;a);
344 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1af8ed022403e1f5df6daa9094218a4c0d"/>    <section>
    <title>add()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>add</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>add</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void add (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; a)</computeroutput></para><para>
Definition at line 329 of file Vector.cc.</para>
<programlisting>330 {&#32;<emphasis role="comment">//&#32;v&#32;+&#32;a</emphasis>
331 
332 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
333 &#32;&#32;&#32;&#32;{
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;+=&#32;a;
335 &#32;&#32;&#32;&#32;}
336 
337 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1af8510e3d2131a57d037a03f3c8e4596c"/>    <section>
    <title>assign()</title>
<indexterm><primary>assign</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>assign</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void assign (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; RHS)</computeroutput></para><para>
Definition at line 400 of file Vector.cc.</para>
<programlisting>401 {&#32;<emphasis role="comment">//&#32;All&#32;elements&#32;=&#32;RHS</emphasis>
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
404 &#32;&#32;&#32;&#32;{
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;=&#32;RHS;
406 &#32;&#32;&#32;&#32;}
407 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1ac65a469b31f9731cd9ad92430f432b71"/>    <section>
    <title>divide()</title>
<indexterm><primary>divide</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>divide</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void divide (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; a)</computeroutput></para><para>
Definition at line 381 of file Vector.cc.</para>
<programlisting>382 {&#32;<emphasis role="comment">//&#32;v&#32;/&#32;a</emphasis>
383 
384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
385 &#32;&#32;&#32;&#32;{
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;/=&#32;a;
387 &#32;&#32;&#32;&#32;}
388 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1a5f15071d730549f04efa382b61747ff9"/>    <section>
    <title>scale()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>scale</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>scale</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void scale (const V &amp; a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v)</computeroutput></para><para>
Definition at line 322 of file Vector.cc.</para>
<programlisting>323 {&#32;<emphasis role="comment">//&#32;a&#32;*&#32;v</emphasis>
324 
325 &#32;&#32;&#32;&#32;<link linkend="_Vector_8cc_1a6553f392c54a87ee890ecddd59a26675">scale</link>(v,&#32;a);
326 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1a6553f392c54a87ee890ecddd59a26675"/>    <section>
    <title>scale()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>scale</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>scale</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void scale (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; a)</computeroutput></para><para>
Definition at line 311 of file Vector.cc.</para>
<programlisting>312 {&#32;<emphasis role="comment">//&#32;v&#32;*&#32;a</emphasis>
313 
314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&#32;&lt;=&#32;v.<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)
315 &#32;&#32;&#32;&#32;{
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;*=&#32;a;
317 &#32;&#32;&#32;&#32;}
318 
319 
320 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1aa26460af602b9e4373900eff4dddad44"/>    <section>
    <title>scaleAndOffset()</title>
<indexterm><primary>scaleAndOffset</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>scaleAndOffset</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void scaleAndOffset (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; a, const V &amp; b)</computeroutput></para><para>
Definition at line 348 of file Vector.cc.</para>
<programlisting>349 {&#32;<emphasis role="comment">//&#32;(a&#32;*&#32;v)&#32;+&#32;b&#32;&#32;&#32;&#32;</emphasis>
350 
351 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
352 &#32;&#32;&#32;&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;*=&#32;a;
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;+=&#32;<link linkend="_namespaceNSEuropeanOption_1a6b26f4d79c6b43133be664e2eb229fff">b</link>;
355 &#32;&#32;&#32;&#32;}
356 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1a0f66592839cd574711bf87a26a5b2a89"/>    <section>
    <title>subtract()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>subtract</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>subtract</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void subtract (const V &amp; a, <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v)</computeroutput></para><para>
Definition at line 368 of file Vector.cc.</para>
<programlisting>369 {&#32;<emphasis role="comment">//&#32;a&#32;-&#32;v</emphasis>
370 
371 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;operation&#32;is&#32;not&#32;commutative,&#32;so&#32;redo&#32;the&#32;for&#32;loop</emphasis>
372 
373 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
374 &#32;&#32;&#32;&#32;{
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;=&#32;a&#32;-&#32;v[i];
376 &#32;&#32;&#32;&#32;}
377 &#32;&#32;&#32;&#32;
378 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1a54791aa42dc417c7354e496ead4f4f3d"/>    <section>
    <title>subtract()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>subtract</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>subtract</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void subtract (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v, const V &amp; a)</computeroutput></para><para>
Definition at line 359 of file Vector.cc.</para>
<programlisting>360 {&#32;<emphasis role="comment">//&#32;v&#32;-&#32;a</emphasis>
361 
362 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
363 &#32;&#32;&#32;&#32;{
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;-=&#32;a;
365 &#32;&#32;&#32;&#32;}
366 }
</programlisting>    </section><anchor xml:id="_Vector_8hh_1ac52a9d15dae2f25b50260dfbae3d724b"/>    <section>
    <title>toggleSign()</title>
<indexterm><primary>toggleSign</primary><secondary>Vector.hh</secondary></indexterm>
<indexterm><primary>Vector.hh</primary><secondary>toggleSign</secondary></indexterm>
<computeroutput>template&lt;class V , class I &gt; </computeroutput><para><computeroutput>void toggleSign (<link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v)</computeroutput></para><para>
Definition at line 391 of file Vector.cc.</para>
<programlisting>392 {&#32;<emphasis role="comment">//&#32;-v&#32;(unary&#32;minus)</emphasis>
393 
394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;v.&#32;MinIndex();&#32;i&#32;&lt;=&#32;v.&#32;MaxIndex();&#32;i++)
395 &#32;&#32;&#32;&#32;{
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i]&#32;=&#32;-v[i];
397 &#32;&#32;&#32;&#32;}
398 }
</programlisting></section>
</section>
</section>
