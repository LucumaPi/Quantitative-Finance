<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classExcelDriver">
<title>ExcelDriver Class Reference</title>
<indexterm><primary>ExcelDriver</primary></indexterm>
Collaboration diagram for ExcelDriver:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classExcelDriver__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classExcelDriver_1acecbf115d498691f0637a58ce6bffbf4"/>void <emphasis role="strong">CreateChart</emphasis> (const <link linkend="_classVector">Vector</link>&lt; double, long &gt; &amp;x, const std::list&lt; std::string &gt; &amp;labels, const std::list&lt; <link linkend="_classVector">Vector</link>&lt; double, long &gt; &gt; &amp;vectorList, const std::string &amp;chartTitle, const std::string &amp;xTitle=&quot;X&quot;, const std::string &amp;yTitle=&quot;Y&quot;)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1afdeb32319d1437b249fc5727a5420fc7"/>void <emphasis role="strong">CreateChart</emphasis> (const <link linkend="_classVector">Vector</link>&lt; double, long &gt; &amp;x, const <link linkend="_classVector">Vector</link>&lt; double, long &gt; &amp;y, const std::string &amp;chartTitle, const std::string &amp;xTitle=&quot;X&quot;, const std::string &amp;yTitle=&quot;Y&quot;)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1a63753818c5895ff1ed84dad214de4332"/>void <emphasis role="strong">AddMatrix</emphasis> (const std::string &amp;sheetName, const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; double, long &gt; &amp;matrix, const std::list&lt; std::string &gt; &amp;rowLabels, const std::list&lt; std::string &gt; &amp;columnLabels)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1a3af0bbb50e01ade900e974ea6d2a15ff"/>void <emphasis role="strong">AddMatrix</emphasis> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; double, long &gt; &amp;matrix, const std::string &amp;SheetName=&quot;Matrix&quot;)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1ade5ecc043b7700ef93014799f278ae9b"/>void <emphasis role="strong">MakeVisible</emphasis> (bool b)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1afa7a45b8d3499de788e722c75627e284"/>void <emphasis role="strong">printStringInExcel</emphasis> (const std::string &amp;s, long rowNumber, long colNumber, const std::string &amp;sheetName)</para>
</listitem>
            <listitem><para><anchor xml:id="_classExcelDriver_1a5ad2471080decc9d3681f164a4b2746c"/>void <emphasis role="strong">printStringInExcel</emphasis> (const std::list&lt; std::string &gt; &amp;s, long rowNumber, long colNumber, const std::string &amp;sheetName)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classExcelDriver_1a6134831444a75b0ddc0bbf7fb949b1f8"/>static <link linkend="_classExcelDriver">ExcelDriver</link> &amp; <emphasis role="strong">Instance</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/ExcelDriver.hhsrc/ExcelDriver.cc</section>
