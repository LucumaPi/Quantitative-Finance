<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPropertyThing">
<title>PropertyThing&lt; Name, Value &gt; Class Template Reference</title>
<indexterm><primary>PropertyThing&lt; Name, Value &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;PropertyThing.hh&gt;</computeroutput>
</para>
Inheritance diagram for PropertyThing&lt; Name, Value &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPropertyThing__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for PropertyThing&lt; Name, Value &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPropertyThing__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classPropertyThing_1a7a54d9bf80f89626d0e1da9e968ca7fc">PropertyThing</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classPropertyThing_1a4203e83962e477e2674693b14bec7fb4">~PropertyThing</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classPropertyThing">PropertyThing</link> * <link linkend="_classPropertyThing_1a50223b9a9f80477ad12c4625a74479d6">Copy</link> () const =0</para>
</listitem>
            <listitem><para><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; &amp; <link linkend="_classPropertyThing_1accff7ebee876e8eb6f3dac7731e8343f">operator=</link> (const <link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; &amp;source)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Name, class Value&gt;
class PropertyThing&lt; Name, Value &gt;</title></simplesect>

<para>
Definition at line 14 of file PropertyThing.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classPropertyThing_1a7a54d9bf80f89626d0e1da9e968ca7fc"/>    <section>
    <title>PropertyThing()</title>
<indexterm><primary>PropertyThing</primary><secondary>PropertyThing&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>PropertyThing&lt; Name, Value &gt;</primary><secondary>PropertyThing</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt;::<link linkend="_classPropertyThing">PropertyThing</link> ( )</computeroutput></para><para>
Definition at line 18 of file PropertyThing.cc.</para>
<programlisting>19 {
20 
21 }
</programlisting>    </section><anchor xml:id="_classPropertyThing_1a4203e83962e477e2674693b14bec7fb4"/>    <section>
    <title>~PropertyThing()</title>
<indexterm><primary>~PropertyThing</primary><secondary>PropertyThing&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>PropertyThing&lt; Name, Value &gt;</primary><secondary>~PropertyThing</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt;::~<link linkend="_classPropertyThing">PropertyThing</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 31 of file PropertyThing.cc.</para>
<programlisting>32 {
33 
34 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classPropertyThing_1a50223b9a9f80477ad12c4625a74479d6"/>    <section>
    <title>Copy()</title>
<indexterm><primary>Copy</primary><secondary>PropertyThing&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>PropertyThing&lt; Name, Value &gt;</primary><secondary>Copy</secondary></indexterm>
<computeroutput>template&lt;class Name, class Value&gt; </computeroutput><para><computeroutput>virtual <link linkend="_classPropertyThing">PropertyThing</link>* <link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt;::Copy ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef">SimplePropertySet&lt; N, V &gt;</link>, <link linkend="_classSimplePropertySet_1a5310d09ff2e7065a119dbf1368179cef">SimplePropertySet&lt; std::string, AnyType * &gt;</link>, and <link linkend="_classProperty_1a7e1e5e423a9021764d505bd982a2b4da">Property&lt; Name, Value &gt;</link>.</para>
    </section><anchor xml:id="_classPropertyThing_1accff7ebee876e8eb6f3dac7731e8343f"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>PropertyThing&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>PropertyThing&lt; Name, Value &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; &amp; <link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt;::operator= (const <link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; &amp; source)</computeroutput></para><para>
Definition at line 24 of file PropertyThing.cc.</para>
<programlisting>25 {
26 
27 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_PropertyThing_8hh">PropertyThing.hh</link>src/<link linkend="_PropertyThing_8cc">PropertyThing.cc</link></section>
</section>
