<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_TestIBVP_8cc">
<title>tests/TestIBVP.cc File Reference</title>
<indexterm><primary>tests/TestIBVP.cc</primary></indexterm>
<programlisting>#include &lt;duffy/Instrument.hh&gt;
#include &lt;duffy/EEulerIBVPSolver.hh&gt;
#include &lt;duffy/BSIBVPImp.hh&gt;
#include &lt;duffy/STDImp.hh&gt;
#include &lt;duffy/MatrixMechanisms.hh&gt;
</programlisting>Include dependency graph for TestIBVP.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="TestIBVP_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classInstrumentFactory">InstrumentFactory</link> * <link linkend="_TestIBVP_8cc_1a944b59805882970c6620c319340c3d0d">GetInstrumentFactory</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_TestIBVP_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_TestIBVP_8cc_1a944b59805882970c6620c319340c3d0d"/>    <section>
    <title>GetInstrumentFactory()</title>
<indexterm><primary>GetInstrumentFactory</primary><secondary>TestIBVP.cc</secondary></indexterm>
<indexterm><primary>TestIBVP.cc</primary><secondary>GetInstrumentFactory</secondary></indexterm>
<para><computeroutput><link linkend="_classInstrumentFactory">InstrumentFactory</link>* GetInstrumentFactory ( )</computeroutput></para><para>
Definition at line 13 of file TestIBVP.cc.</para>
<programlisting>14 {
15 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;1&#32;factory&#32;in&#32;this&#32;version,&#32;like&#32;model&#32;T</emphasis>
16 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classConsoleInstrumentFactory">ConsoleInstrumentFactory</link>;
17 }
</programlisting>    </section><anchor xml:id="_TestIBVP_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>TestIBVP.cc</secondary></indexterm>
<indexterm><primary>TestIBVP.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 19 of file TestIBVP.cc.</para>
<programlisting>20 {
21 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A.&#32;The&#32;Continuous&#32;Problem</emphasis>
22 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Derived&#32;implementation&#32;class</emphasis>
23 &#32;&#32;&#32;&#32;<link linkend="_classSTDIBVPImp">STDIBVPImp</link>&#32;stdImp;
24 &#32;&#32;&#32;&#32;
25 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;the&#32;client&#32;class&#32;IVP</emphasis>
26 &#32;&#32;&#32;&#32;<link linkend="_classIBVPImp">IBVPImp</link>*&#32;myImp2&#32;=&#32;&amp;stdImp;
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;Smax&#32;=&#32;200.0;
29 &#32;&#32;&#32;&#32;<link linkend="_classRange">Range&lt;double&gt;</link>&#32;rangeX(0.0,&#32;Smax);
30 &#32;&#32;&#32;&#32;<link linkend="_classRange">Range&lt;double&gt;</link>&#32;rangeT(0.0,&#32;1.0);
31 
32 &#32;&#32;&#32;&#32;<link linkend="_classIBVP">IBVP</link>&#32;i2(*myImp2,&#32;rangeX,&#32;rangeT);
33 
34 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;B.&#32;Finite&#32;Difference&#32;Schemes</emphasis>
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;J&#32;=&#32;5;
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;=&#32;50;
37 &#32;&#32;&#32;&#32;<link linkend="_classExplicitEulerIBVP">ExplicitEulerIBVP</link>&#32;fdm(i2,&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>,&#32;J);
38 <emphasis role="comment">//&#32;&#32;print(fdm.result());</emphasis>
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;kk;
41 <emphasis role="comment">//&#32;&#32;cin&#32;&gt;&gt;&#32;kk;</emphasis>
42 
43 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ImplicitIBVP&#32;fdm2(i2,&#32;N,&#32;J);</emphasis>
44 <emphasis role="comment">//&#32;&#32;print(fdm2.result());</emphasis>
45 
46 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Display&#32;in&#32;Excel</emphasis>
47 
48 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mesher&#32;m(rangeX,&#32;rangeT);</emphasis>
49 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&lt;double,&#32;long&gt;&#32;XARR&#32;=&#32;m.xarr(6);</emphasis>
50 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Vector&lt;double,&#32;long&gt;&#32;vec&#32;=&#32;fdm.result()[2];</emphasis>
51 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printOneExcel(XARR,&#32;vec,&#32;std::string(&quot;explicit&quot;);</emphasis>
52 
53 <emphasis role="comment">//&#32;&#32;Vector&lt;double,&#32;long&gt;&#32;vec2&#32;=&#32;fdm2.result()[2];</emphasis>
54 <emphasis role="comment">//&#32;&#32;printOneExcel(XARR,&#32;vec2,&#32;std::string(&quot;implicit&quot;);</emphasis>
55 
56 
57 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Black&#32;Scholes&#32;example</emphasis>
58 &#32;&#32;&#32;&#32;<link linkend="_classInstrumentFactory">InstrumentFactory</link>*&#32;myFactory&#32;=&#32;<link linkend="_TestIBVP_8cc_1a944b59805882970c6620c319340c3d0d">GetInstrumentFactory</link>();
59 &#32;&#32;&#32;&#32;<link linkend="_classOption">Option</link>*&#32;myOption&#32;=&#32;myFactory-&gt;<link linkend="_classInstrumentFactory_1acc735ba0c9d3b8c36269d3553c1cb401">CreateOption</link>();
60 
61 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Derived&#32;implementation&#32;class</emphasis>
62 &#32;&#32;&#32;&#32;<link linkend="_classBSIBVPImp">BSIBVPImp</link>&#32;bs&#32;(*myOption);
63 &#32;&#32;&#32;&#32;bs.opt&#32;=&#32;myOption;
64 
65 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;the&#32;client&#32;class&#32;IBVP</emphasis>
66 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IBVPImp*&#32;myImp3&#32;=&#32;&amp;bs;</emphasis>
67 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IBVP&#32;i3(*myImp3,&#32;rangeX,&#32;rangeT);</emphasis>
68 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ExplicitEulerIBVP&#32;fdm3(i3,&#32;N,&#32;J);</emphasis>
69 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;print(fdm3.result());</emphasis>
70 
71 <emphasis role="comment">//&#32;&#32;printHE001();</emphasis>
72 <emphasis role="comment">//&#32;&#32;printHE0012();</emphasis>
73 
74 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
75 }
</programlisting></section>
</section>
</section>
