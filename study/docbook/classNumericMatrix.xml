<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classNumericMatrix">
<title>NumericMatrix&lt; V, I, S &gt; Class Template Reference</title>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;NumericMatrix.hh&gt;</computeroutput>
</para>
Inheritance diagram for NumericMatrix&lt; V, I, S &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classNumericMatrix__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for NumericMatrix&lt; V, I, S &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classNumericMatrix__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classNumericMatrix_1acaff2f3e39970e6203e91435b8c44ce6">NumericMatrix</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix_1a64725ef6f2b55b179194c2f62aa2cd8e">NumericMatrix</link> (I rows, I columns)</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix_1a4bdde6c901346fbd0b3c26741e85e3ed">NumericMatrix</link> (I rows, I columns, I rowStart, I columnStart)</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix_1a18f0a755f5a322c4dbb0d172addc531f">NumericMatrix</link> (const <link linkend="_classMatrix">Matrix</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix_1a72ff7005e1c0c7935d444c2915fd2cbd">NumericMatrix</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classNumericMatrix_1ace217b6d2d00a50238cba1053404c4aa">~NumericMatrix</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix_1acad49f4a4c23aaf06113266b26f1f0ac">Row</link> (I row) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix_1af8e382c23aadb529880b4428735b873c">Column</link> (I column) const</para>
</listitem>
            <listitem><para>void <link linkend="_classNumericMatrix_1a3145ae8e979f9b2dbf9f140714dd27f1">Row</link> (I row, const <link linkend="_classArray">Array</link>&lt; V, I &gt; &amp;val)</para>
</listitem>
            <listitem><para>void <link linkend="_classNumericMatrix_1a756d85a3520832125fdbc61bf6a1f0e6">Column</link> (I column, const <link linkend="_classArray">Array</link>&lt; V, I &gt; &amp;val)</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; <link linkend="_classNumericMatrix_1ad7f5cac9fc7a2d398d96b2dc85a71542">operator=</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix_1ac885ad95ae4e3a2c8e101c818ff6395d">operator-</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix_1aee746c63c83adcc3c67377a2e9ea2c83">operator+</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp;m) const</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix_1a8bb3a2366d27e14218efec794c221d70">operator-</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp;m) const</para>
</listitem>
            <listitem><para><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix_1a09726249995754fdaaf13ac48cd02083">operator*</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp;m) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix_1a2c67323f846e47b2c4a22153e77980db">operator*</link> (const <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp;v) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class V, class I = int, class S = FullMatrix&lt;V&gt;&gt;
class NumericMatrix&lt; V, I, S &gt;</title></simplesect>

<para>
Definition at line 17 of file NumericMatrix.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classNumericMatrix_1acaff2f3e39970e6203e91435b8c44ce6"/>    <section>
    <title>NumericMatrix()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::<link linkend="_classNumericMatrix">NumericMatrix</link> ( )</computeroutput></para><para>
Definition at line 22 of file NumericMatrix.cc.</para>
<programlisting>22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;</link>()
23 {&#32;<emphasis role="comment">//&#32;Default&#32;constructor</emphasis>
24 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a64725ef6f2b55b179194c2f62aa2cd8e"/>    <section>
    <title>NumericMatrix()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::<link linkend="_classNumericMatrix">NumericMatrix</link> (I rows, I columns)</computeroutput></para><para>
Definition at line 27 of file NumericMatrix.cc.</para>
<programlisting>27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;</link>(rows,&#32;columns)
28 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;size.&#32;Start&#32;index=0.</emphasis>
29 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a4bdde6c901346fbd0b3c26741e85e3ed"/>    <section>
    <title>NumericMatrix()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::<link linkend="_classNumericMatrix">NumericMatrix</link> (I rows, I columns, I rowStart, I columnStart)</computeroutput></para><para>
Definition at line 32 of file NumericMatrix.cc.</para>
<programlisting>32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;</link>(rows,&#32;columns,&#32;rowStart,&#32;columnStart)
33 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;size&#32;&amp;&#32;start&#32;index</emphasis>
34 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a18f0a755f5a322c4dbb0d172addc531f"/>    <section>
    <title>NumericMatrix()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::<link linkend="_classNumericMatrix">NumericMatrix</link> (const <link linkend="_classMatrix">Matrix</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 37 of file NumericMatrix.cc.</para>
<programlisting>37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;</link>(source)
38 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;matrix</emphasis>
39 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a72ff7005e1c0c7935d444c2915fd2cbd"/>    <section>
    <title>NumericMatrix()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::<link linkend="_classNumericMatrix">NumericMatrix</link> (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 42 of file NumericMatrix.cc.</para>
<programlisting>42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;</link>(source)
43 {&#32;<emphasis role="comment">//&#32;Copy&#32;constructor</emphasis>
44 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1ace217b6d2d00a50238cba1053404c4aa"/>    <section>
    <title>~NumericMatrix()</title>
<indexterm><primary>~NumericMatrix</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>~NumericMatrix</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::~<link linkend="_classNumericMatrix">NumericMatrix</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 47 of file NumericMatrix.cc.</para>
<programlisting>48 {&#32;<emphasis role="comment">//&#32;Destructor</emphasis>
49 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classNumericMatrix_1af8e382c23aadb529880b4428735b873c"/>    <section>
    <title>Column()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Column</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>Column</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::Column (I column) const</computeroutput></para><para>
Definition at line 59 of file NumericMatrix.cc.</para>
<programlisting>60 {&#32;<emphasis role="comment">//&#32;Return&#32;Column.&#32;Overloads&#32;Matrix::Row()&#32;to&#32;return&#32;Vector&#32;instead&#32;of&#32;Array</emphasis>
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classVector">Vector&lt;V, I&gt;</link>(<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;::Column</link>(column));
62 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a756d85a3520832125fdbc61bf6a1f0e6"/>    <section>
    <title>Column()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Column</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>Column</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S &gt; </computeroutput><para><computeroutput>void <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::Column (I column, const <link linkend="_classArray">Array</link>&lt; V, I &gt; &amp; val)</computeroutput></para><para>
Definition at line 76 of file NumericMatrix.cc.</para>
<programlisting>77 {&#32;<emphasis role="comment">//&#32;Replace&#32;column.&#32;Overloaded&#32;because&#32;Column()&#32;selector&#32;is&#32;overloaded&#32;thus&#32;hiding&#32;Matrix::Column()&#32;modifier.</emphasis>
78 &#32;&#32;&#32;&#32;<link linkend="_classMatrix_1a2278829f8202d2a9b75a38457ce97d6d">Matrix&lt;V, I, S&gt;::Column</link>(column,&#32;val);
79 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a09726249995754fdaaf13ac48cd02083"/>    <section>
    <title>operator*()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator* (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; m) const</computeroutput></para><para>
Definition at line 142 of file NumericMatrix.cc.</para>
<programlisting>143 {&#32;<emphasis role="comment">//&#32;Multiply&#32;the&#32;matrix.</emphasis>
144 &#32;&#32;<emphasis role="comment">//&#32;This&#32;function&#32;can&#32;be&#32;optimized&#32;by&#32;calculating&#32;the&#32;inner&#32;product&#32;ourselfs&#32;instead&#32;of&#32;</emphasis>
145 &#32;&#32;<emphasis role="comment">//&#32;using&#32;the&#32;InnerProduct&#32;function&#32;of&#32;Vector.&#32;This&#32;saves&#32;a&#32;couple&#32;of&#32;row&#32;and&#32;column&#32;copies.</emphasis>
146 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;matrix&#32;with&#32;same&#32;row&#32;size&#32;of&#32;first&#32;matrix&#32;and&#32;column&#32;size&#32;of&#32;second&#32;matrix&#32;and&#32;same&#32;starting&#32;index&#32;as&#32;first&#32;matrix</emphasis>
147 &#32;&#32;&#32;&#32;<link linkend="_classNumericMatrix">NumericMatrix&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classMatrix_1a137b54c61fa1a897a903ea3c466dd271">Rows</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a7e137fcf687b490b80b47269ba8c4ae6">Columns</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>());
148 &#32;&#32;&#32;&#32;I&#32;r1,&#32;c2,&#32;rr,&#32;cr;
149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Element&#32;of&#32;resulting&#32;array&#32;is&#32;dot/inner&#32;product&#32;of&#32;corresponding&#32;row&#32;m1&#32;and&#32;corresponding&#32;column&#32;m2</emphasis>
150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;rr=result.MinRowIndex();&#32;rr&lt;=result.MaxRowIndex();&#32;rr++)
151 &#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;cr&#32;=&#32;result.MinColumnIndex();&#32;cr&#32;&lt;=&#32;result.MaxColumnIndex();&#32;cr++)&#32;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result(rr,&#32;cr)&#32;=&#32;0.0;
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;k&#32;=&#32;(*this).MinColumnIndex();&#32;k&#32;&lt;=&#32;(*this).MinColumnIndex();&#32;k++)
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result(rr,&#32;cr)&#32;+=&#32;(*this)(rr,&#32;k)&#32;*&#32;m(k,cr);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;
160 &#32;&#32;&#32;&#32;}
161 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;result</emphasis>
162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
163 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a2c67323f846e47b2c4a22153e77980db"/>    <section>
    <title>operator*()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator* (const <link linkend="_classVector">Vector</link>&lt; V, I &gt; &amp; v) const</computeroutput></para><para>
Definition at line 165 of file NumericMatrix.cc.</para>
<programlisting>166 {
167 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Result&#32;has&#32;same&#32;number&#32;of&#32;rows&#32;as&#32;m&#32;and&#32;same&#32;start&#32;index&#32;as&#32;v</emphasis>
168 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;V, I&gt;</link>&#32;result(this-&gt;<link linkend="_classMatrix_1a137b54c61fa1a897a903ea3c466dd271">Rows</link>(),&#32;v.<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>());
169 
170 &#32;&#32;&#32;&#32;V&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>(0.0);&#32;&#32;&#32;<emphasis role="comment">//&#32;sum&#32;of&#32;rows</emphasis>
171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>();&#32;i&#32;&lt;=&#32;this-&gt;<link linkend="_classMatrix_1abd8766ab01ecf06e70cdce889afba641">MaxRowIndex</link>();&#32;i++)
172 &#32;&#32;&#32;&#32;{
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>&#32;=&#32;0.0;
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;j&#32;=&#32;this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>();&#32;j&lt;=&#32;this-&gt;<link linkend="_classMatrix_1af6cbab02648446701a31b7bce0110af7">MaxColumnIndex</link>();&#32;j++)
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>&#32;+=&#32;(*this)(i,j)&#32;*&#32;v[j];
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result[i]&#32;=&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>;
179 &#32;&#32;&#32;&#32;}
180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
181 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1aee746c63c83adcc3c67377a2e9ea2c83"/>    <section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator+ (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; m) const</computeroutput></para><para>
Definition at line 111 of file NumericMatrix.cc.</para>
<programlisting>112 {&#32;<emphasis role="comment">//&#32;Add&#32;the&#32;elements</emphasis>
113 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;matrix&#32;with&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
114 &#32;&#32;&#32;&#32;<link linkend="_classNumericMatrix">NumericMatrix&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classMatrix_1a137b54c61fa1a897a903ea3c466dd271">Rows</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a7e137fcf687b490b80b47269ba8c4ae6">Columns</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>());
115 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;all&#32;elements</emphasis>
116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;r1=this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>();&#32;r1&lt;=this-&gt;<link linkend="_classMatrix_1abd8766ab01ecf06e70cdce889afba641">MaxRowIndex</link>();&#32;r1++)
117 &#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;c1=this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>();&#32;c1&lt;=this-&gt;<link linkend="_classMatrix_1af6cbab02648446701a31b7bce0110af7">MaxColumnIndex</link>();&#32;c1++)&#32;
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result(r1,&#32;c1)&#32;=&#32;(*this)(r1,&#32;c1)&#32;+&#32;m(r1,&#32;c1);
120 &#32;&#32;&#32;&#32;}
121 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;result</emphasis>
122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
123 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1ac885ad95ae4e3a2c8e101c818ff6395d"/>    <section>
    <title>operator-()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator- ( ) const</computeroutput></para><para>
Definition at line 94 of file NumericMatrix.cc.</para>
<programlisting>95 {&#32;<emphasis role="comment">//&#32;Unary&#32;minus</emphasis>
96 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;matrix&#32;with&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
97 &#32;&#32;&#32;&#32;<link linkend="_classNumericMatrix">NumericMatrix&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classMatrix_1a137b54c61fa1a897a903ea3c466dd271">Rows</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a7e137fcf687b490b80b47269ba8c4ae6">Columns</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>());
98 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;all&#32;elements&#32;negative</emphasis>
99 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>=this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>();&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>&lt;=this-&gt;<link linkend="_classMatrix_1abd8766ab01ecf06e70cdce889afba641">MaxRowIndex</link>();&#32;<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>++)
100 &#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;c=this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>();&#32;c&lt;=this-&gt;<link linkend="_classMatrix_1af6cbab02648446701a31b7bce0110af7">MaxColumnIndex</link>();&#32;c++)&#32;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result(<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,c)&#32;=&#32;-(*this)(<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,c);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
105 &#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;result</emphasis>
107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
108 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a8bb3a2366d27e14218efec794c221d70"/>    <section>
    <title>operator-()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator- (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; m) const</computeroutput></para><para>
Definition at line 126 of file NumericMatrix.cc.</para>
<programlisting>127 {&#32;<emphasis role="comment">//&#32;Subtract&#32;the&#32;elements</emphasis>
128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;matrix&#32;with&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
129 &#32;&#32;&#32;&#32;<link linkend="_classNumericMatrix">NumericMatrix&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classMatrix_1a137b54c61fa1a897a903ea3c466dd271">Rows</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a7e137fcf687b490b80b47269ba8c4ae6">Columns</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>(),&#32;this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>());
130 &#32;&#32;&#32;&#32;<link linkend="_ArrayMechanisms_8hh_1a7a738d11c1fc7a5a9204c8c2adb08402">print</link>(result);
131 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;all&#32;elements</emphasis>
132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;r1&#32;=&#32;this-&gt;<link linkend="_classMatrix_1a0505cda9acadb178a38ec97718bf2fab">MinRowIndex</link>();&#32;r1&lt;=this-&gt;<link linkend="_classMatrix_1abd8766ab01ecf06e70cdce889afba641">MaxRowIndex</link>();&#32;r1++)
133 &#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;c1=this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>();&#32;c1&lt;=this-&gt;<link linkend="_classMatrix_1af6cbab02648446701a31b7bce0110af7">MaxColumnIndex</link>();&#32;c1++)
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result(r1,&#32;c1)&#32;=&#32;(*this)(r1,&#32;c1)&#32;-&#32;m(r1,&#32;c1);
136 &#32;&#32;&#32;&#32;}
137 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;result</emphasis>
138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
139 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1ad7f5cac9fc7a2d398d96b2dc85a71542"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::operator= (const <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 83 of file NumericMatrix.cc.</para>
<programlisting>84 {&#32;<emphasis role="comment">//&#32;Assignment&#32;operator</emphasis>
85 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exit&#32;if&#32;same&#32;object</emphasis>
86 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>==&amp;source)&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
87 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Call&#32;base&#32;class&#32;assignment</emphasis>
88 &#32;&#32;&#32;&#32;<link linkend="_classMatrix_1a4634b560e429e05ae482cc66ae6e6e8a">Matrix&lt;V, I, S&gt;::operator = </link>(source);
89 
90 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
91 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1acad49f4a4c23aaf06113266b26f1f0ac"/>    <section>
    <title>Row()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Row</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>Row</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I &gt; <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::Row (I row) const</computeroutput></para><para>
Definition at line 53 of file NumericMatrix.cc.</para>
<programlisting>54 {&#32;<emphasis role="comment">//&#32;Return&#32;row.&#32;Overloads&#32;Matrix::Row()&#32;to&#32;return&#32;Vector&#32;instead&#32;of&#32;Array</emphasis>
55 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classVector">Vector&lt;V, I&gt;</link>(<link linkend="_classMatrix">Matrix&lt;V, I, S&gt;::Row</link>(row));
56 }
</programlisting>    </section><anchor xml:id="_classNumericMatrix_1a3145ae8e979f9b2dbf9f140714dd27f1"/>    <section>
    <title>Row()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Row</primary><secondary>NumericMatrix&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>NumericMatrix&lt; V, I, S &gt;</primary><secondary>Row</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S &gt; </computeroutput><para><computeroutput>void <link linkend="_classNumericMatrix">NumericMatrix</link>&lt; V, I, S &gt;::Row (I row, const <link linkend="_classArray">Array</link>&lt; V, I &gt; &amp; val)</computeroutput></para><para>
Definition at line 66 of file NumericMatrix.cc.</para>
<programlisting>67 {&#32;<emphasis role="comment">//&#32;Replace&#32;row.&#32;Overloaded&#32;because&#32;Row()&#32;selector&#32;is&#32;overloaded&#32;thus&#32;hiding&#32;Matrix::Row()&#32;modifier.</emphasis>
68 <emphasis role="comment">//&#32;&#32;Matrix&lt;V,&#32;I,&#32;S&gt;::Row(row,&#32;val);</emphasis>
69 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;c=this-&gt;<link linkend="_classMatrix_1a72061ea24736a0ff90e62c1c0f40bad9">MinColumnIndex</link>();&#32;c&lt;=this-&gt;<link linkend="_classMatrix_1af6cbab02648446701a31b7bce0110af7">MaxColumnIndex</link>();&#32;c++)&#32;
70 &#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this)(row,c)&#32;=&#32;val[c];
72 &#32;&#32;&#32;&#32;}
73 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_NumericMatrix_8hh">NumericMatrix.hh</link>src/<link linkend="_NumericMatrix_8cc">NumericMatrix.cc</link></section>
</section>
