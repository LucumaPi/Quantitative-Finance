<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_director_8cc">
<title>tests/director.cc File Reference</title>
<indexterm><primary>tests/director.cc</primary></indexterm>
<programlisting>#include &lt;duffy/BinomialMethod.hh&gt;
#include &lt;duffy/BinomialLatticeStrategy.hh&gt;
#include &lt;duffy/EuropeanOptionFactory.hh&gt;
#include &quot;../src/LatticeMechanisms.cc&quot;
</programlisting>Include dependency graph for director.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="director_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classEuropeanOptionFactory">EuropeanOptionFactory</link> * <link linkend="_director_8cc_1a6a4508a2b9d1fe00be954b686998d79e">getFactory</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classBinomialLatticeStrategy">BinomialLatticeStrategy</link> * <link linkend="_director_8cc_1a1db1bf9e7954a5dd2efa2b2876a9a68a">getStrategy</link> (double sig, double r, double k, double S, double K, int <link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; double, int &gt; <link linkend="_director_8cc_1aa3f446b0b1f8522f7b3f9a145a6a44b5">calcPayoffVector</link> (<link linkend="_classVector">Vector</link>&lt; double, int &gt; xarr, const <link linkend="_classOption">Option</link> &amp;opt)</para>
</listitem>
            <listitem><para>int <link linkend="_director_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_director_8cc_1aa3f446b0b1f8522f7b3f9a145a6a44b5"/>    <section>
    <title>calcPayoffVector()</title>
<indexterm><primary>calcPayoffVector</primary><secondary>director.cc</secondary></indexterm>
<indexterm><primary>director.cc</primary><secondary>calcPayoffVector</secondary></indexterm>
<para><computeroutput><link linkend="_classVector">Vector</link>&lt;double, int&gt; calcPayoffVector (<link linkend="_classVector">Vector</link>&lt; double, int &gt; xarr, const <link linkend="_classOption">Option</link> &amp; opt)</computeroutput></para><para>
Definition at line 56 of file director.cc.</para>
<programlisting>57 {
58 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;need&#32;the&#32;form&#32;of&#32;the&#32;lattice&#32;at&#32;the&#32;&apos;base&apos;&#32;of&#32;the&#32;pyramid.&#32;This</emphasis>
59 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;will&#32;be&#32;needed&#32;when&#32;we&#32;use&#32;backward&#32;induction&#32;</emphasis>
60 &#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;double, int&gt;</link>&#32;result&#32;(xarr);
62 
63 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;use&#32;functionMechanisms&#32;</emphasis>
64 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Vector&lt;double,&#32;int&gt;&#32;</emphasis>
65 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;createDiscreteFunction(double&#32;(*f)(double&#32;x),&#32;const&#32;Vector&lt;double,&#32;int&gt;&amp;&#32;xarr);&#32;*/</emphasis>
66 
67 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;xarr.<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;j&#32;&lt;=&#32;xarr.<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;j++)
68 &#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result[j]&#32;=&#32;opt.<link linkend="_classOption_1a860218238db3dd970925771ebd27d53d">payoff</link>(xarr[j]);
70 &#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
73 }
</programlisting>    </section><anchor xml:id="_director_8cc_1a6a4508a2b9d1fe00be954b686998d79e"/>    <section>
    <title>getFactory()</title>
<indexterm><primary>getFactory</primary><secondary>director.cc</secondary></indexterm>
<indexterm><primary>director.cc</primary><secondary>getFactory</secondary></indexterm>
<para><computeroutput><link linkend="_classEuropeanOptionFactory">EuropeanOptionFactory</link>* getFactory ( )</computeroutput></para><para>
Definition at line 20 of file director.cc.</para>
<programlisting>21 {
22 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classConsoleEuropeanOptionFactory">ConsoleEuropeanOptionFactory</link>;
23 }
</programlisting>    </section><anchor xml:id="_director_8cc_1a1db1bf9e7954a5dd2efa2b2876a9a68a"/>    <section>
    <title>getStrategy()</title>
<indexterm><primary>getStrategy</primary><secondary>director.cc</secondary></indexterm>
<indexterm><primary>director.cc</primary><secondary>getStrategy</secondary></indexterm>
<para><computeroutput><link linkend="_classBinomialLatticeStrategy">BinomialLatticeStrategy</link>* getStrategy (double sig, double r, double k, double S, double K, int N)</computeroutput></para><para>
Definition at line 25 of file director.cc.</para>
<programlisting>26 {
27 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n1.&#32;CRR,&#32;2.&#32;JR,&#32;3.&#32;TRG,&#32;4.&#32;EQP,&#32;5.&#32;Modified&#32;CRR:\n6.&#32;Cayley&#32;JR&#32;Transform:&#32;7&#32;Cayley&#32;CRR:&#32;&quot;</emphasis>;
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;choice;
29 &#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;choice;
30 
31 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;1)
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classCRRStrategy">CRRStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
33 
34 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;2)
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classJRStrategy">JRStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
36 
37 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;3)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classTRGStrategy">TRGStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;4)
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classEQPStrategy">EQPStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;5)
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classModCRRStrategy">ModCRRStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k,&#32;S,&#32;<link linkend="_namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb">K</link>,&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>);
45 
46 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;6)
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classPadeJRStrategy">PadeJRStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
48 
49 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(choice&#32;==&#32;7)
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classPadeCRRStrategy">PadeCRRStrategy</link>(<link linkend="_namespaceNSEuropeanOption_1a974a1ee089fe6b1bb15292af1f2eef78">sig</link>,<link linkend="_namespaceNSEuropeanOption_1adf476278b7e6a6960d82dc00e93ef723">r</link>,k);
51 
52 }
</programlisting>    </section><anchor xml:id="_director_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>director.cc</secondary></indexterm>
<indexterm><primary>director.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 75 of file director.cc.</para>
<programlisting>76 {
77 L1:
78 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Phase&#32;I:&#32;Create&#32;and&#32;initialise&#32;the&#32;option</emphasis>
79 &#32;&#32;&#32;&#32;<link linkend="_classEuropeanOptionFactory">EuropeanOptionFactory</link>*&#32;fac&#32;=&#32;<link linkend="_director_8cc_1a6a4508a2b9d1fe00be954b686998d79e">getFactory</link>();
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;=&#32;200;
82 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Numbers&#32;of&#32;steps:&#32;&quot;</emphasis>;
83 &#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>;
84 
85 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;S&#32;=&#32;200;
86 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Give&#32;underlying&#32;value:&#32;&quot;</emphasis>;
87 &#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;S;
88 
89 &#32;&#32;&#32;&#32;<link linkend="_classOption">Option</link>*&#32;opt&#32;=&#32;fac&#32;-&gt;&#32;create();
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;fac;
91 
92 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;k&#32;=&#32;opt-&gt;<link linkend="_classOption_1ae583dd6d430a3b428014efa942605d54">T</link>&#32;/&#32;double&#32;(<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>);
93 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Step&#32;size&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;k&#32;&lt;&lt;&#32;std::endl;
94 
95 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;basic&#32;lattice</emphasis>
96 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;discounting&#32;=&#32;<link linkend="_Complex_8cc_1aeb56775d93a065d4bd643a5ed679db8c">std::exp</link>(-&#32;opt-&gt;<link linkend="_classOption_1abd44ab56edddcd59f80ca5c60c9b66f0">r</link>*k);
97 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Discounting&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;discounting&#32;&lt;&lt;&#32;std::endl;
98 
99 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Phase&#32;II:&#32;Create&#32;the&#32;binomial&#32;method</emphasis>
100 &#32;&#32;&#32;&#32;<link linkend="_classBinomialLatticeStrategy">BinomialLatticeStrategy</link>*&#32;lf&#32;=&#32;<link linkend="_director_8cc_1a1db1bf9e7954a5dd2efa2b2876a9a68a">getStrategy</link>(opt-&gt;<link linkend="_classOption_1a8b68f88d3e7a01dfea0b83e3e5a4f57e">sig</link>,&#32;opt-&gt;<link linkend="_classOption_1abd44ab56edddcd59f80ca5c60c9b66f0">r</link>,&#32;k,&#32;S,&#32;opt-&gt;<link linkend="_classOption_1a40db81993d02b319a38e62b42a730d6a">K</link>,&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>);
101 &#32;&#32;&#32;&#32;<link linkend="_classBinomialMethod">BinomialMethod</link>&#32;bn(discounting,&#32;*lf,&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>);
102 
103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Phase&#32;III:&#32;Forward&#32;Induction</emphasis>
104 &#32;&#32;&#32;&#32;bn.modifyLattice(S);
105 <emphasis role="comment">//&#32;&#32;print(bn.getLattice());</emphasis>
106 
107 &#32;&#32;&#32;&#32;
108 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Phase&#32;IV:&#32;Backward&#32;Induction</emphasis>
109 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;double, int&gt;</link>&#32;RHS&#32;=&#32;bn.BasePyramidVector();
110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lf&#32;-&gt;&#32;binomialType()&#32;==&#32;<link linkend="_BinomialLatticeStrategy_8hh_1add398b812ca9f586ea244ce5a9dc8c99a0c6c9746e1005a59aad5820dd028191c">Additive</link>)
111 &#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RHS[RHS.<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>()]&#32;=&#32;S&#32;*&#32;<link linkend="_Complex_8cc_1aeb56775d93a065d4bd643a5ed679db8c">::exp</link>(<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;*&#32;lf&#32;-&gt;&#32;downValue());
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;RHS.<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>()&#32;+&#32;1;&#32;j&#32;&lt;=&#32;RHS.<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;j++)
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RHS[j]&#32;=&#32;RHS[j-1]&#32;*&#32;<link linkend="_Complex_8cc_1aeb56775d93a065d4bd643a5ed679db8c">exp</link>(lf-&gt;<link linkend="_classBinomialLatticeStrategy_1a66374392d012923a905648e01e278fda">upValue</link>()&#32;-&#32;lf-&gt;<link linkend="_classBinomialLatticeStrategy_1ac831614255b54ebf6e624b616748a7e2">downValue</link>());
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
117 &#32;&#32;&#32;&#32;}
118 
119 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;double, int&gt;</link>&#32;Pay&#32;=&#32;<link linkend="_director_8cc_1aa3f446b0b1f8522f7b3f9a145a6a44b5">calcPayoffVector</link>(RHS,&#32;*opt);
120 
121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pr&#32;=&#32;bn.getPrice(Pay);
122 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;PriceN:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;pr&#32;&lt;&lt;&#32;std::endl;
123 
124 &#32;&#32;&#32;&#32;fac&#32;=&#32;<link linkend="_director_8cc_1a6a4508a2b9d1fe00be954b686998d79e">getFactory</link>();
125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;L1;
126 
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;lf;&#32;<emphasis role="keyword">delete</emphasis>&#32;opt;
128 
129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
130 }
</programlisting></section>
</section>
</section>
