<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver">
<title>NS_NonlinearSolver::NonlinearSolver Class Reference</title>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary></indexterm>
<para>
<computeroutput>#include &lt;NonlinearSolver.hh&gt;</computeroutput>
</para>
Inheritance diagram for NS_NonlinearSolver::NonlinearSolver:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classNS__NonlinearSolver_1_1NonlinearSolver__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for NS_NonlinearSolver::NonlinearSolver:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classNS__NonlinearSolver_1_1NonlinearSolver__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1a5371c3342836f79f66b556b2e6dc110f">NonlinearSolver</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver">NonlinearSolver</link> &amp; <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1adf16f5f92db6f555e4352f26673dd8f5">operator=</link> (const <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver">NonlinearSolver</link> &amp;n2)</para>
</listitem>
            <listitem><para><link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1a9fefab630c3d0243c1b98893baa56711">NonlinearSolver</link> (double(*function)(double))</para>
</listitem>
            <listitem><para>virtual double <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1a7336902d70e3ae47194eb92abac04333">solve</link> ()=0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>double(* <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1aef2c0d0470384254b4dd2b6c8dd1f6e6">myF</link> )(double x)</para>
</listitem>
            <listitem><para>double <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver_1ac028904a727110ecb0394662a629b6ba">tol</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 25 of file NonlinearSolver.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1a5371c3342836f79f66b556b2e6dc110f"/>    <section>
    <title>NonlinearSolver()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>NonlinearSolver</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>NonlinearSolver</secondary></indexterm>
<para><computeroutput>NS_NonlinearSolver::NonlinearSolver::NonlinearSolver ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 32 of file NonlinearSolver.hh.</para>
<programlisting>32 {}
</programlisting>    </section><anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1a9fefab630c3d0243c1b98893baa56711"/>    <section>
    <title>NonlinearSolver()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>NonlinearSolver</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>NonlinearSolver</secondary></indexterm>
<para><computeroutput>NS_NonlinearSolver::NonlinearSolver::NonlinearSolver (double(*)(double) function)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 36 of file NonlinearSolver.hh.</para>
<programlisting>37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
38 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1adf16f5f92db6f555e4352f26673dd8f5"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver">NonlinearSolver</link>&amp; NS_NonlinearSolver::NonlinearSolver::operator= (const <link linkend="_classNS__NonlinearSolver_1_1NonlinearSolver">NonlinearSolver</link> &amp; n2)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 33 of file NonlinearSolver.hh.</para>
<programlisting>33 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;}
</programlisting>    </section><anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1a7336902d70e3ae47194eb92abac04333"/>    <section>
    <title>solve()</title>
<indexterm><primary>solve</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>solve</secondary></indexterm>
<para><computeroutput>virtual double NS_NonlinearSolver::NonlinearSolver::solve ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classNS__NonlinearSolver_1_1SteffensensSolver_1ac3e56e12f820cf138e42ea6f3ed5577b">NS_NonlinearSolver::SteffensensSolver</link>, <link linkend="_classNS__NonlinearSolver_1_1SecantMethodSolver_1aa0353904d822a9d68c3c399de5b2a858">NS_NonlinearSolver::SecantMethodSolver</link>, <link linkend="_classNS__NonlinearSolver_1_1NewtonRaphsonSolver_1ac4348d68da383f040c44279233612bd0">NS_NonlinearSolver::NewtonRaphsonSolver</link>, and <link linkend="_classNS__NonlinearSolver_1_1BisectionSolver_1a92b3d483b030f4f4e7014f8097dfd3db">NS_NonlinearSolver::BisectionSolver</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1aef2c0d0470384254b4dd2b6c8dd1f6e6"/>    <section>
    <title>myF</title>
<indexterm><primary>myF</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>myF</secondary></indexterm>
<para><computeroutput>double(* NS_NonlinearSolver::NonlinearSolver::myF) (double x)</computeroutput></para><para>
Definition at line 28 of file NonlinearSolver.hh.</para>
    </section><anchor xml:id="_classNS__NonlinearSolver_1_1NonlinearSolver_1ac028904a727110ecb0394662a629b6ba"/>    <section>
    <title>tol</title>
<indexterm><primary>tol</primary><secondary>NS_NonlinearSolver::NonlinearSolver</secondary></indexterm>
<indexterm><primary>NS_NonlinearSolver::NonlinearSolver</primary><secondary>tol</secondary></indexterm>
<para><computeroutput>double NS_NonlinearSolver::NonlinearSolver::tol</computeroutput></para><para>
Definition at line 30 of file NonlinearSolver.hh.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/duffy/<link linkend="_NonlinearSolver_8hh">NonlinearSolver.hh</link></section>
</section>
