<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classAssocArray">
<title>AssocArray&lt; V, AI &gt; Class Template Reference</title>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;AssocArray.hh&gt;</computeroutput>
</para>
Inheritance diagram for AssocArray&lt; V, AI &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classAssocArray__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for AssocArray&lt; V, AI &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classAssocArray__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::map&lt; AI, V &gt;::<link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link></para>
</listitem>
            <listitem><para>typedef std::map&lt; AI, V &gt;::<link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classAssocArray_1a33a1d0f41fd0804939b454d02b8cace6">AssocArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1a44765aa15c3626fb21bd3a36b22ce684">AssocArray</link> (const <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp;arr2)</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1a750fa96eb605b58410e6daf9a3de73c2">AssocArray</link> (const <link linkend="_classSet">Set</link>&lt; AI &gt; &amp;names, const V &amp;val)</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp; <link linkend="_classAssocArray_1a217b73381b1ab8ec100fd09d2acdc4b8">operator=</link> (const <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp;ass2)</para>
</listitem>
            <listitem><para>virtual V &amp; <link linkend="_classAssocArray_1a8fac9fa310506a1319d71283e1dc54bc">operator[]</link> (const AI &amp;index)</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray_1a3fbe23088af5d36d97acd4b76bcb0107">Begin</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray_1a5d270d9533aec3d3bd5118ce699d26af">Begin</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray_1a600b9a0280c6f67380abc032dad1d755">End</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray_1a5a974719d428e24d48e14ff5f43b73fc">End</link> () const</para>
</listitem>
            <listitem><para>long <link linkend="_classAssocArray_1ab2ab7a330c94e3fb36060c9ec6e908ef">Size</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classSet">Set</link>&lt; AI &gt; <link linkend="_classAssocArray_1a06535adaa02888ad24b3385eb1f83094">Keys</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class V, class AI = std::string&gt;
class AssocArray&lt; V, AI &gt;</title></simplesect>

<para>
Definition at line 18 of file AssocArray.hh.</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62"/>    <section>
    <title>const_iterator</title>
<indexterm><primary>const_iterator</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;class V, class AI = std::string&gt; </computeroutput><para><computeroutput>typedef std::map&lt;AI,V&gt;::<link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link></computeroutput></para><para>
Definition at line 42 of file AssocArray.hh.</para>
    </section><anchor xml:id="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c"/>    <section>
    <title>iterator</title>
<indexterm><primary>iterator</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;class V, class AI = std::string&gt; </computeroutput><para><computeroutput>typedef std::map&lt;AI,V&gt;::<link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link></computeroutput></para><para>
Definition at line 41 of file AssocArray.hh.</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classAssocArray_1a33a1d0f41fd0804939b454d02b8cace6"/>    <section>
    <title>AssocArray()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>AssocArray</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>AssocArray</secondary></indexterm>
<computeroutput>template&lt;class V , class AI &gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray">AssocArray</link> ( )</computeroutput></para><para>
Definition at line 21 of file AssocArray.cc.</para>
<programlisting>22 {
23 &#32;&#32;&#32;&#32;str&#32;=&#32;std::map&lt;AI,V&gt;();
24 &#32;&#32;&#32;&#32;keys&#32;=&#32;<link linkend="_classSet">Set&lt;AI&gt;</link>();
25 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a44765aa15c3626fb21bd3a36b22ce684"/>    <section>
    <title>AssocArray()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>AssocArray</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>AssocArray</secondary></indexterm>
<computeroutput>template&lt;class V, class AI&gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray">AssocArray</link> (const <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp; arr2)</computeroutput></para><para>
Definition at line 28 of file AssocArray.cc.</para>
<programlisting>29 {
30 &#32;&#32;&#32;&#32;str&#32;=&#32;arr2.str;
31 &#32;&#32;&#32;&#32;keys&#32;=&#32;arr2.keys;
32 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a750fa96eb605b58410e6daf9a3de73c2"/>    <section>
    <title>AssocArray()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>AssocArray</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>AssocArray</secondary></indexterm>
<computeroutput>template&lt;class V, class AI&gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray">AssocArray</link> (const <link linkend="_classSet">Set</link>&lt; AI &gt; &amp; names, const V &amp; val)</computeroutput></para><para>
Definition at line 37 of file AssocArray.cc.</para>
<programlisting>38 {
39 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classSet">Set&lt;AI&gt;::const_iterator</link>&#32;it;
40 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(it&#32;=&#32;names.<link linkend="_classSet_1a3ca47221f02ee54c6b627ff73a9b5b98">Begin</link>();&#32;it&#32;!=&#32;names.<link linkend="_classSet_1aeb4a4b2026eb040a24e9b251e0c49dec">End</link>();&#32;it++)
41 &#32;&#32;&#32;&#32;{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.insert(std::pair&lt;AI,V&gt;(*it,&#32;val));
43 &#32;&#32;&#32;&#32;}
44 
45 &#32;&#32;&#32;&#32;keys&#32;=&#32;names;
46 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classAssocArray_1a3fbe23088af5d36d97acd4b76bcb0107"/>    <section>
    <title>Begin()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Begin</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>Begin</secondary></indexterm>
<computeroutput>template&lt;class V , class AI &gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::Begin ( )</computeroutput></para><para>
Definition at line 73 of file AssocArray.cc.</para>
<programlisting>74 {&#32;<emphasis role="comment">//&#32;Return&#32;iterator&#32;at&#32;begin&#32;of&#32;composite</emphasis>
75 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.begin();
76 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a5d270d9533aec3d3bd5118ce699d26af"/>    <section>
    <title>Begin()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Begin</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>Begin</secondary></indexterm>
<computeroutput>template&lt;class V , class AI &gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::Begin ( ) const</computeroutput></para><para>
Definition at line 79 of file AssocArray.cc.</para>
<programlisting>80 {&#32;<emphasis role="comment">//&#32;Return&#32;const&#32;iterator&#32;at&#32;begin&#32;of&#32;composite</emphasis>
81 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.begin();
82 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a600b9a0280c6f67380abc032dad1d755"/>    <section>
    <title>End()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>End</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>End</secondary></indexterm>
<computeroutput>template&lt;class V , class AI &gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1ac1d9fb1b2682577b76f6dae9e674711c">iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::End ( )</computeroutput></para><para>
Definition at line 85 of file AssocArray.cc.</para>
<programlisting>86 {&#32;<emphasis role="comment">//&#32;Return&#32;iterator&#32;after&#32;end&#32;of&#32;composite</emphasis>
87 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.end();
88 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a5a974719d428e24d48e14ff5f43b73fc"/>    <section>
    <title>End()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>End</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>End</secondary></indexterm>
<computeroutput>template&lt;class V , class AI &gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::<link linkend="_classAssocArray_1adea91a1cf7a2abbfdfd4c9bc7c746c62">const_iterator</link> <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::End ( ) const</computeroutput></para><para>
Definition at line 91 of file AssocArray.cc.</para>
<programlisting>92 {&#32;<emphasis role="comment">//&#32;Return&#32;const&#32;iterator&#32;after&#32;end&#32;of&#32;composite</emphasis>
93 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.end();
94 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a06535adaa02888ad24b3385eb1f83094"/>    <section>
    <title>Keys()</title>
<indexterm><primary>Keys</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>Keys</secondary></indexterm>
<computeroutput>template&lt;class V, class AI = std::string&gt; </computeroutput><para><computeroutput><link linkend="_classSet">Set</link>&lt;AI&gt; <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::Keys ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 52 of file AssocArray.hh.</para>
<programlisting>52 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;keys;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy</emphasis>
</programlisting>    </section><anchor xml:id="_classAssocArray_1a217b73381b1ab8ec100fd09d2acdc4b8"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class V, class AI&gt; </computeroutput><para><computeroutput><link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp; <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::operator= (const <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt; &amp; ass2)</computeroutput></para><para>
Definition at line 49 of file AssocArray.cc.</para>
<programlisting>50 {
51 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&amp;ass2&#32;==&#32;<emphasis role="keyword">this</emphasis>)
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
53 
54 &#32;&#32;&#32;&#32;&#32;str&#32;=&#32;ass2.str;
55 
56 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;copy&#32;algorithm&#32;to&#32;copy&#32;the&#32;maps</emphasis>
57 <emphasis role="comment">//&#32;&#32;copy(ass2.str.begin(),&#32;ass2.end(),&#32;str.begin());&#32;&#32;&#32;&#32;</emphasis>
58 &#32;&#32;&#32;&#32;keys&#32;=&#32;ass2.keys;
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
61 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1a8fac9fa310506a1319d71283e1dc54bc"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;class V , class AI&gt; </computeroutput><para><computeroutput>V &amp; <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::operator[] (const AI &amp; index)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 66 of file AssocArray.cc.</para>
<programlisting>67 {
68 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str[index];
69 }
</programlisting>    </section><anchor xml:id="_classAssocArray_1ab2ab7a330c94e3fb36060c9ec6e908ef"/>    <section>
    <title>Size()</title>
<indexterm><primary>Size</primary><secondary>AssocArray&lt; V, AI &gt;</secondary></indexterm>
<indexterm><primary>AssocArray&lt; V, AI &gt;</primary><secondary>Size</secondary></indexterm>
<computeroutput>template&lt;class V, class AI = std::string&gt; </computeroutput><para><computeroutput>long <link linkend="_classAssocArray">AssocArray</link>&lt; V, AI &gt;::Size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 51 of file AssocArray.hh.</para>
<programlisting>51 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.size();&#32;}
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_AssocArray_8hh">AssocArray.hh</link>src/<link linkend="_AssocArray_8cc">AssocArray.cc</link></section>
</section>
