<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_TestOtherExceptions_8cc">
<title>tests/TestOtherExceptions.cc File Reference</title>
<indexterm><primary>tests/TestOtherExceptions.cc</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include &lt;string&gt;
</programlisting>Include dependency graph for TestOtherExceptions.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="TestOtherExceptions_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classBoundsError">BoundsError</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_TestOtherExceptions_8cc_1a5d6745a4ce55928507e360ba8b8f54d2">getValue</link> (int j)  throw (int, std::string)</para>
</listitem>
            <listitem><para>void <link linkend="_TestOtherExceptions_8cc_1a5538262279580eb18e3d9d430ac741a5">getValueVersionTwo</link> (int j)  throw (int, std::string)</para>
</listitem>
            <listitem><para>int <link linkend="_TestOtherExceptions_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_TestOtherExceptions_8cc_1a5d6745a4ce55928507e360ba8b8f54d2"/>    <section>
    <title>getValue()</title>
<indexterm><primary>getValue</primary><secondary>TestOtherExceptions.cc</secondary></indexterm>
<indexterm><primary>TestOtherExceptions.cc</primary><secondary>getValue</secondary></indexterm>
<para><computeroutput>void getValue (int j) throw ( int, std::string) </computeroutput></para><para>
Definition at line 19 of file TestOtherExceptions.cc.</para>
<programlisting>20 {
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;int(123);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&gt;&#32;100)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::string(<emphasis role="stringliteral">&quot;out&#32;of&#32;bounds&quot;</emphasis>);
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_classBoundsError">BoundsError</link>();&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Throws&#32;unexpected&#32;if&#32;no&#32;catch(...)</emphasis>
24 }
</programlisting>    </section><anchor xml:id="_TestOtherExceptions_8cc_1a5538262279580eb18e3d9d430ac741a5"/>    <section>
    <title>getValueVersionTwo()</title>
<indexterm><primary>getValueVersionTwo</primary><secondary>TestOtherExceptions.cc</secondary></indexterm>
<indexterm><primary>TestOtherExceptions.cc</primary><secondary>getValueVersionTwo</secondary></indexterm>
<para><computeroutput>void getValueVersionTwo (int j) throw ( int, std::string) </computeroutput></para><para>
Definition at line 26 of file TestOtherExceptions.cc.</para>
<programlisting>27 {
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;int(123);
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&gt;&#32;100)&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::string(<emphasis role="stringliteral">&quot;out&#32;of&#32;bounds&quot;</emphasis>);
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Re-throw</emphasis>
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>;
33 }
</programlisting>    </section><anchor xml:id="_TestOtherExceptions_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>TestOtherExceptions.cc</secondary></indexterm>
<indexterm><primary>TestOtherExceptions.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 35 of file TestOtherExceptions.cc.</para>
<programlisting>36 {
37 
38 
39 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
40 &#32;&#32;&#32;&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Value:&#32;&quot;</emphasis>;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;val;&#32;std::cin&#32;&gt;&gt;&#32;val;
43 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;getValue(val);</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_TestOtherExceptions_8cc_1a5538262279580eb18e3d9d430ac741a5">getValueVersionTwo</link>(val);
45 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;
46 
47 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&amp;&#32;e)
48 &#32;&#32;&#32;&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;integer&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;e&#32;&lt;&lt;&#32;std::endl;
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
51 &#32;&#32;&#32;&#32;}
52 
53 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::string&amp;&#32;e)
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;e&#32;&lt;&lt;&#32;std::endl;
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
57 &#32;&#32;&#32;&#32;}
58 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(...)
59 &#32;&#32;&#32;&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;No&#32;idea,&#32;really\n:&quot;</emphasis>;
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
62 &#32;&#32;&#32;&#32;}
63 
64 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
65 }
</programlisting></section>
</section>
</section>
