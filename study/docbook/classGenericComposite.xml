<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classGenericComposite">
<title>GenericComposite&lt; T &gt; Class Template Reference</title>
<indexterm><primary>GenericComposite&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;GenericComposite.hh&gt;</computeroutput>
</para>
Inheritance diagram for GenericComposite&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classGenericComposite__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for GenericComposite&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classGenericComposite__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classGenericComposite_1a922adde12be57cf459383f75ecdb3e5b">GenericComposite</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classGenericComposite_1af0bbd42fac7806031c5962ed1fbdf828">~GenericComposite</link> ()</para>
</listitem>
            <listitem><para>std::iterator <link linkend="_classGenericComposite_1ac98912eb4aaca339cf023b30fa5c6cdf">Begin</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6">const_iterator</link> <link linkend="_classGenericComposite_1a858f6f32793e50e22386507ca914553c">Begin</link> () const</para>
</listitem>
            <listitem><para>std::iterator <link linkend="_classGenericComposite_1afaad3512b4bba5b4e4a691ec44ed7857">End</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6">const_iterator</link> <link linkend="_classGenericComposite_1a2ec6c19ee4e29139ff1e366f876f3358">End</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classGenericComposite_1a6fce8da197eeb5543ccf2ab7a914d414">AddFront</link> (T &amp;s)</para>
</listitem>
            <listitem><para>void <link linkend="_classGenericComposite_1a60c8ad8f14bb1977d6a7dd6e739a9ed3">AddBack</link> (T &amp;s)</para>
</listitem>
            <listitem><para>void <link linkend="_classGenericComposite_1ae292eef10daa2a454897b3d166298317">RemoveFirst</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classGenericComposite_1a04c208f2363ead79d638fd590d7ebf24">RemoveLast</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classGenericComposite_1adbefe400c6e574f2f3a7b4b02b8fee8e">RemoveAll</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classGenericComposite">GenericComposite</link> &amp; <link linkend="_classGenericComposite_1a949dfd2be8e03c7d01118958cf4891c0">operator=</link> (const <link linkend="_classGenericComposite">GenericComposite</link> &amp;source)</para>
</listitem>
            <listitem><para>template&lt;class S &gt; </para><para>void <link linkend="_classGenericComposite_1af30c0539ccf8287db5bc4e93cd8b0688">accept</link> (S &amp;v)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::list&lt; T * &gt;::iterator <link linkend="_classGenericComposite_1a3248889ddefb5618a0f86e8b3592af16">iterator</link></para>
</listitem>
            <listitem><para>std::list&lt; T * &gt;::const_iterator <link linkend="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6">const_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class T&gt;
class GenericComposite&lt; T &gt;</title></simplesect>

<para>
Definition at line 16 of file GenericComposite.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classGenericComposite_1a922adde12be57cf459383f75ecdb3e5b"/>    <section>
    <title>GenericComposite()</title>
<indexterm><primary>GenericComposite</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>GenericComposite</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::<link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt; ( )</computeroutput></para><para>
Definition at line 34 of file GenericComposite.cc.</para>
<programlisting>34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_namespaceNSEuropeanOption_1a62a4ea4e8132239d531a9760dfe36b4d">T</link>()
35 {&#32;<emphasis role="comment">//&#32;Default&#32;constructor</emphasis>
36 
37 &#32;&#32;&#32;&#32;sl=std::list&lt;T*&gt;();
38 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1af0bbd42fac7806031c5962ed1fbdf828"/>    <section>
    <title>~GenericComposite()</title>
<indexterm><primary>~GenericComposite</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>~GenericComposite</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::~<link linkend="_classGenericComposite">GenericComposite</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 48 of file GenericComposite.cc.</para>
<programlisting>49 {&#32;<emphasis role="comment">//&#32;Destructor</emphasis>
50 
51 &#32;&#32;&#32;&#32;<link linkend="_classGenericComposite_1adbefe400c6e574f2f3a7b4b02b8fee8e">RemoveAll</link>();
52 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classGenericComposite_1af30c0539ccf8287db5bc4e93cd8b0688"/>    <section>
    <title>accept()</title>
<indexterm><primary>accept</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>accept</secondary></indexterm>
<computeroutput>template&lt;class T&gt; </computeroutput><computeroutput>template&lt;class S &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::accept (S &amp; v)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 58 of file GenericComposite.hh.</para>
<programlisting>58 {v.visit(*<emphasis role="keyword">this</emphasis>);}
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a60c8ad8f14bb1977d6a7dd6e739a9ed3"/>    <section>
    <title>AddBack()</title>
<indexterm><primary>AddBack</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>AddBack</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::AddBack (T &amp; s)</computeroutput></para><para>
Definition at line 100 of file GenericComposite.cc.</para>
<programlisting>101 {&#32;<emphasis role="comment">//&#32;Add&#32;Generic&#32;at&#32;the&#32;end&#32;of&#32;Genericlist.&#32;No&#32;copy&#32;is&#32;made.</emphasis>
102 
103 &#32;&#32;&#32;&#32;sl.push_back(&amp;s);
104 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a6fce8da197eeb5543ccf2ab7a914d414"/>    <section>
    <title>AddFront()</title>
<indexterm><primary>AddFront</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>AddFront</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::AddFront (T &amp; s)</computeroutput></para><para>
Definition at line 93 of file GenericComposite.cc.</para>
<programlisting>94 {&#32;<emphasis role="comment">//&#32;Add&#32;Generic&#32;at&#32;the&#32;beginning&#32;of&#32;Genericlist.&#32;No&#32;copy&#32;is&#32;made.</emphasis>
95 
96 &#32;&#32;&#32;&#32;sl.push_front(&amp;s);
97 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1ac98912eb4aaca339cf023b30fa5c6cdf"/>    <section>
    <title>Begin()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Begin</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>Begin</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::<link linkend="_classGenericComposite_1a3248889ddefb5618a0f86e8b3592af16">iterator</link> <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::Begin ( )</computeroutput></para><para>
Definition at line 56 of file GenericComposite.cc.</para>
<programlisting>57 {&#32;<emphasis role="comment">//&#32;Return&#32;iterator&#32;at&#32;begin&#32;of&#32;composite</emphasis>
58 
59 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sl.begin();
60 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a858f6f32793e50e22386507ca914553c"/>    <section>
    <title>Begin()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Begin</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>Begin</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::<link linkend="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6">const_iterator</link> <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::Begin ( ) const</computeroutput></para><para>
Definition at line 63 of file GenericComposite.cc.</para>
<programlisting>64 {&#32;<emphasis role="comment">//&#32;Return&#32;const&#32;iterator&#32;at&#32;begin&#32;of&#32;composite</emphasis>
65 
66 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sl.begin();
67 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b"/>    <section>
    <title>Count()</title>
<indexterm><primary>Count</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>Count</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>int <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::Count ( ) const</computeroutput></para><para>
Definition at line 85 of file GenericComposite.cc.</para>
<programlisting>86 {&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;number&#32;of&#32;Generics&#32;in&#32;the&#32;composite</emphasis>
87 
88 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sl.size();
89 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1afaad3512b4bba5b4e4a691ec44ed7857"/>    <section>
    <title>End()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>End</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>End</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::<link linkend="_classGenericComposite_1a3248889ddefb5618a0f86e8b3592af16">iterator</link> <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::End ( )</computeroutput></para><para>
Definition at line 70 of file GenericComposite.cc.</para>
<programlisting>71 {&#32;<emphasis role="comment">//&#32;Return&#32;iterator&#32;after&#32;end&#32;of&#32;composite</emphasis>
72 
73 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sl.end();
74 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a2ec6c19ee4e29139ff1e366f876f3358"/>    <section>
    <title>End()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>End</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>End</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::<link linkend="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6">const_iterator</link> <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::End ( ) const</computeroutput></para><para>
Definition at line 77 of file GenericComposite.cc.</para>
<programlisting>78 {&#32;<emphasis role="comment">//&#32;Return&#32;const&#32;iterator&#32;after&#32;end&#32;of&#32;composite</emphasis>
79 
80 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sl.end();
81 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a949dfd2be8e03c7d01118958cf4891c0"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput><link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt; &amp; <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::operator= (const <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt; &amp; source)</computeroutput></para><para>
Definition at line 157 of file GenericComposite.cc.</para>
<programlisting>158 {&#32;<emphasis role="comment">//&#32;Assignment</emphasis>
159 
160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exit&#32;if&#32;same&#32;object</emphasis>
161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>==&amp;source)&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
162 
163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First&#32;clear&#32;our&#32;list</emphasis>
164 &#32;&#32;&#32;&#32;<link linkend="_classGenericComposite_1adbefe400c6e574f2f3a7b4b02b8fee8e">RemoveAll</link>();
165 
166 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Base&#32;class&#32;assignment</emphasis>
167 &#32;&#32;&#32;&#32;Generic::operator&#32;=&#32;(source);
168 
169 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;other&#32;list</emphasis>
170 &#32;&#32;&#32;&#32;Copy(source);
171 
172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
173 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1adbefe400c6e574f2f3a7b4b02b8fee8e"/>    <section>
    <title>RemoveAll()</title>
<indexterm><primary>RemoveAll</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>RemoveAll</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::RemoveAll ( )</computeroutput></para><para>
Definition at line 138 of file GenericComposite.cc.</para>
<programlisting>139 {&#32;<emphasis role="comment">//&#32;Remove&#32;all&#32;Generics&#32;from&#32;the&#32;list</emphasis>
140 
141 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;STL&#32;list&#32;iterator</emphasis>
142 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::list&lt;T*&gt;::iterator&#32;it;
143 
144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(it=sl.begin();&#32;it!=sl.end();&#32;it++)
145 &#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;Delete&#32;every&#32;Generic&#32;in&#32;the&#32;list</emphasis>
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;(*it);&#32;&#32;&#32;<emphasis role="comment">//&#32;Delete&#32;Generic</emphasis>
148 &#32;&#32;&#32;&#32;}
149 
150 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;the&#32;Generic&#32;pointers&#32;from&#32;the&#32;list</emphasis>
151 &#32;&#32;&#32;&#32;sl.clear();
152 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1ae292eef10daa2a454897b3d166298317"/>    <section>
    <title>RemoveFirst()</title>
<indexterm><primary>RemoveFirst</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>RemoveFirst</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::RemoveFirst ( )</computeroutput></para><para>
Definition at line 116 of file GenericComposite.cc.</para>
<programlisting>117 {&#32;<emphasis role="comment">//&#32;Remove&#32;first&#32;Generic</emphasis>
118 
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;sl.front();&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Delete&#32;the&#32;Generic</emphasis>
120 &#32;&#32;&#32;&#32;sl.pop_front();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;Generic&#32;pointer&#32;from&#32;list</emphasis>
121 }
</programlisting>    </section><anchor xml:id="_classGenericComposite_1a04c208f2363ead79d638fd590d7ebf24"/>    <section>
    <title>RemoveLast()</title>
<indexterm><primary>RemoveLast</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>RemoveLast</secondary></indexterm>
<computeroutput>template&lt;class T &gt; </computeroutput><para><computeroutput>void <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::RemoveLast ( )</computeroutput></para><para>
Definition at line 108 of file GenericComposite.cc.</para>
<programlisting>109 {&#32;<emphasis role="comment">//&#32;Remove&#32;last&#32;Generic</emphasis>
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;sl.back();&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Delete&#32;the&#32;Generic</emphasis>
112 &#32;&#32;&#32;&#32;sl.pop_back();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;Generic&#32;pointer&#32;from&#32;list</emphasis>
113 }
</programlisting></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classGenericComposite_1a494d5668212f0da3073a1affbe8923f6"/>    <section>
    <title>const_iterator</title>
<indexterm><primary>const_iterator</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>const_iterator</secondary></indexterm>
<computeroutput>template&lt;class T&gt; </computeroutput><para><computeroutput>std::list&lt;T*&gt;::const_iterator <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::const_iterator</computeroutput></para><para>
Definition at line 28 of file GenericComposite.hh.</para>
    </section><anchor xml:id="_classGenericComposite_1a3248889ddefb5618a0f86e8b3592af16"/>    <section>
    <title>iterator</title>
<indexterm><primary>iterator</primary><secondary>GenericComposite&lt; T &gt;</secondary></indexterm>
<indexterm><primary>GenericComposite&lt; T &gt;</primary><secondary>iterator</secondary></indexterm>
<computeroutput>template&lt;class T&gt; </computeroutput><para><computeroutput>std::list&lt;T*&gt;::iterator <link linkend="_classGenericComposite">GenericComposite</link>&lt; T &gt;::iterator</computeroutput></para><para>
Definition at line 27 of file GenericComposite.hh.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_GenericComposite_8hh">GenericComposite.hh</link>src/<link linkend="_GenericComposite_8cc">GenericComposite.cc</link></section>
</section>
