<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_TestOneFactorPayoff_8cc">
<title>tests/TestOneFactorPayoff.cc File Reference</title>
<indexterm><primary>tests/TestOneFactorPayoff.cc</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;duffy/OneFactorPayoff.hh&gt;
</programlisting>Include dependency graph for TestOneFactorPayoff.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="TestOneFactorPayoff_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>double <link linkend="_TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e">CallPayoffFN</link> (double K, double S)</para>
</listitem>
            <listitem><para>double <link linkend="_TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d">PutPayoffFN</link> (double K, double S)</para>
</listitem>
            <listitem><para>int <link linkend="_TestOneFactorPayoff_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e"/>    <section>
    <title>CallPayoffFN()</title>
<indexterm><primary>CallPayoffFN</primary><secondary>TestOneFactorPayoff.cc</secondary></indexterm>
<indexterm><primary>TestOneFactorPayoff.cc</primary><secondary>CallPayoffFN</secondary></indexterm>
<para><computeroutput>double CallPayoffFN (double K, double S)</computeroutput></para><para>
Definition at line 16 of file TestOneFactorPayoff.cc.</para>
<programlisting>17 {
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(S&#32;&gt;&#32;<link linkend="_namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb">K</link>)
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(S&#32;-&#32;<link linkend="_namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb">K</link>);
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0;
22 
23 }
</programlisting>    </section><anchor xml:id="_TestOneFactorPayoff_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>TestOneFactorPayoff.cc</secondary></indexterm>
<indexterm><primary>TestOneFactorPayoff.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 35 of file TestOneFactorPayoff.cc.</para>
<programlisting>36 {
37 
38 &#32;&#32;&#32;&#32;<link linkend="_classOneFactorPayoff">OneFactorPayoff</link>&#32;pay1(20.0,&#32;<link linkend="_TestOneFactorPayoff_8cc_1ab84c0aa14f70797b64f551782767424e">CallPayoffFN</link>);
39 &#32;&#32;&#32;&#32;
40 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Give&#32;a&#32;stock&#32;price&#32;(plain&#32;Call):&#32;&quot;</emphasis>;
41 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;S;
42 &#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;S;
43 
44 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Call&#32;Payoff&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;pay1.payoff(S)&#32;&lt;&lt;&#32;std::endl;
45 
46 &#32;&#32;&#32;&#32;<link linkend="_classOneFactorPayoff">OneFactorPayoff</link>&#32;pay2(20.0,&#32;<link linkend="_TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d">PutPayoffFN</link>);
47 &#32;&#32;&#32;&#32;
48 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Give&#32;a&#32;stock&#32;price&#32;(plain&#32;Put):&#32;&quot;</emphasis>;
49 &#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;S;
50 
51 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Put&#32;Payoff&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;pay2.payoff(S)&#32;&lt;&lt;&#32;std::endl;
52 
53 &#32;&#32;&#32;&#32;
54 
55 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
56 }
</programlisting>    </section><anchor xml:id="_TestOneFactorPayoff_8cc_1a3fddf5d8e03a6a02f4bdc6f46965ae8d"/>    <section>
    <title>PutPayoffFN()</title>
<indexterm><primary>PutPayoffFN</primary><secondary>TestOneFactorPayoff.cc</secondary></indexterm>
<indexterm><primary>TestOneFactorPayoff.cc</primary><secondary>PutPayoffFN</secondary></indexterm>
<para><computeroutput>double PutPayoffFN (double K, double S)</computeroutput></para><para>
Definition at line 25 of file TestOneFactorPayoff.cc.</para>
<programlisting>26 {
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;max&#32;(K-S,&#32;0)</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb">K</link>&#32;&gt;&#32;S)
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_namespacePayoffNamespace_1ab501f4bdb2c74995b98b666056c671fb">K</link>&#32;-&#32;S);
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0;
32 
33 }
</programlisting></section>
</section>
</section>
