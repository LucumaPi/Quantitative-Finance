<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_LatticeMechanisms_8cc">
<title>src/LatticeMechanisms.cc File Reference</title>
<indexterm><primary>src/LatticeMechanisms.cc</primary></indexterm>
<programlisting>#include &lt;duffy/Lattice.hh&gt;
#include &lt;duffy/Matrix.hh&gt;
#include &lt;duffy/MatrixMechanisms.hh&gt;
#include &lt;iostream&gt;
</programlisting>Include dependency graph for LatticeMechanisms.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="LatticeMechanisms_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="LatticeMechanisms_8cc__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_LatticeMechanisms_8cc_1ae4f004b555f8327266ad41c00c220545">LatticeMechanisms_CC</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class V , class I , int NumberNodes&gt; </para><para>void <link linkend="_LatticeMechanisms_8cc_1a4f588b04e89a733e6e27ba312ce437d3">print</link> (const <link linkend="_classLattice">Lattice</link>&lt; V, I, NumberNodes &gt; &amp;source)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_LatticeMechanisms_8cc_1ae4f004b555f8327266ad41c00c220545"/>    <section>
    <title>LatticeMechanisms_CC</title>
<indexterm><primary>LatticeMechanisms_CC</primary><secondary>LatticeMechanisms.cc</secondary></indexterm>
<indexterm><primary>LatticeMechanisms.cc</primary><secondary>LatticeMechanisms_CC</secondary></indexterm>
<para><computeroutput>#define LatticeMechanisms_CC</computeroutput></para><para>
Definition at line 13 of file LatticeMechanisms.cc.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_LatticeMechanisms_8cc_1a4f588b04e89a733e6e27ba312ce437d3"/>    <section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>LatticeMechanisms.cc</secondary></indexterm>
<indexterm><primary>LatticeMechanisms.cc</primary><secondary>print</secondary></indexterm>
<computeroutput>template&lt;class V , class I , int NumberNodes&gt; </computeroutput><para><computeroutput>void print (const <link linkend="_classLattice">Lattice</link>&lt; V, I, NumberNodes &gt; &amp; source)</computeroutput></para><para>
Definition at line 21 of file LatticeMechanisms.cc.</para>
<programlisting>22 {
23 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;j&#32;=&#32;source.<link linkend="_classLattice_1a07442df63222c6627f46efc4ae91acf9">MinIndex</link>();&#32;j&#32;&lt;=&#32;source.<link linkend="_classLattice_1a5cac27496a08f2a14d8e1d65732a4c34">MaxIndex</link>();&#32;j++)
24 &#32;&#32;&#32;&#32;{
25 
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\nBranch&#32;Number&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;j&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&#32;[&quot;</emphasis>;
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;source[j].MinIndex();&#32;i&#32;&lt;=&#32;source[j].<link linkend="_classLattice_1a5cac27496a08f2a14d8e1d65732a4c34">MaxIndex</link>();&#32;i++)
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;source[j][i]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
32 &#32;&#32;&#32;&#32;}
33 }
</programlisting></section>
</section>
</section>
