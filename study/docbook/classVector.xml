<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classVector">
<title>Vector&lt; V, I, S &gt; Class Template Reference</title>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;Vector.hh&gt;</computeroutput>
</para>
Inheritance diagram for Vector&lt; V, I, S &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classVector__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Vector&lt; V, I, S &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classVector__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classVector_1a765046708d9d87fdd6bff0f552cfe5fd">Vector</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classVector_1a739cc1db2c630929a3f832fb08fd7580">Vector</link> (I size)</para>
</listitem>
            <listitem><para><link linkend="_classVector_1a0005126cfc5b0d8021b44c895a10efb9">Vector</link> (I size, I start)</para>
</listitem>
            <listitem><para><link linkend="_classVector_1ad5f2b58884b5ede9f73fe3088e24b7ba">Vector</link> (I size, I start, const V &amp;val)</para>
</listitem>
            <listitem><para><link linkend="_classVector_1ae544cce04c5c298f42170a84fc78feaa">Vector</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para><link linkend="_classVector_1a96a0c65cc8ddb0fa8f56605b27530be4">Vector</link> (const <link linkend="_classArray">Array</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classVector_1a742d398867e106120e62421c1fa4df28">~Vector</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1ad1e72c9605dbcaecd4fb0b406bd9e949">operator=</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;source)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a4d3ac08839678685a6cc72df5d629588">operator-</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a9fd95354ab6ee0b1f9d6176485a5d07e">operator/</link> (const V &amp;a) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a078a9a245b2da118666687141b6267ad">operator+</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a64db21574df8fc0fb6f88806946883c5">operator-</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1ac859efad576cfb8d04cdb765da020610">operator*</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a2c7a743ad1d7aacf4a12dc03adbfb985">operator/</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v) const</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1ac28c73a1721c117307df604977747ce4">operator+=</link> (const V &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1aa34b7c6deb116fa3bf6c1c15129dde1f">operator-=</link> (const V &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1a0bed077f3b8953872d58ca79e679acc7">operator*=</link> (const V &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1a8b918b3139b18e5e27a8756bdd6ae3af">operator/=</link> (const V &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1a8432fd96e8676fad86aed380d109758d">operator+=</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1a95fab83dcb33c37fbc2d4ad08d5bd4b5">operator-=</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector_1aad9d123cf2ae44d7321401a7d37905d6">operator*=</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp;v)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a06bf0d108a6880772a9c401b2c1c9f9a">operator+</link> (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v, const V1 &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1aee35e383ba8ded77bfb4a81e632ba90e">operator+</link> (const V1 &amp;a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a46de9a6a17d4e83aea535fedd523e534">operator-</link> (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v, const V1 &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1ac4ee0f91525669ef041d18ad8c7b65e7">operator-</link> (const V1 &amp;a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1a8d4e3f3229aae77567c5fbf56687f540">operator*</link> (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v, const V1 &amp;a)</para>
</listitem>
            <listitem><para>template&lt;class V1 , class I1 , class S1 &gt; </para><para><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector_1aabeaa89ffa7b5582fb0ad3d8b7168e92">operator*</link> (const V1 &amp;a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp;v)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt;
class Vector&lt; V, I, S &gt;</title></simplesect>

<para>
Definition at line 14 of file Vector.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classVector_1a765046708d9d87fdd6bff0f552cfe5fd"/>    <section>
    <title>Vector()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> ( )</computeroutput></para><para>
Definition at line 41 of file Vector.cc.</para>
<programlisting>41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>()
42 {&#32;<emphasis role="comment">//&#32;Default&#32;constructor</emphasis>
43 }
</programlisting>    </section><anchor xml:id="_classVector_1a739cc1db2c630929a3f832fb08fd7580"/>    <section>
    <title>Vector()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> (I size)</computeroutput></para><para>
Definition at line 46 of file Vector.cc.</para>
<programlisting>46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>(size)
47 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;size.&#32;Start&#32;index=1.</emphasis>
48 }
</programlisting>    </section><anchor xml:id="_classVector_1a0005126cfc5b0d8021b44c895a10efb9"/>    <section>
    <title>Vector()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V , class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> (I size, I start)</computeroutput></para><para>
Definition at line 51 of file Vector.cc.</para>
<programlisting>51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>(size,&#32;start)
52 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;size&#32;&amp;&#32;start&#32;index</emphasis>
53 }
</programlisting>    </section><anchor xml:id="_classVector_1ad5f2b58884b5ede9f73fe3088e24b7ba"/>    <section>
    <title>Vector()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> (I size, I start, const V &amp; val)</computeroutput></para><para>
Definition at line 56 of file Vector.cc.</para>
<programlisting>56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>(size,&#32;start,&#32;val)
57 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;size&#32;&amp;&#32;start&#32;index</emphasis>
58 
59 &#32;&#32;&#32;&#32;
60 }
</programlisting>    </section><anchor xml:id="_classVector_1ae544cce04c5c298f42170a84fc78feaa"/>    <section>
    <title>Vector()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 64 of file Vector.cc.</para>
<programlisting>64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>(source)
65 {&#32;<emphasis role="comment">//&#32;Copy&#32;constructor</emphasis>
66 }
</programlisting>    </section><anchor xml:id="_classVector_1a96a0c65cc8ddb0fa8f56605b27530be4"/>    <section>
    <title>Vector()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::<link linkend="_classVector">Vector</link> (const <link linkend="_classArray">Array</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 69 of file Vector.cc.</para>
<programlisting>69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classArray">Array&lt;V, I, S&gt;</link>(source)
70 {&#32;<emphasis role="comment">//&#32;Constructor&#32;with&#32;a&#32;Array</emphasis>
71 }
</programlisting>    </section><anchor xml:id="_classVector_1a742d398867e106120e62421c1fa4df28"/>    <section>
    <title>~Vector()</title>
<indexterm><primary>~Vector</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>~Vector</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::~<link linkend="_classVector">Vector</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 74 of file Vector.cc.</para>
<programlisting>75 {&#32;<emphasis role="comment">//&#32;Destructor</emphasis>
76 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classVector_1ac859efad576cfb8d04cdb765da020610"/>    <section>
    <title>operator*()</title>
<indexterm><primary>operator*</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator* (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v) const</computeroutput></para>    </section><anchor xml:id="_classVector_1a0bed077f3b8953872d58ca79e679acc7"/>    <section>
    <title>operator*=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;class V, class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator*= (const V &amp; v)</computeroutput></para><para>
Definition at line 252 of file Vector.cc.</para>
<programlisting>253 {&#32;<emphasis role="comment">//&#32;Multiply&#32;every&#32;element&#32;by&#32;v</emphasis>
254 
255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;*&#32;v;
257 
258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
259 }
</programlisting>    </section><anchor xml:id="_classVector_1aad9d123cf2ae44d7321401a7d37905d6"/>    <section>
    <title>operator*=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator*= (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v)</computeroutput></para><para>
Definition at line 294 of file Vector.cc.</para>
<programlisting>295 {&#32;<emphasis role="comment">//&#32;Multiply&#32;the&#32;elements</emphasis>
296 
297 
298 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;*&#32;v[i];
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
302 }
</programlisting>    </section><anchor xml:id="_classVector_1a078a9a245b2da118666687141b6267ad"/>    <section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator+ (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v) const</computeroutput></para><para>
Definition at line 201 of file Vector.cc.</para>
<programlisting>202 {&#32;<emphasis role="comment">//&#32;Add&#32;the&#32;elements</emphasis>
203 
204 
205 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;vector&#32;of&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
206 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classArray_1a69342621906b355e8244466f9eeece71">Size</link>(),&#32;this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>());
207 
208 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Result[x]=Source[x]+v[x];</emphasis>
209 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;result[i]&#32;=&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;+&#32;v[i];
210 
211 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;result</emphasis>
212 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
213 }
</programlisting>    </section><anchor xml:id="_classVector_1ac28c73a1721c117307df604977747ce4"/>    <section>
    <title>operator+=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;class V, class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator+= (const V &amp; v)</computeroutput></para><para>
Definition at line 232 of file Vector.cc.</para>
<programlisting>233 {&#32;<emphasis role="comment">//&#32;Add&#32;v&#32;to&#32;every&#32;element</emphasis>
234 
235 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;+&#32;v;
237 
238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
239 }
</programlisting>    </section><anchor xml:id="_classVector_1a8432fd96e8676fad86aed380d109758d"/>    <section>
    <title>operator+=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator+= (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v)</computeroutput></para><para>
Definition at line 272 of file Vector.cc.</para>
<programlisting>273 {&#32;<emphasis role="comment">//&#32;Add&#32;the&#32;elements</emphasis>
274 
275 
276 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;+&#32;v[i];
278 
279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
280 }
</programlisting>    </section><anchor xml:id="_classVector_1a4d3ac08839678685a6cc72df5d629588"/>    <section>
    <title>operator-()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V , class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator- ( ) const</computeroutput></para>
<para>BUG BUG DAMN IT result[i] = - result[i];</para>
<para>
Definition at line 95 of file Vector.cc.</para>
<programlisting>96 {&#32;<emphasis role="comment">//&#32;Unary&#32;minus</emphasis>
97 
98 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;vector&#32;of&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
99 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classArray_1a69342621906b355e8244466f9eeece71">Size</link>(),&#32;this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>());
100 
101 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;all&#32;elements&#32;negative</emphasis>
102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
104 &#32;&#32;&#32;&#32;result[i]&#32;=&#32;-&#32;(*<emphasis role="keyword">this</emphasis>)[i];
105 
106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;result</emphasis>
107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
108 }
</programlisting>    </section><anchor xml:id="_classVector_1a64db21574df8fc0fb6f88806946883c5"/>    <section>
    <title>operator-()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator- (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v) const</computeroutput></para><para>
Definition at line 216 of file Vector.cc.</para>
<programlisting>217 {&#32;<emphasis role="comment">//&#32;Subtract&#32;the&#32;elements</emphasis>
218 
219 
220 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;vector&#32;of&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
221 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classArray_1a69342621906b355e8244466f9eeece71">Size</link>(),&#32;this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>());
222 
223 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Result[x]=Source[x]-v[x];</emphasis>
224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;result[i]&#32;=&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;-&#32;v[i];
225 
226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;result</emphasis>
227 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
228 }
</programlisting>    </section><anchor xml:id="_classVector_1aa34b7c6deb116fa3bf6c1c15129dde1f"/>    <section>
    <title>operator-=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;class V, class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator-= (const V &amp; v)</computeroutput></para><para>
Definition at line 242 of file Vector.cc.</para>
<programlisting>243 {&#32;<emphasis role="comment">//&#32;Subtract&#32;v&#32;from&#32;every&#32;element</emphasis>
244 
245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;-&#32;v;
247 
248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
249 }
</programlisting>    </section><anchor xml:id="_classVector_1a95fab83dcb33c37fbc2d4ad08d5bd4b5"/>    <section>
    <title>operator-=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator-= (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v)</computeroutput></para><para>
Definition at line 283 of file Vector.cc.</para>
<programlisting>284 {&#32;<emphasis role="comment">//&#32;Subtract&#32;the&#32;elements</emphasis>
285 
286 
287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;inIndex();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;-&#32;v[i];
289 &#32;&#32;&#32;&#32;;
290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
291 }
</programlisting>    </section><anchor xml:id="_classVector_1a9fd95354ab6ee0b1f9d6176485a5d07e"/>    <section>
    <title>operator/()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;class V, class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator/ (const V &amp; a) const</computeroutput></para><para>
Definition at line 185 of file Vector.cc.</para>
<programlisting>186 {&#32;<emphasis role="comment">//&#32;Add&#32;v&#32;to&#32;every&#32;element</emphasis>
187 
188 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;new&#32;vector&#32;of&#32;same&#32;size&#32;and&#32;same&#32;starting&#32;index</emphasis>
189 &#32;&#32;&#32;&#32;<link linkend="_classVector">Vector&lt;V, I, S&gt;</link>&#32;result(this-&gt;<link linkend="_classArray_1a69342621906b355e8244466f9eeece71">Size</link>(),&#32;this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>());
190 
191 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;all&#32;elements&#32;+&#32;v</emphasis>
192 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i&#32;=&#32;this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&#32;&lt;=&#32;this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result[i]&#32;=&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;/&#32;a;
194 
195 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;result</emphasis>
196 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
197 }
</programlisting>    </section><anchor xml:id="_classVector_1a2c7a743ad1d7aacf4a12dc03adbfb985"/>    <section>
    <title>operator/()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator/ (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; v) const</computeroutput></para>    </section><anchor xml:id="_classVector_1a8b918b3139b18e5e27a8756bdd6ae3af"/>    <section>
    <title>operator/=()</title>
<indexterm><primary>operator/=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;class V, class I , class S &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator/= (const V &amp; v)</computeroutput></para><para>
Definition at line 262 of file Vector.cc.</para>
<programlisting>263 {&#32;<emphasis role="comment">//&#32;Divide&#32;every&#32;element&#32;by&#32;v</emphasis>
264 
265 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(I&#32;i=this-&gt;<link linkend="_classArray_1acffe058a1dd631b05fb71a83e27b445a">MinIndex</link>();&#32;i&lt;=this-&gt;<link linkend="_classArray_1a8ce7791cd1ec7ba63ec71772a7144965">MaxIndex</link>();&#32;i++)&#32;
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)[i]&#32;=&#32;(*this)[i]&#32;/&#32;v;
267 
268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
269 }
</programlisting>    </section><anchor xml:id="_classVector_1ad1e72c9605dbcaecd4fb0b406bd9e949"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class V, class I, class S&gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; <link linkend="_classVector">Vector</link>&lt; V, I, S &gt;::operator= (const <link linkend="_classVector">Vector</link>&lt; V, I, S &gt; &amp; source)</computeroutput></para><para>
Definition at line 82 of file Vector.cc.</para>
<programlisting>83 {&#32;<emphasis role="comment">//&#32;Assignment&#32;operator</emphasis>
84 
85 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exit&#32;if&#32;same&#32;object</emphasis>
86 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>==&amp;source)&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
87 
88 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Call&#32;baseclass&#32;assignment</emphasis>
89 &#32;&#32;&#32;&#32;<link linkend="_classArray_1ac27f5b9655cda7daecc9d09298a454bf">Array&lt;V, I, S&gt;::operator = </link>(source);
90 
91 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
92 }
</programlisting></section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classVector_1aabeaa89ffa7b5582fb0ad3d8b7168e92"/>    <section>
    <title>operator*<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator* (const V1 &amp; a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v)<computeroutput>[friend]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classVector_1a8d4e3f3229aae77567c5fbf56687f540"/>    <section>
    <title>operator*<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator* (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v, const V1 &amp; a)<computeroutput>[friend]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classVector_1aee35e383ba8ded77bfb4a81e632ba90e"/>    <section>
    <title>operator+<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator+ (const V1 &amp; a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v)<computeroutput>[friend]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classVector_1a06bf0d108a6880772a9c401b2c1c9f9a"/>    <section>
    <title>operator+<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator+ (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v, const V1 &amp; a)<computeroutput>[friend]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classVector_1ac4ee0f91525669ef041d18ad8c7b65e7"/>    <section>
    <title>operator-<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator- (const V1 &amp; a, const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v)<computeroutput>[friend]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classVector_1a46de9a6a17d4e83aea535fedd523e534"/>    <section>
    <title>operator-<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector&lt; V, I, S &gt;</secondary></indexterm>
<indexterm><primary>Vector&lt; V, I, S &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;class V, class I = int, class S = FullArray&lt;V&gt;&gt; </computeroutput><computeroutput>template&lt;class V1 , class I1 , class S1 &gt; </computeroutput><para><computeroutput><link linkend="_classVector">Vector</link>&lt;V, I, S&gt; operator- (const <link linkend="_classVector">Vector</link>&lt; V1, I1, S1 &gt; &amp; v, const V1 &amp; a)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_Vector_8hh">Vector.hh</link>src/<link linkend="_Vector_8cc">Vector.cc</link></section>
</section>
