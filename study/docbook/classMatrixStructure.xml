<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classMatrixStructure">
<title>MatrixStructure&lt; TValue &gt; Class Template Reference</title>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;MatrixStructure.hh&gt;</computeroutput>
</para>
Inheritance diagram for MatrixStructure&lt; TValue &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classMatrixStructure__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for MatrixStructure&lt; TValue &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classMatrixStructure__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classMatrixStructure_1ab9e6d544c166b894b28f7b83a2114afd">MatrixStructure</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classMatrixStructure_1af025d97b413beebcd551e5263365624c">MatrixStructure</link> (const <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt; &amp;source)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classMatrixStructure_1a63b1628587fc0e268b945f7e4b834624">~MatrixStructure</link> ()</para>
</listitem>
            <listitem><para>virtual size_t <link linkend="_classMatrixStructure_1a1f9a91f713f03ceeda90e4dc3d17dcb3">Rows</link> () const =0</para>
</listitem>
            <listitem><para>virtual size_t <link linkend="_classMatrixStructure_1a33fe5393a149b31d428a1931f1e0e7e1">Columns</link> () const =0</para>
</listitem>
            <listitem><para>const TValue &amp; <link linkend="_classMatrixStructure_1a30fd4009debf853fa0cf5eec196c1d76">Element</link> (size_t row, size_t column) const</para>
</listitem>
            <listitem><para>size_t <link linkend="_classMatrixStructure_1a5ea22c53b73b04e14ca1ab05e8b22be0">MinRowIndex</link> () const</para>
</listitem>
            <listitem><para>size_t <link linkend="_classMatrixStructure_1aeadfc044bf86c889685062365303cddf">MaxRowIndex</link> () const</para>
</listitem>
            <listitem><para>size_t <link linkend="_classMatrixStructure_1a71f5cf156f0d3efa33b2aefa639b26b7">MinColumnIndex</link> () const</para>
</listitem>
            <listitem><para>size_t <link linkend="_classMatrixStructure_1a983c911ffca688272199c4d5dd703931">MaxColumnIndex</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classMatrixStructure_1ad42e97986dd167aec02a4483629b581c">Element</link> (size_t row, size_t column, const TValue &amp;val)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classArrayStructure">ArrayStructure</link>&lt; TValue &gt; &amp; <link linkend="_classMatrixStructure_1aac06c3e30a639e2888a0a5bc367e67f8">operator[]</link> (size_t index)=0</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classArrayStructure">ArrayStructure</link>&lt; TValue &gt; &amp; <link linkend="_classMatrixStructure_1a5d4b683a76d4d5dde2b1d09111cdce3c">operator[]</link> (size_t index) const =0</para>
</listitem>
            <listitem><para>const TValue &amp; <link linkend="_classMatrixStructure_1a9bb17d896587d5810e745277975e5212">operator()</link> (size_t row, size_t column) const</para>
</listitem>
            <listitem><para>TValue &amp; <link linkend="_classMatrixStructure_1acc9e979ac78746814e83f0f8c535ad75">operator()</link> (size_t row, size_t column)</para>
</listitem>
            <listitem><para><link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt; &amp; <link linkend="_classMatrixStructure_1a1d17ffed41cc515e70f90208b999191e">operator=</link> (const <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt; &amp;source)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class TValue&gt;
class MatrixStructure&lt; TValue &gt;</title></simplesect>

<para>
Definition at line 14 of file MatrixStructure.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classMatrixStructure_1ab9e6d544c166b894b28f7b83a2114afd"/>    <section>
    <title>MatrixStructure()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MatrixStructure</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MatrixStructure</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput><link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::<link linkend="_classMatrixStructure">MatrixStructure</link> ( )</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1af025d97b413beebcd551e5263365624c"/>    <section>
    <title>MatrixStructure()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MatrixStructure</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MatrixStructure</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput><link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::<link linkend="_classMatrixStructure">MatrixStructure</link> (const <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt; &amp; source)</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a63b1628587fc0e268b945f7e4b834624"/>    <section>
    <title>~MatrixStructure()</title>
<indexterm><primary>~MatrixStructure</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>~MatrixStructure</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>virtual <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::~<link linkend="_classMatrixStructure">MatrixStructure</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classMatrixStructure_1a33fe5393a149b31d428a1931f1e0e7e1"/>    <section>
    <title>Columns()</title>
<indexterm><primary>Columns</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>Columns</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>virtual size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::Columns ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classFullMatrix_1a6d02c0f09e188825938f9af6ae708614">FullMatrix&lt; TValue, TA &gt;</link>, <link linkend="_classFullMatrix_1a6d02c0f09e188825938f9af6ae708614">FullMatrix&lt; double &gt;</link>, and <link linkend="_classFullMatrix_1a6d02c0f09e188825938f9af6ae708614">FullMatrix&lt; V &gt;</link>.</para>
    </section><anchor xml:id="_classMatrixStructure_1a30fd4009debf853fa0cf5eec196c1d76"/>    <section>
    <title>Element()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Element</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>Element</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>const TValue&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::Element (size_t row, size_t column) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1ad42e97986dd167aec02a4483629b581c"/>    <section>
    <title>Element()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Element</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>Element</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>void <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::Element (size_t row, size_t column, const TValue &amp; val)</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a983c911ffca688272199c4d5dd703931"/>    <section>
    <title>MaxColumnIndex()</title>
<indexterm><primary>MaxColumnIndex</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MaxColumnIndex</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::MaxColumnIndex ( ) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1aeadfc044bf86c889685062365303cddf"/>    <section>
    <title>MaxRowIndex()</title>
<indexterm><primary>MaxRowIndex</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MaxRowIndex</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::MaxRowIndex ( ) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a71f5cf156f0d3efa33b2aefa639b26b7"/>    <section>
    <title>MinColumnIndex()</title>
<indexterm><primary>MinColumnIndex</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MinColumnIndex</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::MinColumnIndex ( ) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a5ea22c53b73b04e14ca1ab05e8b22be0"/>    <section>
    <title>MinRowIndex()</title>
<indexterm><primary>MinRowIndex</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>MinRowIndex</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::MinRowIndex ( ) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1acc9e979ac78746814e83f0f8c535ad75"/>    <section>
    <title>operator()()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>TValue&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::operator() (size_t row, size_t column)</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a9bb17d896587d5810e745277975e5212"/>    <section>
    <title>operator()()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>const TValue&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::operator() (size_t row, size_t column) const</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a1d17ffed41cc515e70f90208b999191e"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput><link linkend="_classMatrixStructure">MatrixStructure</link>&lt;TValue&gt;&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::operator= (const <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt; &amp; source)</computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a5d4b683a76d4d5dde2b1d09111cdce3c"/>    <section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>virtual const <link linkend="_classArrayStructure">ArrayStructure</link>&lt;TValue&gt;&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::operator[] (size_t index) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1aac06c3e30a639e2888a0a5bc367e67f8"/>    <section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>virtual <link linkend="_classArrayStructure">ArrayStructure</link>&lt;TValue&gt;&amp; <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::operator[] (size_t index)<computeroutput>[pure virtual]</computeroutput></computeroutput></para>    </section><anchor xml:id="_classMatrixStructure_1a1f9a91f713f03ceeda90e4dc3d17dcb3"/>    <section>
    <title>Rows()</title>
<indexterm><primary>Rows</primary><secondary>MatrixStructure&lt; TValue &gt;</secondary></indexterm>
<indexterm><primary>MatrixStructure&lt; TValue &gt;</primary><secondary>Rows</secondary></indexterm>
<computeroutput>template&lt;class TValue&gt; </computeroutput><para><computeroutput>virtual size_t <link linkend="_classMatrixStructure">MatrixStructure</link>&lt; TValue &gt;::Rows ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_classFullMatrix_1a1fb7853dc531966114d01cf5720dd6aa">FullMatrix&lt; TValue, TA &gt;</link>, <link linkend="_classFullMatrix_1a1fb7853dc531966114d01cf5720dd6aa">FullMatrix&lt; double &gt;</link>, and <link linkend="_classFullMatrix_1a1fb7853dc531966114d01cf5720dd6aa">FullMatrix&lt; V &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/duffy/<link linkend="_MatrixStructure_8hh">MatrixStructure.hh</link></section>
</section>
