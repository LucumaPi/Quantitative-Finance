<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_TestSparseMatrix_8cc">
<title>tests/TestSparseMatrix.cc File Reference</title>
<indexterm><primary>tests/TestSparseMatrix.cc</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;map&gt;
#include &lt;string&gt;
</programlisting>Include dependency graph for TestSparseMatrix.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="TestSparseMatrix_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structSparseMatrix">SparseMatrix&lt; N &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef std::map&lt; int, double &gt; <link linkend="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028">SparseRow</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;int N&gt; </para><para>void <link linkend="_TestSparseMatrix_8cc_1a237768fa154c8614d2556c9f1416c1fc">print</link> (<link linkend="_structSparseMatrix">SparseMatrix</link>&lt; <link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link> &gt; &amp;sm)</para>
</listitem>
            <listitem><para>int <link linkend="_TestSparseMatrix_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028"/>    <section>
    <title>SparseRow</title>
<indexterm><primary>SparseRow</primary><secondary>TestSparseMatrix.cc</secondary></indexterm>
<indexterm><primary>TestSparseMatrix.cc</primary><secondary>SparseRow</secondary></indexterm>
<para><computeroutput>typedef std::map&lt;int, double&gt; <link linkend="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028">SparseRow</link></computeroutput></para><para>
Definition at line 18 of file TestSparseMatrix.cc.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_TestSparseMatrix_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>TestSparseMatrix.cc</secondary></indexterm>
<indexterm><primary>TestSparseMatrix.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 47 of file TestSparseMatrix.cc.</para>
<programlisting>48 {
49 
50 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialise&#32;the&#32;each&#32;row</emphasis>
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;=&#32;5;
53 
54 &#32;&#32;&#32;&#32;<link linkend="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028">SparseRow</link>&#32;current;
55 &#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(0,&#32;-2.0));
56 &#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(1,&#32;1.0));
57 &#32;&#32;&#32;&#32;<link linkend="_structSparseMatrix">SparseMatrix&lt;N&gt;</link>&#32;sparseMat;
58 &#32;&#32;&#32;&#32;sparseMat.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[0]&#32;=&#32;current;
59 &#32;&#32;&#32;&#32;
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentIndex&#32;=&#32;0;
61 
62 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;row&#32;=&#32;1;&#32;row&#32;&lt;&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;-&#32;1;&#32;row++)
63 &#32;&#32;&#32;&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Insert&#32;3&#32;elements.</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current.clear();
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(currentIndex,&#32;1.0));
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(currentIndex&#32;+&#32;1,&#32;-2.0));
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(currentIndex&#32;+&#32;2,&#32;1.0));
69 
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sparseMat.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[row]&#32;=&#32;current;
71 &#32;&#32;&#32;&#32;
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentIndex++;
73 &#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;&#32;&#32;current.clear();
76 &#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;-&#32;2,&#32;1.0));
77 &#32;&#32;&#32;&#32;current.insert(std::pair&lt;int,&#32;double&gt;&#32;(<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;-&#32;1,&#32;-2.0));
78 &#32;&#32;&#32;&#32;sparseMat.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>&#32;-&#32;1]&#32;=&#32;current;
79 
80 &#32;&#32;&#32;&#32;<link linkend="_TestSparseMatrix_8cc_1a237768fa154c8614d2556c9f1416c1fc">print</link>(sparseMat);
81 
82 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
83 }
</programlisting>    </section><anchor xml:id="_TestSparseMatrix_8cc_1a237768fa154c8614d2556c9f1416c1fc"/>    <section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>TestSparseMatrix.cc</secondary></indexterm>
<indexterm><primary>TestSparseMatrix.cc</primary><secondary>print</secondary></indexterm>
<computeroutput>template&lt;int N&gt; </computeroutput><para><computeroutput>void print (<link linkend="_structSparseMatrix">SparseMatrix</link>&lt; <link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link> &gt; &amp; sm)</computeroutput></para><para>
Definition at line 26 of file TestSparseMatrix.cc.</para>
<programlisting>27 {
28 &#32;&#32;&#32;&#32;<link linkend="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028">SparseRow</link>&#32;sr;
29 &#32;&#32;&#32;&#32;SparseRow::const_iterator&#32;it;<emphasis role="comment">//maybe&#32;optional&#32;typename</emphasis>
30 
31 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;row&#32;=&#32;0;&#32;row&#32;&lt;&#32;<link linkend="_TestImpliedVolatility_8cc_1a6cbb82a21dec4c4f36c3f78340be64de">N</link>;&#32;row++)
32 &#32;&#32;&#32;&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_TestSparseMatrix_8cc_1ab262a20bb4494b0d29df387aee938028">SparseRow</link>&#32;sr&#32;=&#32;sm.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[row];
34 &#32;&#32;&#32;&#32;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;iterate&#32;over&#32;row</emphasis>
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(it&#32;=&#32;sm.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[row].begin();&#32;it&#32;!=&#32;sm.<link linkend="_structSparseMatrix_1a84cb1ac886b0a129821d26e41eb52162">data</link>[row].end();&#32;it++)
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;(*it).second&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
42 &#32;&#32;&#32;&#32;}
43 
44 }
</programlisting></section>
</section>
</section>
