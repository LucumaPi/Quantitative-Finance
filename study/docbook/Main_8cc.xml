<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Main_8cc">
<title>tests/Main.cc File Reference</title>
<indexterm><primary>tests/Main.cc</primary></indexterm>
<programlisting>#include &lt;duffy/Point.hh&gt;
#include &lt;duffy/Line.hh&gt;
#include &lt;duffy/GenericComposite.hh&gt;
</programlisting>Include dependency graph for Main.cc:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="Main_8cc__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link> (const <link linkend="_classGenericComposite">GenericComposite</link>&lt; <link linkend="_classShape">Shape</link> &gt; &amp;sc)</para>
</listitem>
            <listitem><para>int <link linkend="_Main_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_Main_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>Main.cc</secondary></indexterm>
<indexterm><primary>Main.cc</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line 27 of file Main.cc.</para>
<programlisting>28 {
29 &#32;&#32;&#32;&#32;<link linkend="_classGenericComposite">GenericComposite&lt;Shape&gt;</link>&#32;sc;
30 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Empty&#32;composite:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
31 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
32 
33 &#32;&#32;&#32;&#32;<link linkend="_classShape">Shape</link>*&#32;s&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classPoint">Point</link>(1.0,&#32;3.0);
34 
35 &#32;&#32;&#32;&#32;sc.<link linkend="_classGenericComposite_1a60c8ad8f14bb1977d6a7dd6e739a9ed3">AddBack</link>(*s);
36 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;1&#32;shape:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
37 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
38 
39 &#32;&#32;&#32;&#32;<link linkend="_classShape">Shape</link>*&#32;s1&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classLine">Line</link>(<link linkend="_classPoint">Point</link>(),&#32;<link linkend="_classPoint">Point</link>());
40 &#32;&#32;&#32;&#32;sc.<link linkend="_classGenericComposite_1a60c8ad8f14bb1977d6a7dd6e739a9ed3">AddBack</link>(*s1);
41 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;2&#32;shapes:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
42 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
43 
44 &#32;&#32;&#32;&#32;<link linkend="_classShape">Shape</link>*&#32;s2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classLine">Line</link>(<link linkend="_classPoint">Point</link>(1,1),&#32;<link linkend="_classPoint">Point</link>(1,2));
45 &#32;&#32;&#32;&#32;sc.<link linkend="_classGenericComposite_1a6fce8da197eeb5543ccf2ab7a914d414">AddFront</link>(*s2);
46 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;3&#32;shapes:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
47 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
48 
49 &#32;&#32;&#32;&#32;sc.<link linkend="_classGenericComposite_1a04c208f2363ead79d638fd590d7ebf24">RemoveLast</link>();
50 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Remove&#32;last:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
51 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
52 
53 &#32;&#32;&#32;&#32;sc.<link linkend="_classGenericComposite_1adbefe400c6e574f2f3a7b4b02b8fee8e">RemoveAll</link>();
54 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Remove&#32;all:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;sc.<link linkend="_classGenericComposite_1a0ffc53805f90516d303a8caa69f09d5b">Count</link>()&#32;&lt;&lt;&#32;std::endl;
55 &#32;&#32;&#32;&#32;<link linkend="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4">print</link>(sc);
56 
57 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
58 }
</programlisting>    </section><anchor xml:id="_Main_8cc_1ae5bec601d1dd6d089d2ec6a82eae5ba4"/>    <section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>Main.cc</secondary></indexterm>
<indexterm><primary>Main.cc</primary><secondary>print</secondary></indexterm>
<para><computeroutput>void print (const <link linkend="_classGenericComposite">GenericComposite</link>&lt; <link linkend="_classShape">Shape</link> &gt; &amp; sc)</computeroutput></para><para>
Definition at line 13 of file Main.cc.</para>
<programlisting>14 {&#32;<emphasis role="comment">//&#32;Print&#32;the&#32;shape&#32;composite</emphasis>
15 
16 &#32;&#32;&#32;&#32;<link linkend="_classGenericComposite">GenericComposite&lt;Shape&gt;::const_iterator</link>&#32;i;
17 
18 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=sc.<link linkend="_classGenericComposite_1ac98912eb4aaca339cf023b30fa5c6cdf">Begin</link>();&#32;i!=sc.<link linkend="_classGenericComposite_1afaad3512b4bba5b4e4a691ec44ed7857">End</link>();&#32;i++)
19 &#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::type_info&amp;&#32;pp&#32;=&#32;<emphasis role="keyword">typeid</emphasis>(*i);
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;pp.name()&#32;&lt;&lt;&#32;std::endl;
22 &#32;&#32;&#32;&#32;}
23 
24 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;
25 }
</programlisting></section>
</section>
</section>
