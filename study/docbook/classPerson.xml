<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classPerson">
<title>Person Class Reference</title>
<indexterm><primary>Person</primary></indexterm>
Inheritance diagram for Person:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPerson__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Person:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classPerson__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classPerson_1a27cebd22009c2f3d495523832d4489bc"/><emphasis role="strong">Person</emphasis> (const std::string &amp;name, const <link linkend="_classDatasimDate">DatasimDate</link> &amp;DateofBirth)</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aaf046d78d4c4dff5130fc25727932345"/>void <emphasis role="strong">print</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aebd438308d431c5a20070a64288932d8"/>int <emphasis role="strong">age</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a27cebd22009c2f3d495523832d4489bc"/><emphasis role="strong">Person</emphasis> (const std::string &amp;name, const <link linkend="_classDatasimDate">DatasimDate</link> &amp;DateofBirth)</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aaf046d78d4c4dff5130fc25727932345"/>void <emphasis role="strong">print</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a9415b8b11b532c063f00737430a7694f"/>virtual void <emphasis role="strong">DeepPrint</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aebd438308d431c5a20070a64288932d8"/>int <emphasis role="strong">age</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a27cebd22009c2f3d495523832d4489bc"/><emphasis role="strong">Person</emphasis> (const std::string &amp;name, const <link linkend="_classDatasimDate">DatasimDate</link> &amp;DateofBirth)</para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aaf046d78d4c4dff5130fc25727932345"/>void <emphasis role="strong">print</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classPerson_1ae6ee626f8471b70bef418998ab35623e"/>std::string <emphasis role="strong">nam</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1abc4a5fbe6e5412b54fcbdf6446b4a29e"/><link linkend="_classDatasimDate">DatasimDate</link> <emphasis role="strong">dob</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1aa4dfae60adf8adfe9e0da019e0993f04"/><link linkend="_classDatasimDate">DatasimDate</link> <emphasis role="strong">createdD</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1ac5039520556656682bd4e49b8069e4a4"/><link linkend="_classDatasimDateTime">DatasimDateTime</link> <emphasis role="strong">createdT</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1ac6d7e0d7d60ff303b4dfde117c4356ea"/><link linkend="_classWrapper">Wrapper</link>&lt; std::string &gt; <emphasis role="strong">nam</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a1bf771e74a8e1e3443394ef580e02de4"/><link linkend="_classWrapper">Wrapper</link>&lt; <link linkend="_classDatasimDate">DatasimDate</link> &gt; <emphasis role="strong">dob</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a3c2f35bd4d69abc7ad29489ae58545e9"/><link linkend="_classWrapper">Wrapper</link>&lt; <link linkend="_classDatasimDate">DatasimDate</link> &gt; <emphasis role="strong">createdD</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classPerson_1a05d516e45631e8e7653e456d70b9d404"/><link linkend="_classSimplePropertySet">SimplePropertySet</link>&lt; std::string, <link linkend="_classAnyType">AnyType</link> * &gt; <emphasis role="strong">props</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/Person.hhinclude/duffy/PersonAndEmployee.hhtests/TestWrapper.ccsrc/Person.cc</section>
