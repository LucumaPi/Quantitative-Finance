<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classProperty">
<title>Property&lt; Name, Value &gt; Class Template Reference</title>
<indexterm><primary>Property&lt; Name, Value &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;Property.hh&gt;</computeroutput>
</para>
Inheritance diagram for Property&lt; Name, Value &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classProperty__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Property&lt; Name, Value &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classProperty__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classProperty_1af8aa99d860cce115830f820445e6ef82">Property</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classProperty_1a0ca61b9ce1a8d06dea7b794d922c489f">Property</link> (const Name &amp;<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_classProperty_1affc9972cb059fcb9d6fd6a2935725db2">Property</link> (const Name &amp;<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>, const Value &amp;t)</para>
</listitem>
            <listitem><para><link linkend="_classProperty_1a08238ca37786059a03117ddb7fc4ff51">Property</link> (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp;source)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classProperty_1a21f18bbb89de80e8b1a52ba3279a436d">~Property</link> ()</para>
</listitem>
            <listitem><para>virtual Value <link linkend="_classProperty_1a682f715ad70b45bef80b85d10940f370">operator()</link> () const</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classProperty_1a7b923a1fd183b38fc1629852e06b39b6">operator()</link> (const Value &amp;t)</para>
</listitem>
            <listitem><para>virtual Name <link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; <link linkend="_classProperty_1ac7d773c6385a82a906e53701c2cc163b">operator=</link> (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp;source)</para>
</listitem>
            <listitem><para><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; * <link linkend="_classProperty_1a7e1e5e423a9021764d505bd982a2b4da">Copy</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_classProperty_1ab70ddb3064e0ae6cfbcc661d5bc4505a">operator==</link> (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp;prop2)</para>
</listitem>
            <listitem><para>bool <link linkend="_classProperty_1a0f89884cb3d81307f9f325c8c45cb82e">operator!=</link> (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp;source)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Name = std::string, class Value = double&gt;
class Property&lt; Name, Value &gt;</title></simplesect>

<para>
Definition at line 22 of file Property.hh.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classProperty_1af8aa99d860cce115830f820445e6ef82"/>    <section>
    <title>Property()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>Property</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>Property</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::<link linkend="_classProperty">Property</link> ( )</computeroutput></para><para>
Definition at line 26 of file Property.cc.</para>
<programlisting>27 {<emphasis role="comment">//&#32;Default&#32;constructor</emphasis>
28 
29 &#32;&#32;&#32;&#32;nam&#32;=&#32;Name();
30 &#32;&#32;&#32;&#32;con&#32;=&#32;Value();
31 }
</programlisting>    </section><anchor xml:id="_classProperty_1a0ca61b9ce1a8d06dea7b794d922c489f"/>    <section>
    <title>Property()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>Property</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>Property</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::<link linkend="_classProperty">Property</link> (const Name &amp; name)</computeroutput></para><para>
Definition at line 34 of file Property.cc.</para>
<programlisting>35 {<emphasis role="comment">//&#32;Constructor&#32;&#32;</emphasis>
36 
37 &#32;&#32;&#32;&#32;nam&#32;=&#32;<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>;
38 &#32;&#32;&#32;&#32;con&#32;=&#32;Value();
39 }
</programlisting>    </section><anchor xml:id="_classProperty_1affc9972cb059fcb9d6fd6a2935725db2"/>    <section>
    <title>Property()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>Property</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>Property</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::<link linkend="_classProperty">Property</link> (const Name &amp; name, const Value &amp; t)</computeroutput></para><para>
Definition at line 43 of file Property.cc.</para>
<programlisting>44 {<emphasis role="comment">//&#32;Constructor&#32;&#32;</emphasis>
45 
46 &#32;&#32;&#32;&#32;nam&#32;=&#32;<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>;
47 &#32;&#32;&#32;&#32;con&#32;=&#32;t;
48 }
</programlisting>    </section><anchor xml:id="_classProperty_1a08238ca37786059a03117ddb7fc4ff51"/>    <section>
    <title>Property()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>Property</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>Property</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::<link linkend="_classProperty">Property</link> (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; source)</computeroutput></para><para>
Definition at line 51 of file Property.cc.</para>
<programlisting>52 {<emphasis role="comment">//&#32;Copy-constructor</emphasis>
53 
54 &#32;&#32;&#32;&#32;nam&#32;=&#32;source.nam;
55 &#32;&#32;&#32;&#32;con&#32;=&#32;source.con;
56 }
</programlisting>    </section><anchor xml:id="_classProperty_1a21f18bbb89de80e8b1a52ba3279a436d"/>    <section>
    <title>~Property()</title>
<indexterm><primary>~Property</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>~Property</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::~<link linkend="_classProperty">Property</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 59 of file Property.cc.</para>
<programlisting>60 {<emphasis role="comment">//&#32;Destructor</emphasis>
61 
62 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classProperty_1a7e1e5e423a9021764d505bd982a2b4da"/>    <section>
    <title>Copy()</title>
<indexterm><primary>Copy</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>Copy</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classPropertyThing">PropertyThing</link>&lt; Name, Value &gt; * <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::Copy ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classPropertyThing_1a50223b9a9f80477ad12c4625a74479d6">PropertyThing&lt; Name, Value &gt;</link>.</para>
<para>
Definition at line 107 of file Property.cc.</para>
<programlisting>108 {
109 
110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classProperty_1af8aa99d860cce115830f820445e6ef82">Property</link>(*<emphasis role="keyword">this</emphasis>);
111 }
</programlisting>    </section><anchor xml:id="_classProperty_1a61070c4a41dcdbc890c6b27146931e97"/>    <section>
    <title>name()</title>
<indexterm><primary>name</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>name</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput>Name <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::name ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 137 of file Property.cc.</para>
<programlisting>138 {
139 
140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nam;
141 }
</programlisting>    </section><anchor xml:id="_classProperty_1a0f89884cb3d81307f9f325c8c45cb82e"/>    <section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput>bool <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::operator!= (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; source)</computeroutput></para><para>
Definition at line 155 of file Property.cc.</para>
<programlisting>156 {
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(*this&#32;==&#32;source)</emphasis>
159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
160 <emphasis role="comment"></emphasis>
161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;true;</emphasis>
162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>&#32;==&#32;&amp;prop2)
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
165 
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
167 
168 }
</programlisting>    </section><anchor xml:id="_classProperty_1a682f715ad70b45bef80b85d10940f370"/>    <section>
    <title>operator()()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput>Value <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::operator() ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 123 of file Property.cc.</para>
<programlisting>124 {
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;con;
127 
128 }
</programlisting>    </section><anchor xml:id="_classProperty_1a7b923a1fd183b38fc1629852e06b39b6"/>    <section>
    <title>operator()()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput>void <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::operator() (const Value &amp; t)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line 130 of file Property.cc.</para>
<programlisting>131 {
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;con&#32;=&#32;t;
134 
135 }
</programlisting>    </section><anchor xml:id="_classProperty_1ac7d773c6385a82a906e53701c2cc163b"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput><link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::operator= (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; source)</computeroutput></para><para>
Definition at line 65 of file Property.cc.</para>
<programlisting>66 {<emphasis role="comment">//&#32;Assignment&#32;operator&#32;</emphasis>
67 
68 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;==&#32;&amp;source)
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
70 
71 &#32;&#32;&#32;&#32;nam&#32;=&#32;source.nam;
72 &#32;&#32;&#32;&#32;con&#32;=&#32;source.con;
73 
74 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
75 }
</programlisting>    </section><anchor xml:id="_classProperty_1ab70ddb3064e0ae6cfbcc661d5bc4505a"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Property&lt; Name, Value &gt;</secondary></indexterm>
<indexterm><primary>Property&lt; Name, Value &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;class Name , class Value &gt; </computeroutput><para><computeroutput>bool <link linkend="_classProperty">Property</link>&lt; Name, Value &gt;::operator== (const <link linkend="_classProperty">Property</link>&lt; Name, Value &gt; &amp; prop2)</computeroutput></para><para>
Definition at line 145 of file Property.cc.</para>
<programlisting>146 {
147 
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>&#32;==&#32;prop2.<link linkend="_classProperty_1a61070c4a41dcdbc890c6b27146931e97">name</link>())
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
150 
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
152 
153 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/duffy/<link linkend="_Property_8hh">Property.hh</link>src/<link linkend="_Property_8cc">Property.cc</link></section>
</section>
